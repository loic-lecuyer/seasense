{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/compass/compass.component.ts","./src/app/components/compass/compass.component.html","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/hud-button/hud-button.component.ts","./src/app/components/hud-button/hud-button.component.html","./src/app/components/hud-pan-ruller/hud-pan-ruller.component.ts","./src/app/components/hud-pan-ruller/hud-pan-ruller.component.html","./src/app/components/hud-status/hud-status.component.ts","./src/app/components/hud-status/hud-status.component.html","./src/app/components/hud-stream/hud-stream.component.ts","./src/app/components/hud-stream/hud-stream.component.html","./src/app/components/hud-tilt-ruller/hud-tilt-ruller.component.ts","./src/app/components/hud-tilt-ruller/hud-tilt-ruller.component.html","./src/app/components/hud-ui/hud-ui.component.ts","./src/app/components/hud-ui/hud-ui.component.html","./src/app/components/stick/stick.component.ts","./src/app/components/stick/stick.component.html","./src/app/guards/jwt-guard.ts","./src/app/interceptor/jwt-interceptor.ts","./src/app/materials/camera.ts","./src/app/materials/capabilities/camera/camera-zoom-absolute-position-capability.ts","./src/app/materials/capabilities/camera/camera-zoom-continuous-capability.ts","./src/app/materials/capabilities/turret/turret-absolute-position-capability.ts","./src/app/materials/capabilities/turret/turret-move-absolute-capability.ts","./src/app/materials/capabilities/turret/turret-move-speed-capability.ts","./src/app/materials/capabilities/unit/unit-reboot-capability.ts","./src/app/materials/day-camera.ts","./src/app/materials/factory.ts","./src/app/materials/inertial-measurement.ts","./src/app/materials/lazer-measurement.ts","./src/app/materials/site.ts","./src/app/materials/thermal-camera.ts","./src/app/materials/turret.ts","./src/app/materials/unit.ts","./src/app/pages/configuration/configuration-node.ts","./src/app/pages/configuration/configuration.component.ts","./src/app/pages/configuration/configuration.component.html","./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/services/http.service.ts","./src/app/services/site.service.ts","./src/app/services/user.service.ts","./src/app/services/ws.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { JwtGuard } from './guards/jwt-guard';\r\nimport { ConfigurationComponent } from './pages/configuration/configuration.component';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\r\n  { path: 'home', component: HomeComponent, canActivate: [JwtGuard]},\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'configuration', component: ConfigurationComponent }  \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [\r\n    RouterModule,\r\n    MatTooltipModule\r\n  ]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'seasense-client';\n}\n","<app-header></app-header>\r\n<router-outlet></router-outlet>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { ConfigurationComponent } from './pages/configuration/configuration.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpService } from './services/http.service';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { UserService } from './services/user.service';\r\nimport { JwtInterceptor } from './interceptor/jwt-interceptor';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { HudUiComponent } from './components/hud-ui/hud-ui.component';\r\nimport { HudStreamComponent } from './components/hud-stream/hud-stream.component';\r\nimport { HudPanRullerComponent } from './components/hud-pan-ruller/hud-pan-ruller.component';\r\nimport { HudTiltRullerComponent } from './components/hud-tilt-ruller/hud-tilt-ruller.component';\r\nimport { HudStatusComponent } from './components/hud-status/hud-status.component';\r\nimport { CompassComponent } from './components/compass/compass.component';\r\nimport { StickComponent } from './components/stick/stick.component';\r\nimport { HudButtonComponent } from './components/hud-button/hud-button.component';\r\nimport { MatRippleModule } from '@angular/material/core';\r\n/** Http interceptor providers in outside-in order */\r\nexport const httpInterceptorProviders = [\r\n  { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n];\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    LoginComponent,\r\n    ConfigurationComponent,\r\n    HeaderComponent,\r\n    HudUiComponent,\r\n    HudStreamComponent,\r\n    HudPanRullerComponent,\r\n    HudTiltRullerComponent,    \r\n    HudStatusComponent, CompassComponent, StickComponent, HudButtonComponent    \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    MatRippleModule,\r\n    ScrollingModule,\r\n    MatListModule,\r\n    MatTreeModule,\r\n    MatToolbarModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatDividerModule,\r\n    MatMenuModule,\r\n    MatFormFieldModule,\r\n    MatInputModule ,\r\n    FormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [HttpService, UserService, httpInterceptorProviders],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, ElementRef, OnDestroy, OnInit, Renderer2, ViewChild } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { CapabilityType } from '../../materials/capabilities/capability-type';\r\nimport { TurretAbsolutePositionCapability } from '../../materials/capabilities/turret/turret-absolute-position-capability';\r\nimport { MaterialType } from '../../materials/material-type';\r\nimport { SiteService } from '../../services/site.service';\r\n\r\n@Component({\r\n  selector: 'app-compass',\r\n  templateUrl: './compass.component.html',\r\n  styleUrls: ['./compass.component.scss']\r\n})\r\nexport class CompassComponent implements OnInit, OnDestroy {\r\n  private siteStateSubscription: Subscription;\r\n  @ViewChild('svgTurret') svgTurret: ElementRef | null;\r\n  @ViewChild('svgDirection') svgDirection: ElementRef | null;\r\n\r\n  constructor(private renderer: Renderer2, private siteService: SiteService) {\r\n    this.svgTurret = null;\r\n    this.svgDirection = null;\r\n    this.siteStateSubscription = this.siteService.siteStateSubject.subscribe(() => { this.updateUi(); });\r\n  }\r\n  updateUi() {\r\n    if (this.siteService.selectedUnit != null) {\r\n      let cap: TurretAbsolutePositionCapability | undefined = this.siteService.selectedUnit.getMaterialCapability<TurretAbsolutePositionCapability>(MaterialType.Turret, CapabilityType.TurretAbsolutePosition);\r\n      if (cap != null) {\r\n        let rotateInfoTurret = \"rotate(\" + cap.pan.toFixed(0) + \"deg)\";\r\n        if (this.svgTurret != null) {\r\n          this.renderer.setStyle(this.svgTurret.nativeElement, 'transform', rotateInfoTurret);\r\n        }\r\n      }\r\n\r\n    }\r\n  }\r\n  ngOnDestroy() {\r\n    this.siteStateSubscription.unsubscribe();\r\n\r\n  }\r\n  ngOnInit(): void {\r\n    this.updateUi();\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"svg-center\"><img alt=\"compass background\" src=\"assets/compass-next-fond.svg\" /></div>\r\n  <div class=\"svg-center\"><img alt=\"compass turret\" #svgTurret src=\"assets/compass-next-turret.svg\" /></div>\r\n  <div class=\"svg-center\"><img alt=\"compase rose\" #svgDirection src=\"assets/compass-next-rose.svg\" /></div>\r\n</div>\r\n\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { LogoutResponse } from '../../api/http/logout-response';\r\nimport { Site } from '../../materials/site';\r\nimport { Unit } from '../../materials/unit';\r\nimport { HttpService } from '../../services/http.service';\r\nimport { SiteService } from '../../services/site.service';\r\nimport { UserService } from '../../services/user.service';\r\nimport { WsService } from '../../services/ws.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  private siteLoadedSubscription: Subscription;\r\n  public units: Unit[] = [];\r\n  public selectedUnitId: string | undefined = undefined;\r\n  constructor(public userService: UserService, private httpService: HttpService, private router: Router, private siteService: SiteService, private wsService: WsService) {\r\n    this.siteLoadedSubscription = this.siteService.siteLoadedSubject.subscribe((site: Site | undefined) => {\r\n      if (site == null) this.units = [];\r\n      else this.units = site.units;\r\n      this.selectedUnitId = this.siteService.selectedUnit?.id;\r\n    });\r\n  }\r\n  onConfigurationButtonClick() {\r\n    this.router.navigate(['/configuration'])\r\n  }\r\n  ngOnDestroy() {\r\n    this.siteLoadedSubscription.unsubscribe()\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n  onHomeClick() {\r\n  }\r\n  onSelectedUnitChange(unitId: string) {\r\n    this.siteService.selectUnitById(unitId);    \r\n  }\r\n  onLogoutClick() {\r\n    this.httpService.logout().subscribe({\r\n      next: (response: LogoutResponse) => {\r\n        this.wsService.stop();\r\n        this.userService.clearToken();\r\n        this.userService.clearUser();\r\n        this.router.navigate(['/login'])\r\n      },\r\n      error: (err: HttpErrorResponse) => {\r\n        this.userService.clearToken();\r\n        this.userService.clearUser();\r\n        this.router.navigate(['/login'])\r\n      },\r\n    });  \r\n  }\r\n}\r\n","<mat-toolbar class=\"display-flex\" color=\"primary\">\r\n  <div class=\"display-flex flex-1 flex-align-end\">\r\n    <button [matMenuTriggerFor]=\"menu\" mat-button>\r\n      <mat-icon aria-hidden=\"false\" aria-label=\"Example home icon\">view_headline</mat-icon>\r\n    </button>\r\n    <mat-menu #menu=\"matMenu\">\r\n      <button (click)=\"onConfigurationButtonClick()\" mat-menu-item>Configuration</button>\r\n      <button mat-menu-item>Camera</button>\r\n      <button mat-menu-item>Sav</button>\r\n    </mat-menu>\r\n    <div matTooltip=\"Go to home page\" (click)=\"onHomeClick()\" class=\"title\">Seasens</div>\r\n    <div matTooltip=\"Go to home page\" (click)=\"onHomeClick()\" class=\"sub-title\">By Exavision</div>\r\n    <div class=\"flex-1\"></div>\r\n    <div *ngIf=\"this.userService.user != null\" class=\"display-flex\">\r\n      <mat-label class=\"margin-4\">Unit :</mat-label>\r\n      <mat-select [(value)]=\"selectedUnitId\" #unitSelect (selectionChange)=\"onSelectedUnitChange(unitSelect.value)\" class=\"unit-select margin-4\">\r\n        <mat-option [value]=\"unit.id\" *ngFor=\"let unit of units\">\r\n          {{unit.displayName}}\r\n        </mat-option>\r\n      </mat-select>\r\n    </div>\r\n    <button *ngIf=\"this.userService.user != null\" (click)=\"onLogoutClick()\" mat-raised-button color=\"accent\">Logout</button>\r\n  </div>\r\n</mat-toolbar>\r\n","import { Component, EventEmitter, HostListener, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-hud-button',\n  templateUrl: './hud-button.component.html',\n  styleUrls: ['./hud-button.component.scss']\n})\nexport class HudButtonComponent implements OnInit {\n\n  @Output() buttonUp: EventEmitter<boolean> = new EventEmitter<boolean>();\n  @Output() buttonDown: EventEmitter<boolean> = new EventEmitter<boolean>();\n  private isMouseDown: boolean = false;\n  constructor() { }\n  onMouseDown() {\n    this.isMouseDown = true;\n    this.buttonDown.emit(true);\n  }\n  onMouseUp() {\r\n    if (this.isMouseDown === true) {\n      this.isMouseDown = false;\n      this.buttonUp.emit(true);\n    }\n  }\n  ngOnInit(): void {\n  }\n  @HostListener('document:pointerup', ['$event'])\n  onDocumentPointerUp(evt: any) {\n    if (this.isMouseDown === true) {\n      this.isMouseDown = false;\n      this.buttonUp.emit(true);\n    }\n\n  }\n\n  @HostListener('document:mouseup', ['$event'])\n  onDocumentMouse(evt: any) {\n    if (this.isMouseDown === true) {\n      this.isMouseDown = false;\n      this.buttonUp.emit(true);\n    }\n  }\n}\n","<div (mousedown)=\"onMouseDown()\" (mouseup)=\"onMouseUp()\" class=\"hexagon\">\r\n  <div class=\"flex-1\"></div>\r\n  <div class=\"display-flex flex-dir-col\">\r\n    <div class=\"flex-1\"></div>\r\n    <ng-content></ng-content>\r\n    <div class=\"flex-1\"></div>\r\n  </div> \r\n  <div class=\"flex-1\"></div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-hud-pan-ruller',\r\n  templateUrl: './hud-pan-ruller.component.html',\r\n  styleUrls: ['./hud-pan-ruller.component.scss'],\r\n  host: { 'class': 'hud-layer' }\r\n})\r\nexport class HudPanRullerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"flex-1\"></div>\r\n<div class=\"ruller\"></div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-hud-status',\r\n  templateUrl: './hud-status.component.html',\r\n  styleUrls: ['./hud-status.component.scss'],\r\n  host: { 'class': 'hud-layer' }\r\n})\r\nexport class HudStatusComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"status\"></div>\r\n<div class=\"flex-1\"></div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { IStream } from '../../models/stream';\r\nimport { SiteService } from '../../services/site.service';\r\nimport { Material } from '../../materials/material';\r\nimport { MaterialType } from '../../materials/material-type';\r\n\r\n\r\n@Component({\r\n  selector: 'app-hud-stream',\r\n  templateUrl: './hud-stream.component.html',\r\n  styleUrls: ['./hud-stream.component.scss'],\r\n  host: { 'class': 'hud-layer' }\r\n})\r\nexport class HudStreamComponent implements OnInit, OnDestroy {\r\n\r\n  public mainStream: IStream | undefined = undefined;\r\n  private streams: IStream[] = [];\r\n  private unitSelectedSubscription: Subscription;\r\n  private cameraSelectedSubscription: Subscription;\r\n  constructor(private siteService: SiteService) {\r\n    this.unitSelectedSubscription = this.siteService.unitSelectedSubject.subscribe(() => { this.updateStreamList(); });\r\n    this.cameraSelectedSubscription = this.siteService.cameraSelectedSubject.subscribe(() => { this.updateStreamList(); });\r\n  }\r\n  updateStreamList() {\r\n    this.streams = [];\r\n    if (this.siteService.selectedUnit != null) {\r\n      let baseStreamUrl: string = \"\";\r\n      if (window.location.protocol === \"https:\") {\r\n        baseStreamUrl += \"https://\";\r\n      }\r\n      else {\r\n        baseStreamUrl += \"http://\";\r\n      }\r\n\r\n      baseStreamUrl += window.location.host + \":\" + window.location.port + \"/stream/\";\r\n      this.siteService.selectedUnit.materials.forEach((value: Material) => {\r\n\r\n        if (value.materialType == MaterialType.DayCamera || value.materialType == MaterialType.ThermalCamera) {\r\n          let isSelectedCamera = value.id === this.siteService.selectedCamera?.id;\r\n          let stream: IStream = {\r\n            displayName: value.displayName,\r\n            isMainStream: isSelectedCamera,\r\n            materialId: value.id,\r\n            url: baseStreamUrl + \"/\" + value.id\r\n          };\r\n          if (isSelectedCamera) {\r\n            this.mainStream = stream;\r\n          }\r\n          this.streams.push(stream);\r\n\r\n        } \r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.unitSelectedSubscription.unsubscribe();\r\n    this.cameraSelectedSubscription.unsubscribe();\r\n\r\n  }\r\n  ngOnInit(): void {\r\n    this.updateStreamList();\r\n  }\r\n\r\n}\r\n","<img class=\"flex-1 main-stream\" *ngIf=\"mainStream !== undefined\" [src]=\"mainStream.url\"  />\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-hud-tilt-ruller',\r\n  templateUrl: './hud-tilt-ruller.component.html',\r\n  styleUrls: ['./hud-tilt-ruller.component.scss'],\r\n  host: { 'class': 'hud-layer' }\r\n})\r\nexport class HudTiltRullerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"flex-1\"></div>\r\n<div class=\"ruller\"></div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { CameraZoomContinuousCapability } from '../../materials/capabilities/camera/camera-zoom-continuous-capability';\r\nimport { CapabilityType } from '../../materials/capabilities/capability-type';\r\nimport { TurretMoveSpeedCapability } from '../../materials/capabilities/turret/turret-move-speed-capability';\r\nimport { MaterialType } from '../../materials/material-type';\r\nimport { SiteService } from '../../services/site.service';\r\n\r\n@Component({\r\n  selector: 'app-hud-ui',\r\n  templateUrl: './hud-ui.component.html',\r\n  styleUrls: ['./hud-ui.component.scss'],\r\n  host: { 'class': 'hud-layer' }\r\n})\r\nexport class HudUiComponent implements OnInit, OnDestroy {\r\n  public isLeftToRight: boolean = true;\r\n  public hasMoveSpeedCapability: boolean = false;\r\n  public hasZoomContinuousCapability: boolean = false;\r\n  private unitSelectedSubscription: Subscription;\r\n  private cameraSelectedSubscription: Subscription;\r\n  constructor(private siteService: SiteService) {\r\n    this.unitSelectedSubscription = this.siteService.unitSelectedSubject.subscribe(() => { this.updateVisibilityFlags(); });\r\n    this.cameraSelectedSubscription = this.siteService.cameraSelectedSubject.subscribe(() => { this.updateVisibilityFlags(); });\r\n  }\r\n  ngOnDestroy() {\r\n    this.unitSelectedSubscription.unsubscribe();\r\n    this.cameraSelectedSubscription.unsubscribe();\r\n  }\r\n  ngOnInit(): void {\r\n    this.updateVisibilityFlags();\r\n  }\r\n  updateVisibilityFlags() {\r\n    if (this.siteService.selectedUnit != null) {\r\n      this.hasMoveSpeedCapability = this.siteService.selectedUnit.hasMaterialWithCapability(MaterialType.Turret, CapabilityType.TurretMoveSpeed);\r\n      if (this.siteService.selectedCamera != null) {\r\n        this.hasZoomContinuousCapability = this.siteService.selectedCamera.hasCapability(CapabilityType.CameraZoomContinuous);\r\n      }\r\n      else {\r\n        this.hasZoomContinuousCapability = false;\r\n      }\r\n    }\r\n    else {\r\n      this.hasMoveSpeedCapability = false;\r\n      this.hasZoomContinuousCapability = false;\r\n    }\r\n    \r\n  }\r\n  onZoomInDown() {\r\n    if (this.siteService.selectedCamera == undefined) return;\r\n    console.log(\"onZoomInDown\");\r\n    let cap: CameraZoomContinuousCapability | undefined = this.siteService.selectedCamera.getCapability<CameraZoomContinuousCapability>(CapabilityType.CameraZoomContinuous);\r\n    if (cap != null) cap.zoomInStart();\r\n  }\r\n  onZoomUp() {\r\n    console.log(\"onZoomUp\");\r\n    if (this.siteService.selectedCamera == undefined) return;\r\n    let cap: CameraZoomContinuousCapability | undefined = this.siteService.selectedCamera.getCapability<CameraZoomContinuousCapability>(CapabilityType.CameraZoomContinuous);\r\n    if (cap != null) cap.zoomStop();\r\n  }\r\n  onZoomOutDown() {\r\n    console.log(\"onZoomOutDown\");\r\n    if (this.siteService.selectedCamera == undefined) return;\r\n    let cap: CameraZoomContinuousCapability | undefined = this.siteService.selectedCamera.getCapability<CameraZoomContinuousCapability>(CapabilityType.CameraZoomContinuous);\r\n    if (cap != null) cap.zoomOutStart();\r\n  }\r\n}\r\n","<div *ngIf=\"isLeftToRight\" class=\"hud-column flex-dir-col\">\r\n  <div class=\"spacer\">\r\n\r\n  </div>\r\n  <!-- Button LRF -->\r\n  <app-hud-button>\r\n    LRF\r\n  </app-hud-button>\r\n\r\n  <!-- Zoom In -->\r\n  <app-hud-button  (buttonDown)=\"onZoomInDown()\"  (buttonUp)=\"onZoomUp()\" *ngIf=\"hasZoomContinuousCapability\">\r\n    <mat-icon  class=\"hud-button-icon\" [inline]=\"true\" matTooltip=\"Zoom In\" aria-hidden=\"false\" aria-label=\"Zoom In\">zoom_in</mat-icon>\r\n  </app-hud-button>\r\n\r\n  <!-- Zoom PIP -->\r\n  <app-hud-button>\r\n    <mat-icon class=\"hud-button-icon\" [inline]=\"true\" matTooltip=\"Switch Zoom Center On/Off\" aria-hidden=\"false\" aria-label=\"Switch Zoom Center On/Off\">crop_free</mat-icon>\r\n  </app-hud-button>\r\n\r\n\r\n  <!-- Zoom Out -->\r\n  <app-hud-button  (buttonDown)=\"onZoomOutDown()\"  (buttonUp)=\"onZoomUp()\"   *ngIf=\"hasZoomContinuousCapability\">\r\n    <mat-icon   class=\"hud-button-icon\" [inline]=\"true\" matTooltip=\"Zoom Out\" aria-hidden=\"false\" aria-label=\"Zoom Out\">zoom_out</mat-icon>\r\n  </app-hud-button>\r\n\r\n\r\n  <!-- Auto Focus -->\r\n  <app-hud-button>\r\n    <div matTooltip=\"Auto Focus\">AF</div>\r\n  </app-hud-button>\r\n\r\n  <!-- Focus Near -->\r\n  <app-hud-button>\r\n      <mat-icon class=\"hud-button-icon\" [inline]=\"true\" matTooltip=\"Focus Near\" aria-hidden=\"false\" aria-label=\"Focus Near\">portrait</mat-icon> \r\n  </app-hud-button>\r\n\r\n  <!-- Focus Far -->\r\n  <app-hud-button>\r\n    <mat-icon class=\"hud-button-icon\" [inline]=\"true\" matTooltip=\"Focus Far\" aria-hidden=\"false\" aria-label=\"Focus Far\">panorama</mat-icon>\r\n  </app-hud-button>\r\n\r\n  <div class=\"spacer\">\r\n\r\n  </div>\r\n\r\n</div>\r\n<div *ngIf=\"!isLeftToRight\" class=\"hud-column flex-dir-col\">\r\n\r\n</div>\r\n<div class=\"spacer\">\r\n\r\n</div>\r\n\r\n\r\n<div *ngIf=\"isLeftToRight\" class=\"hud-column flex-dir-col\">\r\n  <app-compass></app-compass>\r\n  <app-hud-button></app-hud-button>\r\n  <div class=\"flex-1\"></div>\r\n  <app-stick *ngIf=\"hasMoveSpeedCapability\"></app-stick>\r\n</div>\r\n\r\n\r\n<div *ngIf=\"!isLeftToRight\" class=\"hud-column flex-dir-col\">\r\n\r\n</div>\r\n","import { AfterContentInit, AfterViewInit, ChangeDetectorRef, Component, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\r\nimport * as nipplejs from 'nipplejs';\r\nimport { JoystickManager } from 'nipplejs';\r\nimport { Subscription } from 'rxjs';\r\nimport { CapabilityType } from '../../materials/capabilities/capability-type';\r\nimport { TurretMoveSpeedCapability } from '../../materials/capabilities/turret/turret-move-speed-capability';\r\nimport { MaterialType } from '../../materials/material-type';\r\nimport { SiteService } from '../../services/site.service';\r\n@Component({\r\n  selector: 'app-stick',\r\n  templateUrl: './stick.component.html',\r\n  styleUrls: ['./stick.component.scss']\r\n})\r\nexport class StickComponent implements AfterViewInit, OnInit, OnChanges, AfterContentInit{\r\n  @ViewChild(\"nipplejshost\") nipplejshost: any = null;\r\n  private commandInterval : number = 100;\r\n  private nippleControl: JoystickManager | undefined = undefined;\r\n  private commandIntervalTimer: any;\r\n  private turretMoveSpeedCapability: TurretMoveSpeedCapability | undefined = undefined;\r\n  public axisX: number = 0;\r\n  public axisY: number = 0;\r\n  public lastSendAxisX: number = 0;\r\n  public lastSendAxisY: number = 0;\r\n  private unitSelectedSubscription: Subscription;\r\n  constructor(private cdref: ChangeDetectorRef, private siteService: SiteService) {\r\n    this.commandIntervalTimer = setInterval(() => {\r\n      this.updateStickInfos();\r\n    }, this.commandInterval);\r\n\r\n    this.findTurretMoveSpeedCapability();\r\n    this.unitSelectedSubscription = this.siteService.unitSelectedSubject.subscribe(this.findTurretMoveSpeedCapability);\r\n\r\n  }\r\n  findTurretMoveSpeedCapability() {\r\n    this.turretMoveSpeedCapability = this.siteService.selectedUnit?.getMaterialCapability(MaterialType.Turret, CapabilityType.TurretMoveSpeed);\r\n    console.log(\"findTurretMoveSpeedCapability \", this.turretMoveSpeedCapability);\r\n  }\r\n  ngOnInit(): void {\r\n\r\n\r\n  }\r\n  updateStickInfos() {\r\n\r\n    if (this.lastSendAxisX != this.axisX || this.lastSendAxisY != this.axisY) {\r\n      if (this.turretMoveSpeedCapability != null) {\r\n        console.log(\"Call turretMoveSpeedCapability.moveSpeed \" + this.axisX + \" \" + this.axisY);\r\n        this.turretMoveSpeedCapability.moveSpeed(this.axisX, this.axisY);\r\n\r\n      }\r\n    }\r\n    this.lastSendAxisX = this.axisX;\r\n    this.lastSendAxisY = this.axisY;\r\n  }\r\n  ngOnDestroy() {\r\n    clearInterval(this.commandIntervalTimer);\r\n    this.unitSelectedSubscription.unsubscribe();\r\n  }\r\n  ngOnChanges(changes: SimpleChanges) {\r\n   \r\n  }\r\n  ngAfterContentInit(): void {\r\n  \r\n  }\r\n  ngAfterViewInit(): void {\r\n    // NippleJs creation is deffered.\r\n    // without deffred instanciation stick initialization is corrupted.\r\n    setTimeout(() => {\r\n      this.nippleControl = nipplejs.create({\r\n        zone: this.nipplejshost.nativeElement,\r\n        mode: 'static',\r\n        position: { left: '80px', top: '80px' },\r\n        color: 'blue',\r\n        restOpacity: 0.8,\r\n        \r\n      });\r\n      this.nippleControl.on('start', (evt, data) => {       \r\n        this.axisX = 0;\r\n        this.axisY = 0;\r\n      });\r\n\r\n      this.nippleControl.on('end', (evt, data) => {       \r\n        this.axisX = 0;\r\n        this.axisY = 0;\r\n      });\r\n      this.nippleControl.on('move', (evt, data) => {      \r\n        this.axisX = data.vector.x;\r\n        this.axisY = data.vector.y;\r\n      });\r\n     }, 500);\r\n    \r\n  }\r\n\r\n}\r\n","<div #nipplejshost class=\"stick-host\"></div>\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { ValidateTokenResponse } from '../api/http/validate-token-response';\r\nimport { HttpService } from '../services/http.service';\r\nimport { UserService } from '../services/user.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class JwtGuard implements CanActivate {\r\n  constructor(private router: Router, private userService: UserService, private httpService: HttpService) { }\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n\r\n    return new Promise<boolean | UrlTree>((resolve, reject) => {\r\n      this.httpService.validateToken().subscribe({\r\n        next: (response: ValidateTokenResponse) => {\r\n          resolve(true);\r\n        },\r\n        error: (err: HttpErrorResponse) => {\r\n          this.router.navigate(['/login'])\r\n          reject(false);\r\n\r\n        },\r\n      });  \r\n    });\r\n     \r\n\r\n    \r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest\r\n} from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { UserService } from '../services/user.service';\r\n\r\n/** Pass untouched request through to the next request handler. */\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler):\r\n    Observable<HttpEvent<any>> {\r\n    const userToken = this.userService.token;\r\n    if (userToken != undefined) {\r\n      const modifiedReq = req.clone({\r\n        headers: req.headers.set('Authorization', `Bearer ${userToken}`),\r\n      });\r\n      return next.handle(modifiedReq);    \r\n    }\r\n    return next.handle(req);    \r\n  }\r\n}\r\n","import { WsService } from \"../services/ws.service\";\r\nimport { Capability } from \"./capabilities/capability\";\r\nimport { CapabilityType } from \"./capabilities/capability-type\";\r\nimport { Factory } from \"./factory\";\r\nimport { Material } from \"./material\";\r\nimport { MaterialType } from \"./material-type\";\r\nimport { SettingCapability } from \"./settings/setting-capability\";\r\nimport { SettingMaterial } from \"./settings/setting-material\";\r\nimport { Site } from \"./site\";\r\nimport { CapabilityState } from \"./states/capability-state\";\r\nimport { MaterialState } from \"./states/material-state\";\r\nimport { Unit } from \"./unit\";\r\n\r\nexport abstract class Camera implements Material  {\r\n  id: string;\r\n  materials: Material[];\r\n  capabilities: Capability[] = [];\r\n  displayName: string;\r\n  materialType: MaterialType;\r\n  wsService: WsService;\r\n  site: Site;\r\n  unit: Unit;\r\n  constructor(settingMaterial: SettingMaterial, site: Site, unit: Unit, wsService: WsService, factory: Factory) {\r\n    this.id = settingMaterial.id;\r\n    this.materials = [];\r\n    this.site = site;\r\n    this.unit = unit;\r\n    this.wsService = wsService;\r\n    this.materialType = MaterialType.DayCamera;\r\n    this.displayName = settingMaterial.displayName;\r\n \r\n    settingMaterial.materials.forEach((settingMaterialChild: SettingMaterial) => {\r\n      let material: Material = factory.createMaterial(settingMaterialChild, site, unit, this.wsService);\r\n      this.materials.push(material);\r\n    });\r\n    settingMaterial.capabilities.forEach((settingCapability: SettingCapability) => {\r\n      let capability: Capability = factory.createCapability(settingCapability);\r\n      capability.material = this;\r\n      this.capabilities.push(capability);\r\n    });\r\n  }\r\n  setState(state: MaterialState): void {\r\n    state.capabilities.forEach((valueState: CapabilityState) => {\r\n      let cap: Capability | undefined = this.capabilities.find((valueCap: Capability) => { return valueCap.id === valueState.id; });\r\n      if (cap != null) {\r\n        cap.setState(valueState);\r\n      }\r\n    });\r\n    state.materials.forEach((valueState: MaterialState) => {\r\n      let mat: Material | undefined = this.materials.find((valueMat: Material) => { return valueMat.id === valueState.id; });\r\n      if (mat != null) {\r\n        mat.setState(valueState);\r\n      }\r\n    });\r\n  }\r\n  getCapability<T extends Capability>(capabilityType: CapabilityType): T | undefined {\r\n    let cap: Capability | undefined = this.capabilities.find((value: Capability) => { return value.capabilityType === capabilityType; });\r\n    return <T>cap;\r\n\r\n  }\r\n  hasCapability(capabilityType: CapabilityType): boolean {\r\n    let cap: Capability | undefined = this.capabilities.find((value: Capability) => { return value.capabilityType === capabilityType; });\r\n    return cap !== undefined;\r\n\r\n  }\r\n\r\n  \r\n}\r\n\r\n","import { Material } from \"../../material\";\r\nimport { SettingCapability } from \"../../settings/setting-capability\";\r\nimport { Site } from \"../../site\";\r\nimport { CameraZoomAbsolutePositionStep } from \"../../states/camera/camera-zoom-absolute-position-state\";\r\nimport { CapabilityState } from \"../../states/capability-state\";\r\nimport { Unit } from \"../../unit\";\r\nimport { Capability } from \"../capability\";\r\nimport { CapabilityType } from \"../capability-type\";\r\n\r\nexport class CameraZoomAbsolutePositionCapability implements Capability {\r\n \r\n  id: string;\r\n  capabilityType: CapabilityType;\r\n  material: Material | undefined;\r\n  zoomMultiplier: number = 1;\r\n  horizontalFieldOfView: number = 25;\r\n\r\n\r\n  constructor(settingCapability: SettingCapability) {\r\n    this.id = settingCapability.id;\r\n    this.capabilityType = CapabilityType.CameraZoomAbsolutePosition;\r\n  }\r\n\r\n \r\n  setState(valueState: CapabilityState): void {\r\n    let state: CameraZoomAbsolutePositionStep = <CameraZoomAbsolutePositionStep>valueState;\r\n    this.zoomMultiplier = state.zoomMultiplier;\r\n    this.horizontalFieldOfView = state.horizontalFieldOfView;\r\n  }\r\n}\r\n","import { Material } from \"../../material\";\r\nimport { SettingCapability } from \"../../settings/setting-capability\";\r\nimport { Site } from \"../../site\";\r\nimport { CapabilityState } from \"../../states/capability-state\";\r\nimport { Unit } from \"../../unit\";\r\nimport { Capability } from \"../capability\";\r\nimport { CapabilityType } from \"../capability-type\";\r\n\r\nexport class CameraZoomContinuousCapability implements Capability {\r\n \r\n  \r\n  id: string;\r\n  capabilityType: CapabilityType;\r\n  material: Material | undefined;\r\n\r\n\r\n  constructor(settingCapability: SettingCapability) {\r\n    this.id = settingCapability.id;\r\n    this.capabilityType = CapabilityType.CameraZoomContinuous;\r\n  }\r\n\r\n  zoomOutStart() {\r\n    if (this.material == null) return;\r\n    if (this.material.unit == null) return;\r\n    this.material?.wsService.cameraZoomOutStart(this.material.unit.id, this.material.id);\r\n\r\n\r\n  }\r\n  zoomStop() {\r\n    if (this.material == null) return;\r\n    if (this.material.unit == null) return;\r\n    this.material?.wsService.cameraZoomStop(this.material.unit.id, this.material.id);\r\n  }\r\n  zoomInStart() {\r\n    if (this.material == null) return;\r\n    if (this.material.unit == null) return;\r\n    this.material?.wsService.cameraZoomInStart(this.material.unit.id, this.material.id);\r\n  }\r\n\r\n  setState(valueState: CapabilityState): void {\r\n\r\n  }\r\n}\r\n","import { Material } from \"../../material\";\r\nimport { SettingCapability } from \"../../settings/setting-capability\";\r\nimport { Site } from \"../../site\";\r\nimport { CapabilityState } from \"../../states/capability-state\";\r\nimport { TurretAbsolutePositionState } from \"../../states/turret/turret-absolute-position-state\";\r\nimport { Unit } from \"../../unit\";\r\nimport { Capability } from \"../capability\";\r\nimport { CapabilityType } from \"../capability-type\";\r\n\r\nexport class TurretAbsolutePositionCapability implements Capability {\r\n  id: string;\r\n  capabilityType: CapabilityType;\r\n  material: Material | undefined;\r\n  pan: number = 0;\r\n  tilt: number = 0;\r\n  constructor(settingCapability: SettingCapability) {\r\n    this.id = settingCapability.id;\r\n    this.capabilityType = CapabilityType.TurretAbsolutePosition;\r\n  }\r\n  setState(valueState: CapabilityState): void {\r\n    if (valueState.$type === 'TurretAbsolutePositionState') {\r\n      let turretAbsolutePositionState: TurretAbsolutePositionState = <TurretAbsolutePositionState>valueState;\r\n      this.pan = turretAbsolutePositionState.pan;\r\n      this.tilt = turretAbsolutePositionState.tilt;     \r\n    }\r\n  }\r\n\r\n}\r\n","import { Material } from \"../../material\";\r\nimport { SettingCapability } from \"../../settings/setting-capability\";\r\nimport { Site } from \"../../site\";\r\nimport { CapabilityState } from \"../../states/capability-state\";\r\nimport { TurretAbsolutePositionState } from \"../../states/turret/turret-absolute-position-state\";\r\nimport { Unit } from \"../../unit\";\r\nimport { Capability } from \"../capability\";\r\nimport { CapabilityType } from \"../capability-type\";\r\n\r\nexport class TurretMoveAbsoluteCapability implements Capability {\r\n  id: string;\r\n  capabilityType: CapabilityType;\r\n  material: Material | undefined;\r\n  pan: number = 0;\r\n  tilt: number = 0;\r\n  constructor(settingCapability: SettingCapability) {\r\n    this.id = settingCapability.id;\r\n    this.capabilityType = CapabilityType.TurretMoveAbsolute;\r\n  }\r\n  setState(valueState: CapabilityState): void {\r\n  \r\n  }\r\n\r\n}\r\n","import { Material } from \"../../material\";\r\nimport { SettingCapability } from \"../../settings/setting-capability\";\r\nimport { Site } from \"../../site\";\r\nimport { CapabilityState } from \"../../states/capability-state\";\r\nimport { Unit } from \"../../unit\";\r\nimport { Capability } from \"../capability\";\r\nimport { CapabilityType } from \"../capability-type\";\r\n\r\nexport class TurretMoveSpeedCapability implements Capability {\r\n \r\n  id: string;\r\n  capabilityType: CapabilityType;\r\n  material: Material | undefined;\r\n\r\n\r\n  constructor(settingCapability: SettingCapability) {\r\n    this.id = settingCapability.id;\r\n    this.capabilityType = CapabilityType.TurretMoveSpeed;\r\n  }\r\n\r\n  moveSpeed(axisX: number, axisY: number) {\r\n    if (this.material == null) return;\r\n    if (this.material.unit == null) return;\r\n    console.log(\"Call wsService.turretMoveSpeed \" + axisX + \" \" + axisY);\r\n    this.material?.wsService.turretMoveSpeed(this.material.unit.id, this.material.id, axisX, axisY);\r\n    \r\n  }\r\n  setState(valueState: CapabilityState): void {\r\n\r\n  }\r\n}\r\n","import { Material } from \"../../material\";\r\nimport { SettingCapability } from \"../../settings/setting-capability\";\r\nimport { Site } from \"../../site\";\r\nimport { CapabilityState } from \"../../states/capability-state\";\r\nimport { Unit } from \"../../unit\";\r\nimport { Capability } from \"../capability\";\r\nimport { CapabilityType } from \"../capability-type\";\r\n\r\nexport class UnitRebootCapability implements Capability {\r\n  id: string;\r\n  capabilityType: CapabilityType;\r\n  material: Material | undefined;\r\n  constructor(settingCapability: SettingCapability) {\r\n    this.id = settingCapability.id;\r\n    this.capabilityType = CapabilityType.UnitReboot;\r\n  }\r\n  setState(valueState: CapabilityState): void {\r\n\r\n  }\r\n}\r\n","import { WsService } from \"../services/ws.service\";\r\nimport { Camera } from \"./camera\";\r\nimport { Capability } from \"./capabilities/capability\";\r\nimport { Factory } from \"./factory\";\r\nimport { Material } from \"./material\";\r\nimport { MaterialType } from \"./material-type\";\r\nimport { SettingCapability } from \"./settings/setting-capability\";\r\nimport { SettingMaterial } from \"./settings/setting-material\";\r\nimport { Site } from \"./site\";\r\nimport { CapabilityState } from \"./states/capability-state\";\r\nimport { MaterialState } from \"./states/material-state\";\r\nimport { Unit } from \"./unit\";\r\n\r\nexport class DayCamera extends Camera  {\r\n \r\n  \r\n\r\n  \r\n}\r\n\r\n","import { SettingMaterial } from \"./settings/setting-material\";\r\nimport { Material } from \"./material\";\r\nimport { MaterialType } from \"./material-type\";\r\nimport { DayCamera } from \"./day-camera\";\r\nimport { ThermalCamera } from \"./thermal-camera\";\r\nimport { InertialMeasurement } from \"./inertial-measurement\";\r\nimport { LazerMeasurement } from \"./lazer-measurement\";\r\nimport { Unit } from \"./unit\";\r\nimport { Turret } from \"./turret\";\r\nimport { SettingCapability } from \"./settings/setting-capability\";\r\nimport { Capability } from \"./capabilities/capability\";\r\nimport { CapabilityType } from \"./capabilities/capability-type\";\r\nimport { TurretMoveSpeedCapability } from \"./capabilities/turret/turret-move-speed-capability\";\r\nimport { UnitRebootCapability } from \"./capabilities/unit/unit-reboot-capability\";\r\nimport { TurretMoveAbsoluteCapability } from \"./capabilities/turret/turret-move-absolute-capability\";\r\nimport { WsService } from \"../services/ws.service\";\r\nimport { Site } from \"./site\";\r\nimport { WsResponse } from \"../api/ws/ws-response\";\r\nimport { WsGetStateResponse } from \"../api/ws/ws-get-state-response\";\r\nimport { CapabilityState } from \"./states/capability-state\";\r\nimport { UnitState } from \"./states/unit-state\";\r\nimport { MaterialState } from \"./states/material-state\";\r\nimport { TurretAbsolutePositionState } from \"./states/turret/turret-absolute-position-state\";\r\nimport { TurretAbsolutePositionCapability } from \"./capabilities/turret/turret-absolute-position-capability\";\r\nimport { CameraZoomAbsolutePositionCapability } from \"./capabilities/camera/camera-zoom-absolute-position-capability\";\r\nimport { CameraZoomContinuousCapability } from \"./capabilities/camera/camera-zoom-continuous-capability\";\r\nexport class Factory {\r\n\r\n  createMessage(data: any): WsResponse {\r\n    let typeName: string = data.$type;\r\n    switch (typeName) {\r\n      case 'WsGetStateResponse':\r\n        let response: WsGetStateResponse = <WsGetStateResponse>data;        \r\n        response.site.capabilities = response.site.capabilities.map((value: CapabilityState) => { return this.mapCapabilityState(value); });\r\n        response.site.units = response.site.units.map((value: UnitState) => { return this.mapUnitState(value); });\r\n        response.site.units.forEach((unitState: UnitState) => {\r\n          unitState.capabilities = unitState.capabilities.map((value: CapabilityState) => { return this.mapCapabilityState(value); });\r\n          unitState.materials = unitState.materials.map((value: MaterialState) => { return this.mapMaterialState(value); });\r\n          unitState.materials.forEach((valueMat: MaterialState) => {\r\n            this.recurseCreateMaterialState(valueMat);\r\n          });\r\n        });\r\n        return response;\r\n      default:\r\n        console.error(\"No creation implemtation in facotry for type \" + typeName);\r\n        throw \"No creation implemtation in facotry for type \" + typeName;\r\n    }\r\n  }\r\n  mapMaterialState(value: MaterialState): MaterialState {\r\n    return value;\r\n  }\r\n  mapUnitState(value: UnitState): UnitState {\r\n    return value;\r\n  }\r\n  mapCapabilityState(value: CapabilityState): CapabilityState {\r\n    if (value.$type === 'TurretAbsolutePositionState') {\r\n      let state: TurretAbsolutePositionState = <TurretAbsolutePositionState>value;\r\n      return state;\r\n    }\r\n    return value;\r\n  }\r\n  recurseCreateMaterialState(materailState: MaterialState) {\r\n    materailState.materials = materailState.materials.map((childMaterialState: MaterialState) => { return childMaterialState; });\r\n    materailState.capabilities = materailState.capabilities.map((value: CapabilityState) => { return this.mapCapabilityState(value); });\r\n    materailState.materials.forEach((childMaterialState: MaterialState) => { this.recurseCreateMaterialState(childMaterialState); });\r\n  }\r\n  createCapability(settingCapability: SettingCapability): Capability {\r\n    let capability: Capability | null = null;\r\n    switch (settingCapability.capabilityType) {\r\n      case CapabilityType.TurretMoveSpeed:\r\n        capability = new TurretMoveSpeedCapability(settingCapability);\r\n        break;\r\n      case CapabilityType.TurretMoveAbsolute:\r\n        capability = new TurretMoveAbsoluteCapability(settingCapability);\r\n        break;\r\n      case CapabilityType.UnitReboot:\r\n        capability = new UnitRebootCapability(settingCapability);\r\n        break;\r\n\r\n      case CapabilityType.TurretAbsolutePosition:\r\n        capability = new TurretAbsolutePositionCapability(settingCapability);\r\n        break;\r\n      case CapabilityType.CameraZoomAbsolutePosition:\r\n        capability = new CameraZoomAbsolutePositionCapability(settingCapability);\r\n        break;\r\n      case CapabilityType.CameraZoomContinuous:\r\n        capability = new CameraZoomContinuousCapability(settingCapability);\r\n        break;\r\n    }\r\n    if (capability == null) {\r\n      console.error('Capability ' + settingCapability.capabilityType + ' not implemented !!!');\r\n      throw 'Capability ' + settingCapability.capabilityType + ' not implemented !!!';\r\n\r\n    }\r\n    return capability;\r\n  }\r\n\r\n  public createMaterial(settingMaterial: SettingMaterial, site: Site, unit: Unit, wsService: WsService): Material {\r\n    let material: Material | null = null;\r\n\r\n    switch (settingMaterial.materialType) {\r\n      case MaterialType.DayCamera:\r\n        material = new DayCamera(settingMaterial, site, unit, wsService, this);\r\n        break;\r\n      case MaterialType.ThermalCamera:\r\n        material = new ThermalCamera(settingMaterial, site, unit, wsService, this);\r\n        break;\r\n      case MaterialType.InertialMeasurement:\r\n        material = new InertialMeasurement(settingMaterial, site, unit, wsService, this);\r\n        break;\r\n      case MaterialType.LazerMeasurement:\r\n        material = new LazerMeasurement(settingMaterial, site, unit, wsService, this);\r\n        break;\r\n      case MaterialType.Unit:\r\n        material = new Unit(settingMaterial, site, wsService,this);\r\n        break;\r\n      case MaterialType.Turret:\r\n        material = new Turret(settingMaterial, site, unit, wsService, this);\r\n        break;\r\n    }\r\n\r\n    if (material == null) throw 'Material ' + settingMaterial.materialType + ' not implemented !!!';\r\n    return material;\r\n  }\r\n}\r\n","import { WsService } from \"../services/ws.service\";\r\nimport { Capability } from \"./capabilities/capability\";\r\nimport { CapabilityType } from \"./capabilities/capability-type\";\r\nimport { Factory } from \"./factory\";\r\nimport { Material } from \"./material\";\r\nimport { MaterialType } from \"./material-type\";\r\nimport { SettingCapability } from \"./settings/setting-capability\";\r\nimport { SettingMaterial } from \"./settings/setting-material\";\r\nimport { Site } from \"./site\";\r\nimport { CapabilityState } from \"./states/capability-state\";\r\nimport { MaterialState } from \"./states/material-state\";\r\nimport { Unit } from \"./unit\";\r\n\r\nexport class InertialMeasurement implements Material {\r\n  id: string;\r\n  materials: Material[];\r\n  capabilities: Capability[] = [];\r\n  displayName: string;\r\n  materialType: MaterialType;\r\n  wsService: WsService;\r\n  site: Site;\r\n  unit: Unit;\r\n  constructor(settingMaterial: SettingMaterial, site: Site, unit: Unit, wsService: WsService, factory: Factory) {\r\n    this.id = settingMaterial.id;\r\n    this.materials = [];\r\n    this.wsService = wsService;\r\n    this.site = site;\r\n    this.unit = unit;\r\n    this.materialType = MaterialType.InertialMeasurement;\r\n    this.displayName = settingMaterial.displayName;\r\n      settingMaterial.materials.forEach((settingMaterialChild: SettingMaterial) => {\r\n      let material: Material = factory.createMaterial(settingMaterialChild, site, unit, this.wsService);\r\n      this.materials.push(material);\r\n    });\r\n    settingMaterial.capabilities.forEach((settingCapability: SettingCapability) => {\r\n      let capability: Capability = factory.createCapability(settingCapability);\r\n      capability.material = this;\r\n      this.capabilities.push(capability);\r\n    });\r\n  }\r\n  getCapability<T extends Capability>(capabilityType: CapabilityType): T | undefined {\r\n    let cap: Capability | undefined = this.capabilities.find((value: Capability) => { return value.capabilityType === capabilityType; });\r\n    return <T>cap;\r\n\r\n  }\r\n  setState(state: MaterialState): void {\r\n    state.capabilities.forEach((valueState: CapabilityState) => {\r\n      let cap: Capability | undefined = this.capabilities.find((valueCap: Capability) => { return valueCap.id === valueState.id; });\r\n      if (cap != null) {\r\n        cap.setState(valueState);\r\n      }\r\n    });\r\n    state.materials.forEach((valueState: MaterialState) => {\r\n      let mat: Material | undefined = this.materials.find((valueMat: Material) => { return valueMat.id === valueState.id; });\r\n      if (mat != null) {\r\n        mat.setState(valueState);\r\n      }\r\n    });\r\n  }\r\n  hasCapability(capabilityType: CapabilityType): boolean {\r\n    let cap: Capability | undefined = this.capabilities.find((value: Capability) => { return value.capabilityType === capabilityType; });\r\n    return cap !== undefined;\r\n\r\n  }\r\n  \r\n}\r\n\r\n","import { WsService } from \"../services/ws.service\";\r\nimport { Capability } from \"./capabilities/capability\";\r\nimport { CapabilityType } from \"./capabilities/capability-type\";\r\nimport { Factory } from \"./factory\";\r\nimport { Material } from \"./material\";\r\nimport { MaterialType } from \"./material-type\";\r\nimport { SettingCapability } from \"./settings/setting-capability\";\r\nimport { SettingMaterial } from \"./settings/setting-material\";\r\nimport { Site } from \"./site\";\r\nimport { CapabilityState } from \"./states/capability-state\";\r\nimport { MaterialState } from \"./states/material-state\";\r\nimport { Unit } from \"./unit\";\r\n\r\nexport class LazerMeasurement implements Material {\r\n  id: string;\r\n  materials: Material[];\r\n  capabilities: Capability[] = [];\r\n  displayName: string;\r\n  materialType: MaterialType;\r\n  wsService: WsService;\r\n  site: Site;\r\n  unit: Unit;\r\n  constructor(settingMaterial: SettingMaterial, site: Site, unit: Unit, wsService: WsService, factory: Factory) {\r\n    this.id = settingMaterial.id;\r\n    this.materials = [];\r\n    this.wsService = wsService;\r\n    this.site = site;\r\n    this.unit = unit;\r\n    this.materialType = MaterialType.LazerMeasurement;\r\n    this.displayName = settingMaterial.displayName;   \r\n    settingMaterial.materials.forEach((settingMaterialChild: SettingMaterial) => {\r\n      let material: Material = factory.createMaterial(settingMaterialChild, site, unit, this.wsService);\r\n      this.materials.push(material);\r\n    });\r\n    settingMaterial.capabilities.forEach((settingCapability: SettingCapability) => {\r\n      let capability: Capability = factory.createCapability(settingCapability);\r\n      capability.material = this;\r\n      this.capabilities.push(capability);\r\n    });\r\n  }\r\n  getCapability<T extends Capability>(capabilityType: CapabilityType): T | undefined {\r\n    let cap: Capability | undefined = this.capabilities.find((value: Capability) => { return value.capabilityType === capabilityType; });\r\n    return <T>cap;\r\n\r\n  }\r\n  setState(state: MaterialState): void {\r\n    state.capabilities.forEach((valueState: CapabilityState) => {\r\n      let cap: Capability | undefined = this.capabilities.find((valueCap: Capability) => { return valueCap.id === valueState.id; });\r\n      if (cap != null) {\r\n        cap.setState(valueState);\r\n      }\r\n    });\r\n    state.materials.forEach((valueState: MaterialState) => {\r\n      let mat: Material | undefined = this.materials.find((valueMat: Material) => { return valueMat.id === valueState.id; });\r\n      if (mat != null) {\r\n        mat.setState(valueState);\r\n      }\r\n    });\r\n  }\r\n  hasCapability(capabilityType: CapabilityType): boolean {\r\n    let cap: Capability | undefined = this.capabilities.find((value: Capability) => { return value.capabilityType === capabilityType; });\r\n    return cap !== undefined;\r\n\r\n  }\r\n  \r\n}\r\n\r\n","import { WsService } from \"../services/ws.service\";\r\nimport { Capability } from \"./capabilities/capability\";\r\nimport { Factory } from \"./factory\";\r\nimport { SettingCapability } from \"./settings/setting-capability\";\r\nimport { SettingSite } from \"./settings/setting-site\";\r\nimport { SettingUnit } from \"./settings/setting-unit\";\r\nimport { CapabilityState } from \"./states/capability-state\";\r\nimport { SiteState } from \"./states/site-state\";\r\nimport { UnitState } from \"./states/unit-state\";\r\nimport { Unit } from \"./unit\";\r\n\r\n\r\nexport class Site {\r\n  \r\n  public id: string;\r\n  public units: Unit[] = [];\r\n  public capabilities: Capability[] = [];\r\n  constructor(settingSite: SettingSite, wsService: WsService, factory: Factory ) {\r\n   \r\n    this.id = settingSite.id;\r\n  \r\n    settingSite.units.forEach((settingUnit: SettingUnit) => {\r\n      let unit: Unit = new Unit(settingUnit, this, wsService, factory);\r\n      this.units.push(unit);\r\n    });\r\n\r\n    settingSite.capabilities.forEach((settingCapability: SettingCapability) => {\r\n      let capability: Capability = factory.createCapability(settingCapability);     \r\n      this.capabilities.push(capability);\r\n    });\r\n\r\n  }\r\n\r\n  setState(siteState: SiteState) {\r\n    siteState.units.forEach((valueState: UnitState) => {\r\n      let unit: Unit | undefined = this.units.find((valueUnit: Unit) => { return valueUnit.id === valueState.id; });\r\n      if (unit != null) {\r\n        unit.setState(valueState);\r\n      }\r\n    });\r\n    siteState.capabilities.forEach((valueState: CapabilityState) => {\r\n      let cap: Capability | undefined = this.capabilities.find((valueCap: Capability) => { return valueCap.id === valueState.id; });\r\n      if (cap != null) {\r\n        cap.setState(valueState);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n","import { WsService } from \"../services/ws.service\";\r\nimport { Camera } from \"./camera\";\r\nimport { Capability } from \"./capabilities/capability\";\r\nimport { Factory } from \"./factory\";\r\nimport { Material } from \"./material\";\r\nimport { MaterialType } from \"./material-type\";\r\nimport { SettingCapability } from \"./settings/setting-capability\";\r\nimport { SettingMaterial } from \"./settings/setting-material\";\r\nimport { Site } from \"./site\";\r\nimport { CapabilityState } from \"./states/capability-state\";\r\nimport { MaterialState } from \"./states/material-state\";\r\nimport { Unit } from \"./unit\";\r\n\r\nexport class ThermalCamera extends Camera {\r\n  \r\n\r\n  \r\n}\r\n\r\n","import { WsService } from \"../services/ws.service\";\r\nimport { Capability } from \"./capabilities/capability\";\r\nimport { CapabilityType } from \"./capabilities/capability-type\";\r\nimport { Factory } from \"./factory\";\r\nimport { Material } from \"./material\";\r\nimport { MaterialType } from \"./material-type\";\r\nimport { SettingCapability } from \"./settings/setting-capability\";\r\nimport { SettingMaterial } from \"./settings/setting-material\";\r\nimport { Site } from \"./site\";\r\nimport { CapabilityState } from \"./states/capability-state\";\r\nimport { MaterialState } from \"./states/material-state\";\r\nimport { UnitState } from \"./states/unit-state\";\r\nimport { Unit } from \"./unit\";\r\n\r\nexport class Turret implements Material {\r\n\r\n  id: string;\r\n  materials: Material[];\r\n  capabilities: Capability[] = [];\r\n  displayName: string;\r\n  materialType: MaterialType;\r\n  wsService: WsService;\r\n  site: Site;\r\n  unit: Unit;\r\n  constructor(settingMaterial: SettingMaterial, site: Site, unit: Unit, wsService: WsService, factory: Factory) {\r\n    this.id = settingMaterial.id;\r\n    this.materials = [];\r\n    this.site = site;\r\n    this.unit = unit;\r\n    this.materialType = MaterialType.Turret;\r\n    this.wsService = wsService;\r\n    this.displayName = settingMaterial.displayName;\r\n   \r\n    settingMaterial.materials.forEach((settingMaterialChild: SettingMaterial) => {\r\n      let material: Material = factory.createMaterial(settingMaterialChild, site, unit, this.wsService);\r\n      this.materials.push(material);\r\n    });\r\n    settingMaterial.capabilities.forEach((settingCapability: SettingCapability) => {\r\n      let capability: Capability = factory.createCapability(settingCapability);\r\n      capability.material = this;\r\n      this.capabilities.push(capability);\r\n    });\r\n  }\r\n  hasCapability(capabilityType: CapabilityType): boolean {\r\n    let cap: Capability | undefined = this.capabilities.find((value: Capability) => { return value.capabilityType === capabilityType; });\r\n    return cap !== undefined;\r\n\r\n  }\r\n  getCapability<T extends Capability>(capabilityType: CapabilityType): T | undefined {\r\n    let cap: Capability | undefined = this.capabilities.find((value: Capability) => { return value.capabilityType === capabilityType; });\r\n    return <T>cap;\r\n\r\n  }\r\n  setState(state: MaterialState): void {\r\n    state.capabilities.forEach((valueState: CapabilityState) => {\r\n      let cap: Capability | undefined = this.capabilities.find((valueCap: Capability) => { return valueCap.id === valueState.id; });\r\n      if (cap != null) {\r\n        cap.setState(valueState);\r\n      }\r\n    });\r\n    state.materials.forEach((valueState: MaterialState) => {\r\n      let mat: Material | undefined = this.materials.find((valueMat: Material) => { return valueMat.id === valueState.id; });\r\n      if (mat != null) {\r\n        mat.setState(valueState);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\r\n","import { MatError } from \"@angular/material/form-field\";\r\nimport { WsService } from \"../services/ws.service\";\r\nimport { Capability } from \"./capabilities/capability\";\r\nimport { CapabilityType } from \"./capabilities/capability-type\";\r\nimport { Factory } from \"./factory\";\r\nimport { Material } from \"./material\";\r\nimport { MaterialType } from \"./material-type\";\r\nimport { SettingCapability } from \"./settings/setting-capability\";\r\nimport { SettingMaterial } from \"./settings/setting-material\";\r\nimport { Site } from \"./site\";\r\nimport { CapabilityState } from \"./states/capability-state\";\r\nimport { MaterialState } from \"./states/material-state\";\r\nimport { UnitState } from \"./states/unit-state\";\r\n\r\nexport class Unit implements Material {\r\n  \r\n  id: string;\r\n  materials: Material[];\r\n  capabilities: Capability[] = [];\r\n  displayName: string;\r\n  materialType: MaterialType;\r\n  wsService: WsService;\r\n  site: Site;\r\n  unit: Unit;\r\n  constructor(settingMaterial: SettingMaterial, site: Site, wsService: WsService, factory: Factory ) {\r\n \r\n    this.unit = this;\r\n    this.site = site;\r\n    this.id = settingMaterial.id;\r\n    this.materials = [];\r\n    this.wsService = wsService;\r\n    this.materialType = MaterialType.Unit;\r\n   \r\n    this.displayName = settingMaterial.displayName;\r\n    settingMaterial.materials.forEach((settingMaterialChild: SettingMaterial) => {\r\n      let material: Material = factory.createMaterial(settingMaterialChild, site,this, this.wsService);\r\n\r\n      this.materials.push(material);\r\n    });\r\n \r\n    settingMaterial.capabilities.forEach((settingCapability: SettingCapability) => {\r\n      let capability: Capability = factory.createCapability(settingCapability);\r\n      capability.material = this;   \r\n      this.capabilities.push(capability);\r\n    });\r\n  }\r\n\r\n  hasCapability(capabilityType: CapabilityType): boolean {\r\n    let cap: Capability | undefined = this.capabilities.find((value: Capability) => { return value.capabilityType === capabilityType; });\r\n    return cap !== undefined;\r\n\r\n  }\r\n  getCapability<T extends Capability>(capabilityType: CapabilityType): T | undefined {\r\n    let cap: Capability | undefined = this.capabilities.find((value: Capability) => { return value.capabilityType === capabilityType; });\r\n    return <T>cap;\r\n\r\n  }\r\n  // Pour coder cette methode il faut au mmoins une deuxième capability qui ne soit pas du type recherché\r\n  hasMaterialWithCapability( materialType: MaterialType,capabilityType: CapabilityType) {\r\n  \r\n    let material: Material | undefined = this.getMaterial(materialType);\r\n    if (material != null) {\r\n      let cap = material.capabilities.find((value: Capability) => {\r\n        return (value.capabilityType == capabilityType);\r\n      });\r\n      if (cap != null) return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getMaterialCapability<T extends Capability>(materialType: MaterialType, capabilityType: CapabilityType): T | undefined {\r\n    let material: Material | undefined = this.getMaterial(materialType);\r\n    if (material != null) {\r\n      let cap = material.capabilities.find((value: Capability) => {\r\n        return (value.capabilityType == capabilityType);\r\n      });\r\n\r\n      if (cap != null) {\r\n        let result: T = <T>cap;\r\n        return result;\r\n      }\r\n        \r\n      \r\n    }\r\n    return undefined;\r\n  }\r\n \r\n  getMaterial(materialType: MaterialType): Material | undefined {\r\n    return this.materials.find((value: Material) => { return value.materialType == materialType; });\r\n  }\r\n\r\n \r\n  setState(unitState: UnitState) {\r\n    unitState.capabilities.forEach((valueState: CapabilityState) => {\r\n      let cap: Capability | undefined = this.capabilities.find((valueCap: Capability) => { return valueCap.id === valueState.id; });\r\n      if (cap != null) {\r\n        cap.setState(valueState);\r\n      }\r\n    });\r\n    unitState.materials.forEach((valueState: MaterialState) => {\r\n      let mat: Material | undefined = this.materials.find((valueMat: Material) => { return valueMat.id === valueState.id; });\r\n      if (mat != null) {\r\n        mat.setState(valueState);\r\n      }\r\n    });\r\n  \r\n  }\r\n\r\n}\r\n","export class ConfigurationNode {\r\n  public item: any;\r\n  public childs: ConfigurationNode[];\r\n  public selected: boolean = false;\r\n  constructor(item: any,  childs: ConfigurationNode[]) {\r\n    this.item = item;    \r\n    this.childs = childs;\r\n\r\n  }\r\n\r\n}\r\n","import { NestedTreeControl } from '@angular/cdk/tree';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatTreeNestedDataSource } from '@angular/material/tree';\r\nimport { Router } from '@angular/router';\r\nimport { SetSettingResponse } from '../../api/http/set-setting-response';\r\nimport { UnitCreateEmptyResponse } from '../../api/http/unit-create-empty-response';\r\nimport { SettingCapability } from '../../materials/settings/setting-capability';\r\nimport { SettingMaterial } from '../../materials/settings/setting-material';\r\nimport { SettingSite } from '../../materials/settings/setting-site';\r\nimport { SettingUnit } from '../../materials/settings/setting-unit';\r\nimport { Site } from '../../materials/site';\r\nimport { UnitType } from '../../models/unit-type';\r\nimport { HttpService } from '../../services/http.service';\r\nimport { SiteService } from '../../services/site.service';\r\nimport { ConfigurationNode } from './configuration-node';\r\n\r\n@Component({\r\n  selector: 'app-configuration',\r\n  templateUrl: './configuration.component.html',\r\n  styleUrls: ['./configuration.component.scss']\r\n})\r\nexport class ConfigurationComponent implements OnInit {\r\n\r\n  public site: SettingSite;\r\n  public errorMessage: string | undefined = undefined;\r\n  public unitTypes: UnitType[] = [];\r\n  private rootNode: ConfigurationNode = new ConfigurationNode(null, []);\r\n  treeControl = new NestedTreeControl<ConfigurationNode>(node => node.childs);\r\n  dataSource = new MatTreeNestedDataSource<ConfigurationNode>();\r\n  public selectedNode: ConfigurationNode | undefined = undefined;\r\n  public selectedUnitTypeValue:string | undefined = undefined;\r\n\r\n  constructor(private siteService: SiteService, private router: Router, private httpService: HttpService) {\r\n    this.site = <SettingSite>JSON.parse(JSON.stringify(this.siteService.siteSetting));\r\n    this.unitTypes.push({\r\n      displayName: \"Seamos\",\r\n      value:\"SeamosUnit\"\r\n    });\r\n    this.createTreeNodes();\r\n  }\r\n  \r\n\r\n  onAddUnitButtonClick() {\r\n    if (this.selectedUnitTypeValue != null) {\r\n      this.httpService.createEmptyUnit(this.selectedUnitTypeValue).subscribe({\r\n        next: (response: UnitCreateEmptyResponse) => {\r\n          this.site.units = this.site.units.concat([response.settingUnit]);         \r\n          this.createTreeNodes();\r\n          this.selectedNode = this.rootNode;   \r\n        },\r\n        error: (err: HttpErrorResponse) => {\r\n          this.errorMessage = err.message;\r\n          \r\n        },\r\n      });\r\n\r\n    }\r\n  }\r\n  onRemoveSelectedNodeButtonClick() {\r\n    if (this.selectedNode != null) {\r\n      let index: number = this.site.units.indexOf(this.selectedNode.item);\r\n      this.site.units.splice(index, 1);\r\n      this.createTreeNodes();\r\n      this.selectedNode = this.rootNode;   \r\n    }\r\n  }\r\n  findParent(node: ConfigurationNode, searchNode: ConfigurationNode): ConfigurationNode | undefined {\r\n    if (node.childs.indexOf(searchNode) != -1) return node;\r\n    else {\r\n      let result: ConfigurationNode | undefined = undefined;\r\n      node.childs.forEach((child: ConfigurationNode) => {\r\n        let findedParent: ConfigurationNode | undefined = this.findParent(child, searchNode);\r\n        if (findedParent != null) {\r\n          result = findedParent;\r\n        }\r\n      });\r\n      return result;\r\n    }\r\n    \r\n  }\r\n\r\n  selectNode(node: ConfigurationNode) {\r\n    this.deselectChild(this.rootNode);\r\n    node.selected = true;\r\n    this.selectedNode = node;\r\n\r\n  }\r\n  deselectChild(node: ConfigurationNode) {\r\n    node.selected = false;\r\n    node.childs.forEach((n: ConfigurationNode) => {\r\n      n.selected = false;\r\n      this.deselectChild(n);\r\n    });\r\n\r\n  }\r\n  createTreeNodes() {\r\n    let childs: ConfigurationNode[] = [];\r\n    this.site.units.forEach((settingUnit: SettingUnit) => {\r\n      let node: ConfigurationNode = new ConfigurationNode(settingUnit, this.createUnitChild(settingUnit));\r\n      childs.push(node);\r\n    });\r\n    this.site.capabilities.forEach((settingCapability: SettingCapability) => {\r\n      let props = Object.getOwnPropertyNames(settingCapability);\r\n      if (props.length > 5) {\r\n        let node: ConfigurationNode = new ConfigurationNode(settingCapability, []);\r\n        childs.push(node);\r\n      }\r\n      \r\n    });\r\n    this.rootNode = new ConfigurationNode(this.site, childs);\r\n    this.rootNode.selected = true;\r\n    this.dataSource.data = [this.rootNode];\r\n    \r\n  }\r\n  createUnitChild(settingUnit: SettingUnit): ConfigurationNode[] {\r\n    let childs: ConfigurationNode[] = [];\r\n    \r\n    settingUnit.capabilities.forEach((settingCapability: SettingCapability) => {\r\n      let props = Object.getOwnPropertyNames(settingCapability);\r\n      if (props.length > 5) {\r\n        let node: ConfigurationNode = new ConfigurationNode(settingCapability,  []);\r\n        childs.push(node);\r\n      }\r\n    \r\n    });\r\n    \r\n    settingUnit.materials.forEach((settingMaterial: SettingMaterial) => {\r\n      let node: ConfigurationNode = new ConfigurationNode(settingMaterial, this.createMaterialChild(settingMaterial));\r\n      childs.push(node);\r\n    });\r\n    return childs;\r\n  }\r\n  createMaterialChild(settingMaterial: SettingMaterial): ConfigurationNode[] {\r\n    let childs: ConfigurationNode[] = [];\r\n    \r\n    settingMaterial.capabilities.forEach((settingCapability: SettingCapability) => {\r\n      let props = Object.getOwnPropertyNames(settingCapability);\r\n      if (props.length > 5) {\r\n        let node: ConfigurationNode = new ConfigurationNode(settingCapability,  []);\r\n        childs.push(node);\r\n      }\r\n     \r\n    });\r\n    \r\n    settingMaterial.materials.forEach((settingMaterialChild: SettingMaterial) => {\r\n      let node: ConfigurationNode = new ConfigurationNode(settingMaterialChild, this.createMaterialChild(settingMaterialChild));\r\n      childs.push(node);\r\n    });\r\n\r\n    return childs;\r\n  }\r\n\r\n  hasChild = (_: number, node: ConfigurationNode) => !!node.childs && node.childs.length > 0;\r\n  ngOnInit(): void {\r\n\r\n  }\r\n  onCancelButtonClick() {\r\n    this.router.navigate(['/home']);\r\n  }\r\n  onApplyButtonClick() {\r\n    this.httpService.setSetting(this.site).subscribe({\r\n      next: (response: SetSettingResponse) => {\r\n        this.router.navigate(['/home']);\r\n      },\r\n      error: (err: HttpErrorResponse) => {\r\n        this.errorMessage = err.message;\r\n\r\n      },\r\n    });\r\n\r\n  }\r\n}\r\n","<mat-card class=\"card-configuration\">\r\n  <mat-card-header>\r\n    <mat-card-title><mat-icon class=\"icon-title\">face</mat-icon>Configuration</mat-card-title>\r\n    <mat-card-subtitle>Configure Seasense</mat-card-subtitle>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <form class=\"display-flex flex-1\">\r\n      <div class=\"configuration-tree-container\">\r\n        <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" class=\"configuration-tree\">\r\n          <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle>\r\n            <button mat-button (click)=\"selectNode(node)\">\r\n              <div [class]=\"node.selected == true ? 'node-bold' : 'node-normal'\">{{node.item.displayName}}</div>\r\n\r\n            </button>\r\n          </mat-tree-node>\r\n          <mat-nested-tree-node *matTreeNodeDef=\"let node; when: hasChild\">\r\n            <div class=\"mat-tree-node\">\r\n              <button mat-icon-button matTreeNodeToggle\r\n                      [attr.aria-label]=\"'Toggle ' + node.name\">\r\n                <mat-icon class=\"mat-icon-rtl-mirror\">\r\n                  {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\r\n                </mat-icon>\r\n              </button>\r\n              <button mat-button (click)=\"selectNode(node)\">\r\n                <div [class]=\"node.selected == true ? 'node-bold' : 'node-normal'\">{{node.item.displayName}}</div>\r\n              </button>\r\n            </div>\r\n            <div [class.configuration-tree-invisible]=\"!treeControl.isExpanded(node)\"\r\n                 role=\"group\">\r\n              <ng-container matTreeNodeOutlet></ng-container>\r\n            </div>\r\n          </mat-nested-tree-node>\r\n        </mat-tree>\r\n      </div>\r\n      <mat-divider vertical=\"true\"></mat-divider>\r\n      <div class=\"flex-1 display-flex\">\r\n\r\n        <mat-card *ngIf=\"selectedNode != null\" class=\"display-flex flex-1 mat-elevation-z0\">\r\n          <mat-card-header>\r\n            <mat-card-title>{{selectedNode.item.displayName}}</mat-card-title>\r\n          </mat-card-header>\r\n          <mat-card-content class=\"full-size flex-1 display-flex\">\r\n\r\n            <!------------------------------------------  SettingSite  -------------------------------------------------->\r\n            <div class=\"full-size display-flex\" *ngIf=\"selectedNode.item.type == 'SettingSite'\">\r\n              <div class=\"flex-1 display-flex flex-dir-col\">\r\n                <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                  <mat-label>Display name</mat-label>\r\n                  <input name=\"displayName\" matInput [(ngModel)]=\"selectedNode.item.displayName\">\r\n                </mat-form-field>\r\n\r\n                <div class=\"flex-1\"></div>\r\n                <div class=\"flex-dir-row display-flex flex-align-center\">\r\n                  <mat-label class=\"margin-4\">Add unit of type </mat-label>\r\n                  <mat-select class=\"flex-1 margin-4\" [(value)]=\"selectedUnitTypeValue\">\r\n                    <mat-option *ngFor=\"let unitType of unitTypes\" [value]=\"unitType.value\">\r\n                      {{unitType.displayName}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                  <button class=\"flex-1 margin-4\" [disabled]=\"selectedUnitTypeValue == null\" (click)=\"onAddUnitButtonClick()\" mat-button>Add</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!------------------------------------------  SettingSeamosUnit  -------------------------------------------------->\r\n            <div class=\"full-size display-flex flex-dir-col\" *ngIf=\"selectedNode.item.type == 'SettingSeamosUnit'\">\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Display name</mat-label>\r\n                <input name=\"displayName\" matInput [(ngModel)]=\"selectedNode.item.displayName\">\r\n              </mat-form-field>\r\n\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Hardware IP</mat-label>\r\n                <input name=\"hardwareIP\" matInput [(ngModel)]=\"selectedNode.item.hardwareCardIp\">\r\n              </mat-form-field>\r\n\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Hardware Port</mat-label>\r\n                <input name=\"hardwarePort\" matInput [(ngModel)]=\"selectedNode.item.hardwareCardPort\">\r\n              </mat-form-field>\r\n              <div class=\"flex-1\"></div>\r\n              <button class=\"full-width\" (click)=\"onRemoveSelectedNodeButtonClick()\" mat-button>Remove this unit</button>\r\n            </div>\r\n\r\n            <!------------------------------------------  SettingSeamosDayCamera  -------------------------------------------------->\r\n            <div class=\"full-size display-flex flex-dir-col\" *ngIf=\"selectedNode.item.type == 'SettingSeamosDayCamera'\">\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Display name</mat-label>\r\n                <input name=\"displayName\" matInput [(ngModel)]=\"selectedNode.item.displayName\">\r\n              </mat-form-field>\r\n\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Base URL</mat-label>\r\n                <input name=\"baseUrl\" matInput [(ngModel)]=\"selectedNode.item.baseUrl\">\r\n              </mat-form-field>\r\n\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Stream URL</mat-label>\r\n                <input name=\"streamUrl\" matInput [(ngModel)]=\"selectedNode.item.streamUrl\">\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <!------------------------------------------  SettingSeamosThermalCamera  -------------------------------------------------->\r\n            <div class=\"full-size display-flex flex-dir-col\" *ngIf=\"selectedNode.item.type == 'SettingSeamosThermalCamera'\">\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Display name</mat-label>\r\n                <input name=\"displayName\" matInput [(ngModel)]=\"selectedNode.item.displayName\">\r\n              </mat-form-field>             \r\n\r\n\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Stream URL</mat-label>\r\n                <input name=\"streamUrl\" matInput [(ngModel)]=\"selectedNode.item.streamUrl\">\r\n              </mat-form-field>\r\n            </div>\r\n\r\n\r\n            <!------------------------------------------  SettingSeamosInertialMeasurement  -------------------------------------------------->\r\n\r\n            <div class=\"full-size display-flex\" *ngIf=\"selectedNode.item.type == 'SettingSeamosInertialMeasurement'\">\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Display name</mat-label>\r\n                <input name=\"displayName\" matInput [(ngModel)]=\"selectedNode.item.displayName\">\r\n              </mat-form-field>\r\n            </div>\r\n\r\n\r\n            <!------------------------------------------  SettingSeamosLazerMeasurement  -------------------------------------------------->\r\n            <div class=\"full-size display-flex\" *ngIf=\"selectedNode.item.type == 'SettingSeamosLazerMeasurement'\">\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Display name</mat-label>\r\n                <input name=\"displayName\" matInput [(ngModel)]=\"selectedNode.item.displayName\">\r\n              </mat-form-field>\r\n            </div>\r\n\r\n\r\n\r\n            <!------------------------------------------  SettingSeamosTurret  -------------------------------------------------->\r\n            <div class=\"full-size display-flex\" *ngIf=\"selectedNode.item.type == 'SettingSeamosTurret'\">\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Display name</mat-label>\r\n                <input name=\"displayName\" matInput [(ngModel)]=\"selectedNode.item.displayName\">\r\n              </mat-form-field>\r\n            </div>\r\n\r\n\r\n\r\n            <!------------------------------------------  SettingSeamosTurretMoveSpeedCapability  -------------------------------------------------->\r\n            <div class=\"full-size display-flex\" *ngIf=\"selectedNode.item.type == 'SettingSeamosTurretMoveSpeedCapability'\">\r\n              <div class=\"flex-1 display-flex flex-dir-col\">\r\n                <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                  <mat-label>Max Pan Speed (°/sec)</mat-label>\r\n                  <input name=\"maxPanSpeed\" matInput [(ngModel)]=\"selectedNode.item.maxPanSpeed\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                  <mat-label>Max Tilt Speed  (°/sec)</mat-label>\r\n                  <input name=\"maxTiltSpeed\" matInput [(ngModel)]=\"selectedNode.item.maxTiltSpeed\">\r\n\r\n                </mat-form-field>\r\n              </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          </mat-card-content>\r\n        </mat-card>\r\n      </div>\r\n    </form>\r\n    <mat-error *ngIf=\"errorMessage != ''\">{{errorMessage}}</mat-error>\r\n  </mat-card-content>\r\n  <mat-card-actions>\r\n    <div class=\"display-flex\">\r\n      <button class=\"full-width\" (click)=\"onCancelButtonClick()\" mat-button>Cancel</button>\r\n      <button class=\"full-width\" (click)=\"onApplyButtonClick()\" mat-button>Apply</button>\r\n    </div>\r\n  </mat-card-actions>\r\n</mat-card>\r\n\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { GetSettingResponse } from '../../api/http/get-setting-response';\r\n\r\nimport { HttpService } from '../../services/http.service';\r\nimport { SiteService } from '../../services/site.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor(private httpService: HttpService, private siteService : SiteService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.httpService.getSetting().subscribe({\r\n      next: (response: GetSettingResponse) => {\r\n        this.siteService.createSite(response);\r\n        \r\n      },\r\n      error: (err: HttpErrorResponse) => {\r\n        \r\n      },\r\n    });  \r\n  }\r\n\r\n}\r\n","<app-hud-stream></app-hud-stream>\r\n<app-hud-ui></app-hud-ui>\r\n<app-hud-tilt-ruller></app-hud-tilt-ruller>\r\n<app-hud-pan-ruller></app-hud-pan-ruller>\r\n<app-hud-status></app-hud-status>\r\n\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { sha512 } from 'js-sha512';\r\nimport { LoginResponse } from '../../api/http/login-response';\r\nimport { HttpService } from '../../services/http.service';\r\nimport { UserService } from '../../services/user.service';\r\nimport { WsService } from '../../services/ws.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  public login: string = \"sav\";\r\n  public password: string = \"sav\";\r\n  public loginRunning: boolean = false;\r\n  public errorMessage: string = \"\";\r\n\r\n  constructor(private httpService: HttpService, private userService: UserService, private router: Router, private wsService: WsService) {\r\n   \r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  async onConnectButtonClick() {\r\n    this.loginRunning = true;\r\n    this.userService.clearToken();\r\n    this.userService.clearUser();\r\n    this.errorMessage = \"\";\r\n    let hash: string = sha512(this.password);\r\n    this.httpService.login(this.login, hash).subscribe({\r\n      next: (response: LoginResponse) => {\r\n        this.userService.setToken(response.token);\r\n        this.userService.setUser(response.user);\r\n        this.loginRunning = false;\r\n        this.wsService.start();\r\n        this.router.navigate(['/home']);\r\n      },\r\n      error: (err: HttpErrorResponse) => {\r\n        this.errorMessage = err.message;\r\n        this.loginRunning = false;\r\n      },\r\n    });  \r\n    \r\n  }\r\n\r\n}\r\n\r\n","<mat-card class=\"card-login\">\r\n  <mat-card-header>   \r\n    <mat-card-title><mat-icon class=\"icon-title\">face</mat-icon>Authentification</mat-card-title>\r\n    <mat-card-subtitle>Please identify yourself</mat-card-subtitle>\r\n  </mat-card-header>  \r\n  <mat-card-content>\r\n    <form>\r\n      <mat-form-field class=\"full-width\">\r\n        <mat-label>Login</mat-label>\r\n        <input [disabled]=\"loginRunning\" name=\"login\" [(ngModel)]=\"login\" matInput>\r\n      </mat-form-field>\r\n      <mat-form-field class=\"full-width\">\r\n        <mat-label>Password</mat-label>\r\n        <input [disabled]=\"loginRunning\" name=\"password\" [(ngModel)]=\"password\" type=\"password\" matInput>\r\n      </mat-form-field>\r\n    </form>\r\n    <mat-error *ngIf=\"errorMessage != ''\">{{errorMessage}}</mat-error>\r\n  </mat-card-content>\r\n  <mat-card-actions>\r\n    <button [disabled]=\"loginRunning\" class=\"full-width\" (click)=\"onConnectButtonClick()\" mat-button>Connect</button>\r\n\r\n  </mat-card-actions>\r\n</mat-card>\r\n\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { LoginRequest } from '../api/http/login-request';\r\nimport { LoginResponse } from '../api/http/login-response';\r\nimport { Observable } from 'rxjs';\r\nimport { ValidateTokenResponse } from '../api/http/validate-token-response';\r\nimport { ValidateTokenRequest } from '../api/http/validate-token-request';\r\nimport { LogoutResponse } from '../api/http/logout-response';\r\nimport { LogoutRequest } from '../api/http/logout-request';\r\nimport { GetSettingResponse } from '../api/http/get-setting-response';\r\nimport { GetSettingRequest } from '../api/http/get-setting-request';\r\nimport { SetSettingResponse } from '../api/http/set-setting-response';\r\nimport { SettingSite } from '../materials/settings/setting-site';\r\nimport { SetSettingRequest } from '../api/http/set-setting-request';\r\nimport { UnitCreateEmptyResponse } from '../api/http/unit-create-empty-response';\r\nimport { UnitCreateEmptyRequest } from '../api/http/unit-create-empty-request';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpService {\r\n  private baseApiUrl: string = \"\";\r\n  private headers: HttpHeaders;\r\n  constructor(private http: HttpClient) {\r\n    this.headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\r\n  }\r\n  getApiUrl(path : string): string{\r\n    if (this.baseApiUrl == \"\") {\r\n      let url: string = \"\";\r\n      if (location.protocol !== 'https:') {\r\n        url += \"http://\";\r\n      }\r\n      else {\r\n        url += \"https://\";\r\n      }\r\n      url += window.location.hostname;\r\n      url += \":\";\r\n      url += window.location.port;\r\n      url += \"/api/\";     \r\n      this.baseApiUrl = url;\r\n    }\r\n \r\n    return this.baseApiUrl + path;\r\n  }\r\n  login(login: string, hash: string): Observable<LoginResponse> {\r\n    let url: string = this.getApiUrl(\"login\");\r\n    let req: LoginRequest = {\r\n      login: login,\r\n      passwordHash: hash\r\n    };\r\n    return this.http.post<LoginResponse>(url, req, { headers: this.headers });\r\n  }\r\n\r\n  logout(): Observable<LogoutResponse> {\r\n    let url: string = this.getApiUrl(\"logout\");\r\n    let req: LogoutRequest = { };\r\n    return this.http.post<LogoutResponse>(url, req, { headers: this.headers });\r\n  }\r\n\r\n  validateToken(): Observable<ValidateTokenResponse> {\r\n    let url: string = this.getApiUrl(\"token/validate\");\r\n    let req: ValidateTokenRequest = {};\r\n    return this.http.post<ValidateTokenResponse>(url, req, { headers: this.headers });\r\n  }\r\n  getSetting(): Observable<GetSettingResponse> {\r\n    let url: string = this.getApiUrl(\"setting/get\");\r\n    let req: GetSettingRequest = {};\r\n    return this.http.post<GetSettingResponse>(url, req,{ headers: this.headers });\r\n  }\r\n\r\n  setSetting(settingSite: SettingSite): Observable<SetSettingResponse> {\r\n    let url: string = this.getApiUrl(\"setting/set\");\r\n    let req: SetSettingRequest = {\r\n      site: settingSite\r\n    };\r\n    return this.http.post<SetSettingResponse>(url, req, { headers: this.headers });\r\n  }\r\n\r\n  createEmptyUnit(unitType: string): Observable<UnitCreateEmptyResponse> {\r\n    let url: string = this.getApiUrl(\"unit/create/empty\");\r\n    let req: UnitCreateEmptyRequest = {\r\n      unitType: unitType\r\n    };\r\n    return this.http.post<UnitCreateEmptyResponse>(url, req, { headers: this.headers });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { GetSettingResponse } from '../api/http/get-setting-response';\r\nimport { Camera } from '../materials/camera';\r\nimport { Factory } from '../materials/factory';\r\nimport { Material } from '../materials/material';\r\nimport { MaterialType } from '../materials/material-type';\r\nimport { SettingSite } from '../materials/settings/setting-site';\r\nimport { Site } from '../materials/site';\r\nimport { SiteState } from '../materials/states/site-state';\r\nimport { Unit } from '../materials/unit';\r\nimport { WsService } from './ws.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SiteService {\r\n\r\n  public siteStateSubject: Subject<Site | undefined> = new Subject<Site | undefined>();\r\n  public siteLoadedSubject: Subject<Site | undefined> = new Subject<Site | undefined>();\r\n  public unitSelectedSubject: Subject<Unit | undefined> = new Subject<Unit | undefined>();\r\n  public cameraSelectedSubject: Subject<Camera | undefined> = new Subject<Camera | undefined>();\r\n  public site: Site | undefined = undefined;\r\n  public selectedUnit: Unit | undefined = undefined;\r\n  public selectedCamera: Camera | undefined = undefined;\r\n  public siteSetting: SettingSite = {\r\n    id: 'none',\r\n    capabilities:[],\r\n    units: [],\r\n    type: 'Site',\r\n    displayName:'Site'\r\n  };\r\n  constructor(private wsService: WsService) {\r\n\r\n    this.wsService.siteStateSubject.subscribe((value: SiteState) => { this.onStateChange(value); });\r\n  }\r\n  onStateChange(siteState: SiteState) {\r\n    if (this.site != null) {\r\n      this.site.setState(siteState);\r\n      this.siteStateSubject.next(this.site);\r\n    }   \r\n  }\r\n  createSite(response: GetSettingResponse) {\r\n    this.site = undefined;    \r\n    if (response.site != null) {\r\n      this.siteSetting = response.site;\r\n      let factory: Factory = new Factory();\r\n      this.site = new Site(response.site, this.wsService, factory);      \r\n    }   \r\n    if (this.site != null && this.site.units.length > 0) {\r\n      this.selectUnitById(this.site.units[0].id);\r\n      if (this.selectedUnit != null) {\r\n        let dayCamera: Camera = <Camera>this.selectedUnit.getMaterial(MaterialType.DayCamera)\r\n        if (dayCamera != null) {\r\n          this.selectedCamera = dayCamera;\r\n        }\r\n        else {\r\n\r\n          let thermalCamera: Camera = <Camera>this.selectedUnit.getMaterial(MaterialType.ThermalCamera)\r\n          if (thermalCamera != null) {\r\n            this.selectedCamera = thermalCamera;          \r\n          }\r\n          else {\r\n            this.selectedCamera = undefined;          \r\n          }\r\n        }\r\n       \r\n      }\r\n    }\r\n    this.siteLoadedSubject.next(this.site);\r\n    this.unitSelectedSubject.next(this.selectedUnit);\r\n    this.cameraSelectedSubject.next(this.selectedCamera);\r\n  }\r\n\r\n  selectUnitById(unitId: string) {\r\n    let unit: Unit | undefined = this.site?.units.find((value: Unit) => {\r\n      return value.id == unitId;\r\n    });\r\n    this.selectedUnit = unit;    \r\n  }\r\n\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { User } from '../models/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  \r\n  localStorage: Storage;\r\n  user: User | null;\r\n  token: string | null;\r\n  constructor() {\r\n    this.user = null;\r\n    this.token = null;\r\n    this.localStorage = window.localStorage;\r\n  }\r\n  clearUser() {\r\n    this.user = null;\r\n  }\r\n  clearToken() {\r\n    this.token = null;\r\n  }\r\n\r\n  setUser(user: User) {\r\n    this.user = user;\r\n    \r\n  }\r\n  setToken(token: string) {\r\n    this.token = token;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { WsTurretMoveSpeedRequest } from '../api/ws/ws-turret-move-speed-request';\r\nimport { UserService } from './user.service';\r\nimport * as uuid from 'uuid';\r\nimport { WsGetStateRequest } from '../api/ws/ws-get-state-request';\r\nimport { WsGetStateResponse } from '../api/ws/ws-get-state-response';\r\nimport { Factory } from '../materials/factory';\r\nimport { WsResponse } from '../api/ws/ws-response';\r\nimport { SiteState } from '../materials/states/site-state';\r\nimport { Subject } from 'rxjs';\r\nimport { WsCameraZoomOutStartRequest } from '../api/ws/ws-camera-zoom-out-start-request';\r\nimport { WsCameraZoomStopRequest } from '../api/ws/ws-camera-zoom-stop-request';\r\nimport { WsCameraZoomInStartRequest } from '../api/ws/ws-camera-zoom-in-start-request';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WsService {\r\n \r\n\r\n  public siteStateSubject: Subject<SiteState> = new Subject<SiteState>();\r\n  private stateTimer: any;\r\n  private stateInterval: number = 100;\r\n\r\n  constructor(private userService: UserService) {\r\n   \r\n  }\r\n  tryGetState() {\r\n    try { this.getStates(); }\r\n    catch {}\r\n\r\n  }\r\n\r\n \r\n  private socket: WebSocket | null = null;\r\n  start() {  \r\n \r\n    if (this.socket != null) {\r\n      this.socket.close();\r\n      this.socket = null;\r\n    }\r\n    let scheme = document.location.protocol === \"https:\" ? \"wss\" : \"ws\";\r\n    let port = document.location.port ? (\":\" + document.location.port) : \"\";\r\n    let connectionUrl = scheme + \"://\" + document.location.hostname + port + \"/ws\";\r\n    this.socket = new WebSocket(connectionUrl);\r\n    this.socket.onopen = (event) => {\r\n\r\n      this.wsOpen(event);\r\n    };\r\n    this.socket.onclose = async (event) => {\r\n      this.wsClose(event);\r\n    };\r\n    this.socket.onmessage = (event) => {\r\n      this.wsMessage(event);\r\n    };\r\n    this.socket.onerror = (event) => {\r\n      this.wsError(event);\r\n    };\r\n    this.stateTimer = setInterval(() => { this.tryGetState(); }, this.stateInterval);\r\n  }\r\n  wsError(event: Event) {\r\n    console.error(\"wsError\", event);\r\n  }\r\n\r\n  wsMessage(event: MessageEvent) {\r\n    if (event.data != null) {\r\n      let obj = JSON.parse(event.data);\r\n      if (obj.$type != null) {\r\n        let factory: Factory = new Factory()\r\n        let response: WsResponse = factory.createMessage(obj);\r\n        if (response.$type === 'WsGetStateResponse') {\r\n          this.siteStateSubject.next((<WsGetStateResponse>response).site)\r\n        } \r\n      \r\n       \r\n      }\r\n     \r\n    }\r\n    \r\n  }\r\n  async wsClose(event: CloseEvent) {\r\n    console.log(\"wsClose\", event);\r\n    \r\n\r\n  }\r\n  wsOpen(event: Event) {\r\n    console.log(\"wsOpen\", event);\r\n  }\r\n\r\n  stop() {\r\n    if (this.socket != null) {\r\n      this.socket.close();\r\n    }\r\n    clearInterval(this.stateTimer);\r\n  }\r\n  getStates() {\r\n    \r\n    if (this.userService.token == null) return;\r\n    let request: WsGetStateRequest = {\r\n      $type: \"WsGetStateRequest\",\r\n      requestId: uuid.v4(),  \r\n      token: this.userService.token\r\n    };\r\n    let data: string = JSON.stringify(request);\r\n \r\n    this.socket?.send(data);\r\n    \r\n  }\r\n\r\n  turretMoveSpeed(unitId: string, materialId: string, axisX: number, axisY: number) {\r\n    if (this.userService.token == null) return;\r\n    let request: WsTurretMoveSpeedRequest = {\r\n      $type: \"WsTurretMoveSpeedRequest\",\r\n      requestId: uuid.v4(),\r\n      unitId: unitId,\r\n      materialId: materialId,\r\n      speed: {\r\n        x: axisX,\r\n        y: axisY\r\n      },\r\n    \r\n      token: this.userService.token    \r\n    };\r\n    console.log(\"wsService send turretMoveSpeed \" + axisX + \" \" + axisY);\r\n    let data: string = JSON.stringify(request);   \r\n    this.socket?.send(data);\r\n\r\n  }\r\n\r\n  cameraZoomStop(unitId: string, materialId: string) {\r\n    if (this.userService.token == null) return;\r\n    let request: WsCameraZoomStopRequest = {\r\n      $type: \"WsCameraZoomStopRequest\",\r\n      unitId: unitId,\r\n      requestId: uuid.v4(),\r\n      materialId: materialId,\r\n      token: this.userService.token\r\n     \r\n    };\r\n    console.log(\"WebSocket send stopZoom\");\r\n    let data: string = JSON.stringify(request);\r\n    this.socket?.send(data);\r\n  }\r\n  cameraZoomInStart(unitId: string, materialId: string) {\r\n    if (this.userService.token == null) return;\r\n    let request: WsCameraZoomInStartRequest = {\r\n      $type: \"WsCameraZoomInStartRequest\",\r\n      unitId: unitId,\r\n      requestId: uuid.v4(),\r\n      materialId: materialId,\r\n      token: this.userService.token\r\n    \r\n    };\r\n    console.log(\"WebSocket send cameraZoomInStart\");\r\n    let data: string = JSON.stringify(request);\r\n    this.socket?.send(data);\r\n  }\r\n  cameraZoomOutStart(unitId: string, materialId: string) {\r\n    if (this.userService.token == null) return;\r\n    let request: WsCameraZoomOutStartRequest = {\r\n      $type: \"WsCameraZoomOutStartRequest\",\r\n      unitId: unitId,\r\n      requestId: uuid.v4(),\r\n      materialId: materialId,\r\n      token: this.userService.token    \r\n    };\r\n    console.log(\"WebSocket send cameraZoomOutStart\");\r\n    let data: string = JSON.stringify(request);\r\n    this.socket?.send(data);\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiServer: '/'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["sha512","i0","LoginComponent","constructor","httpService","userService","router","wsService","ngOnInit","onConnectButtonClick","loginRunning","clearToken","clearUser","errorMessage","hash","password","login","subscribe","next","response","setToken","token","setUser","user","start","navigate","error","err","message","selectors","decls","vars","consts","template","ctx","uuid","Factory","Subject","WsService","tryGetState","getStates","socket","close","scheme","document","location","protocol","port","connectionUrl","hostname","WebSocket","onopen","event","wsOpen","onclose","wsClose","onmessage","wsMessage","onerror","wsError","stateTimer","setInterval","stateInterval","console","data","obj","JSON","parse","$type","factory","createMessage","siteStateSubject","site","log","stop","clearInterval","request","requestId","v4","stringify","_a","send","turretMoveSpeed","unitId","materialId","axisX","axisY","speed","x","y","cameraZoomStop","cameraZoomInStart","cameraZoomOutStart","providedIn"],"sourceRoot":"webpack:///"}