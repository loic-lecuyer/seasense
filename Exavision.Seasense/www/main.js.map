{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/async-slider/async-slider.component.ts","./src/app/components/async-slider/async-slider.component.html","./src/app/components/async-toggle-group/async-toggle-group.component.ts","./src/app/components/async-toggle-group/async-toggle-group.component.html","./src/app/components/compass/compass.component.ts","./src/app/components/compass/compass.component.html","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/hud-button/hud-button.component.ts","./src/app/components/hud-button/hud-button.component.html","./src/app/components/hud-check/hud-check.component.ts","./src/app/components/hud-check/hud-check.component.html","./src/app/components/hud-info/hud-info.component.ts","./src/app/components/hud-info/hud-info.component.html","./src/app/components/hud-lrf-button/hud-lrf-button.component.ts","./src/app/components/hud-lrf-button/hud-lrf-button.component.html","./src/app/components/hud-ruller-pan/hud-ruller-pan.component.ts","./src/app/components/hud-ruller-pan/hud-ruller-pan.component.html","./src/app/components/hud-ruller-tilt/hud-ruller-tilt.component.ts","./src/app/components/hud-ruller-tilt/hud-ruller-tilt.component.html","./src/app/components/hud-status/hud-status.component.ts","./src/app/components/hud-status/hud-status.component.html","./src/app/components/hud-stream/hud-stream.component.ts","./src/app/components/hud-stream/hud-stream.component.html","./src/app/components/hud-ui/hud-ui.component.ts","./src/app/components/hud-ui/hud-ui.component.html","./src/app/components/panel-camera/panel-camera.component.ts","./src/app/components/panel-camera/panel-camera.component.html","./src/app/components/panel-media/panel-media.component.ts","./src/app/components/panel-media/panel-media.component.html","./src/app/components/panel-sav/panel-sav.component.ts","./src/app/components/panel-sav/panel-sav.component.html","./src/app/components/stick/stick.component.ts","./src/app/components/stick/stick.component.html","./src/app/guards/jwt-guard.ts","./src/app/interceptor/jwt-interceptor.ts","./src/app/materials/camera.ts","./src/app/materials/capabilities/camera/camera-auto-focus-one-push-capability.ts","./src/app/materials/capabilities/camera/camera-focus-continuous-capability.ts","./src/app/materials/capabilities/camera/camera-zoom-absolute-position-capability.ts","./src/app/materials/capabilities/camera/camera-zoom-continuous-capability.ts","./src/app/materials/capabilities/double-value-capability.ts","./src/app/materials/capabilities/double-value-type.ts","./src/app/materials/capabilities/inertial-measurement/inertial-measurement-measure-capability.ts","./src/app/materials/capabilities/lazer-measurement/lazer-measurement-shoot-capability.ts","./src/app/materials/capabilities/switch-value-capability.ts","./src/app/materials/capabilities/switch-value-type.ts","./src/app/materials/capabilities/turret/turret-absolute-position-capability.ts","./src/app/materials/capabilities/turret/turret-gyrostabilization-capability.ts","./src/app/materials/capabilities/turret/turret-move-absolute-capability.ts","./src/app/materials/capabilities/turret/turret-move-speed-capability.ts","./src/app/materials/capabilities/unit/unit-reboot-capability.ts","./src/app/materials/capabilities/unit/unit-sav-capability.ts","./src/app/materials/day-camera.ts","./src/app/materials/factory.ts","./src/app/materials/inertial-measurement.ts","./src/app/materials/lazer-measurement.ts","./src/app/materials/site.ts","./src/app/materials/states/status-state.ts","./src/app/materials/thermal-camera.ts","./src/app/materials/turret.ts","./src/app/materials/unit.ts","./src/app/pages/configuration/configuration-node.ts","./src/app/pages/configuration/configuration.component.ts","./src/app/pages/configuration/configuration.component.html","./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/services/gamepad.service.ts","./src/app/services/http.service.ts","./src/app/services/site.service.ts","./src/app/services/ui.service.ts","./src/app/services/user.service.ts","./src/app/services/ws.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { JwtGuard } from './guards/jwt-guard';\r\nimport { ConfigurationComponent } from './pages/configuration/configuration.component';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\r\n  { path: 'home', component: HomeComponent, canActivate: [JwtGuard]},\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'configuration', component: ConfigurationComponent }  \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [\r\n    RouterModule,\r\n    MatTooltipModule\r\n  ]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'seasense-client';\r\n}\r\n","<app-header></app-header>\r\n<router-outlet></router-outlet>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { ConfigurationComponent } from './pages/configuration/configuration.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { HttpService } from './services/http.service';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { TextFieldModule } from '@angular/cdk/text-field';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { UserService } from './services/user.service';\r\nimport { JwtInterceptor } from './interceptor/jwt-interceptor';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { HudUiComponent } from './components/hud-ui/hud-ui.component';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { HudStreamComponent } from './components/hud-stream/hud-stream.component';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { HudStatusComponent } from './components/hud-status/hud-status.component';\r\nimport { CompassComponent } from './components/compass/compass.component';\r\nimport { StickComponent } from './components/stick/stick.component';\r\nimport { HudButtonComponent } from './components/hud-button/hud-button.component';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { HudCheckComponent } from './components/hud-check/hud-check.component';\r\nimport { HudRullerPanComponent } from './components/hud-ruller-pan/hud-ruller-pan.component';\r\nimport { HudRullerTiltComponent } from './components/hud-ruller-tilt/hud-ruller-tilt.component';\r\nimport { HudLrfButtonComponent } from './components/hud-lrf-button/hud-lrf-button.component';\r\nimport { PanelCameraComponent } from './components/panel-camera/panel-camera.component';\r\nimport { UiService } from './services/ui.service';\r\nimport { AsyncSliderComponent } from './components/async-slider/async-slider.component';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { AsyncToggleGroupComponent } from './components/async-toggle-group/async-toggle-group.component';\r\nimport { HudInfoComponent } from './components/hud-info/hud-info.component';\r\nimport { PanelMediaComponent } from './components/panel-media/panel-media.component';\r\nimport { PanelSavComponent } from './components/panel-sav/panel-sav.component';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\n\r\n/** Http interceptor providers in outside-in order */\r\nexport const httpInterceptorProviders = [\r\n  { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n];\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    LoginComponent,\r\n    ConfigurationComponent,\r\n    HeaderComponent,\r\n    HudUiComponent,\r\n    HudStreamComponent,    \r\n    HudStatusComponent,\r\n    CompassComponent,\r\n    StickComponent,\r\n    HudButtonComponent,\r\n    HudCheckComponent,\r\n    HudRullerPanComponent,\r\n    HudRullerTiltComponent,\r\n    HudLrfButtonComponent,\r\n    PanelCameraComponent,\r\n    AsyncSliderComponent,\r\n    AsyncToggleGroupComponent,\r\n    HudInfoComponent,\r\n    PanelMediaComponent,\r\n    PanelSavComponent    \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,    \r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    MatButtonModule,\r\n    MatSliderModule,\r\n    MatCheckboxModule,\r\n    CdkTableModule,\r\n    MatSelectModule,\r\n    TextFieldModule,\r\n    MatRippleModule,\r\n    ScrollingModule,\r\n    MatListModule,\r\n    MatTreeModule,\r\n    MatTableModule,\r\n    OverlayModule,\r\n    MatToolbarModule,\r\n    MatCardModule,\r\n    MatTabsModule,\r\n    MatIconModule,\r\n    MatDividerModule,\r\n    MatSnackBarModule,\r\n    MatMenuModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,    \r\n    MatButtonToggleModule\r\n  ],\r\n  providers: [HttpService, UserService, UiService, httpInterceptorProviders],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { CapabilityType } from '../../materials/capabilities/capability-type';\r\nimport { DoubleValueCapability } from '../../materials/capabilities/double-value-capability';\r\nimport { DoubleValueType } from '../../materials/capabilities/double-value-type';\r\n\r\n@Component({\r\n  selector: 'app-async-slider',\r\n  templateUrl: './async-slider.component.html',\r\n  styleUrls: ['./async-slider.component.scss']\r\n})\r\nexport class AsyncSliderComponent implements OnInit {\r\n\r\n  @Input() capability: DoubleValueCapability;\r\n  @Input() displayName: string = \"\";\r\n \r\n  constructor() {\r\n    this.capability = new DoubleValueCapability({\r\n      capabilityType: CapabilityType.DoubleValue,\r\n      displayName: \"\",\r\n      doubleValueType: DoubleValueType.BlackLevel,\r\n      id: '',\r\n      maxValue: 0,\r\n      minValue: 0,\r\n      type:\"\"\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n   \r\n  }\r\n\r\n \r\n}\r\n","\r\n  <mat-label class=\"slider-label\">{{displayName}}</mat-label>\r\n  <div class=\"container\">   \r\n    <div class=\"sliders-container\">\r\n      <mat-slider [min]=\"capability.minValue\" [max]=\"capability.maxValue\" [(ngModel)]=\"capability.value\" [disabled]=\"true\" class=\"slider-value\"></mat-slider>\r\n      <mat-slider matInput [min]=\"capability.minValue\" [max]=\"capability.maxValue\" [(ngModel)]=\"capability.editValue\" class=\"slider-edit\"></mat-slider>\r\n    </div>\r\n  </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { MatButtonToggleChange } from '@angular/material/button-toggle';\r\nimport { CapabilityType } from '../../materials/capabilities/capability-type';\r\nimport { SwitchValueCapability } from '../../materials/capabilities/switch-value-capability';\r\nimport { SwitchValueType } from '../../materials/capabilities/switch-value-type';\r\nimport { SwitchValue } from '../../models/switch-value';\r\n\r\n@Component({\r\n  selector: 'app-async-toggle-group',\r\n  templateUrl: './async-toggle-group.component.html',\r\n  styleUrls: ['./async-toggle-group.component.scss']\r\n})\r\nexport class AsyncToggleGroupComponent implements OnInit {\r\n\r\n\r\n  public currentValue: string = \"\";\r\n  @Input() capability: SwitchValueCapability;\r\n  @Input() displayName: string = \"\";\r\n  constructor() {\r\n    this.capability = new SwitchValueCapability({\r\n      capabilityType: CapabilityType.SwitchValue,\r\n      displayName: \"\",\r\n      id: \"\",\r\n      switchValueType: SwitchValueType.ExposureTimeMode,\r\n      type: \"\",\r\n      values: []\r\n\r\n    });\r\n\r\n  }\r\n\r\n  onToggleChnage(evt: MatButtonToggleChange) {\r\n    let finded: SwitchValue | undefined = this.capability.values.find((val: SwitchValue) => { return val.value === evt.value });\r\n    if (finded != null) {\r\n      this.capability.editValue = finded;\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.currentValue = this.capability.value.value;\r\n    \r\n  }\r\n\r\n}\r\n","  <mat-label>{{displayName}}</mat-label> \r\n  <div class=\"container\">\r\n    <div class=\"toggle-group-container\">\r\n      <mat-button-toggle-group   [(ngModel)]=\"currentValue\" (change)=\"onToggleChnage($event)\" [name]=\"capability.id\" aria-label=\"Font Style\">\r\n        <mat-button-toggle [ngClass]=\"{'back-selected': capability.value.value === item.value, 'back-unselected' : capability.value.value !== item.value}\" *ngFor=\"let item of capability.values\" [value]=\"item.value\">{{item.displayName}}</mat-button-toggle>\r\n      </mat-button-toggle-group>\r\n    </div>\r\n  </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { Component, ElementRef, OnDestroy, OnInit, Renderer2, ViewChild } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { CapabilityType } from '../../materials/capabilities/capability-type';\r\nimport { InertialMeasurementMeasureCapability } from '../../materials/capabilities/inertial-measurement/inertial-measurement-measure-capability';\r\nimport { TurretAbsolutePositionCapability } from '../../materials/capabilities/turret/turret-absolute-position-capability';\r\nimport { MaterialType } from '../../materials/material-type';\r\nimport { SiteService } from '../../services/site.service';\r\n\r\n@Component({\r\n  selector: 'app-compass',\r\n  templateUrl: './compass.component.html',\r\n  styleUrls: ['./compass.component.scss']\r\n})\r\nexport class CompassComponent implements OnInit, OnDestroy {\r\n  private siteStateSubscription: Subscription;\r\n  @ViewChild('svgTurret') svgTurret: ElementRef | null;\r\n  @ViewChild('svgDirection') svgDirection: ElementRef | null;\r\n  public info: string = \"\";\r\n  \r\n\r\n  constructor(private renderer: Renderer2, private siteService: SiteService) {\r\n    this.svgTurret = null;\r\n    this.svgDirection = null;\r\n    this.siteStateSubscription = this.siteService.siteStateSubject.subscribe(() => { this.updateUi(); });\r\n  }\r\n  updateUi() {\r\n    this.info = \"\";\r\n    let rotateInfoTurret = \"rotate(0deg)\";\r\n    let rotateInfoDirection = \"rotate(0deg)\";\r\n    if (this.siteService.selectedUnit != null) {\r\n\r\n      let capPosition: TurretAbsolutePositionCapability | undefined = this.siteService.selectedUnit.getMaterialCapability<TurretAbsolutePositionCapability>(MaterialType.Turret, CapabilityType.TurretAbsolutePosition);\r\n      if (capPosition != null) {\r\n        rotateInfoTurret = \"rotate(\" + capPosition.pan.toFixed(0) + \"deg)\";\r\n        this.info += \"Pan : \" + capPosition.pan.toFixed(2) + \"°\\nTilt : \" + capPosition.tilt.toFixed(2) +\"°\\n\";\r\n      }\r\n      \r\n      let capInertial: InertialMeasurementMeasureCapability | undefined = this.siteService.selectedUnit.getMaterialCapability<InertialMeasurementMeasureCapability>(MaterialType.InertialMeasurement, CapabilityType.InertialMeasurementMeasure);\r\n      if (capInertial != null) {\r\n        rotateInfoDirection = \"rotate(\" + capInertial.angleY.toFixed(0) + \"deg)\";\r\n        this.info += \"Imu X : \" + capInertial.angleX.toFixed(2) + \"°\\nImu Y : \" + capInertial.angleY.toFixed(2) + \"\\nImu Z : \" + capInertial.angleZ.toFixed(2)+\"°\";\r\n      }\r\n      if (this.svgTurret != null) {\r\n        this.renderer.setStyle(this.svgTurret.nativeElement, 'transform', rotateInfoTurret);\r\n      }\r\n      if (this.svgDirection != null) {\r\n        this.renderer.setStyle(this.svgDirection.nativeElement, 'transform', rotateInfoDirection);\r\n      }\r\n    }\r\n  }\r\n  ngOnDestroy() {\r\n    this.siteStateSubscription.unsubscribe();\r\n\r\n  }\r\n  ngOnInit(): void {\r\n    this.updateUi();\r\n  }\r\n\r\n}\r\n","<div [matTooltip]=\"info\"  [matTooltipClass]=\"'multiline-tooltip'\" class=\"container\">\r\n  <div  class=\"svg-center\"><img alt=\"compass background\" src=\"assets/compass-next-fond.svg\" /></div>\r\n  <div   class=\"svg-center\"><img alt=\"compass turret\" #svgTurret src=\"assets/compass-next-turret.svg\" /></div>\r\n  <div class=\"svg-center\"><img alt=\"compase rose\" #svgDirection src=\"assets/compass-next-rose.svg\" /></div>\r\n</div>\r\n\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { LogoutResponse } from '../../api/http/logout-response';\r\nimport { Site } from '../../materials/site';\r\nimport { Unit } from '../../materials/unit';\r\nimport { HttpService } from '../../services/http.service';\r\nimport { SiteService } from '../../services/site.service';\r\nimport { UiService } from '../../services/ui.service';\r\nimport { UserService } from '../../services/user.service';\r\nimport { WsService } from '../../services/ws.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  private siteLoadedSubscription: Subscription;\r\n  public units: Unit[] = [];\r\n  public selectedUnitId: string | undefined = undefined;\r\n  constructor(public userService: UserService, public httpService: HttpService, public router: Router, private siteService: SiteService, private wsService: WsService, private uiService: UiService) {\r\n    this.siteLoadedSubscription = this.siteService.siteLoadedSubject.subscribe((site: Site | undefined) => {\r\n      if (site == null) this.units = [];\r\n      else this.units = site.units;\r\n      this.selectedUnitId = this.siteService.selectedUnit?.id;\r\n    });\r\n    \r\n  }\r\n  onCameraButtonClick() {\r\n    this.uiService.showPanelCamera();\r\n  }\r\n  onConfigurationButtonClick() {\r\n    this.router.navigate(['/configuration'])\r\n  }\r\n  ngOnDestroy() {\r\n    this.siteLoadedSubscription.unsubscribe()\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n  onHomeClick() {\r\n    this.router.navigate(['/home']);\r\n  }\r\n  onSelectedUnitChange(unitId: string) {\r\n    this.siteService.selectUnitById(unitId);    \r\n  }\r\n  onLogoutClick() {\r\n    this.httpService.logout().subscribe({\r\n      next: (response: LogoutResponse) => {\r\n        this.wsService.stop();\r\n        this.userService.clearToken();\r\n        this.userService.clearUser();\r\n        this.router.navigate(['/login'])\r\n      },\r\n      error: (err: HttpErrorResponse) => {\r\n        this.userService.clearToken();\r\n        this.userService.clearUser();\r\n        this.router.navigate(['/login'])\r\n      },\r\n    });  \r\n  }\r\n  onFullScreenClick() {\r\n    if (!document.fullscreenElement) {\r\n      document.documentElement.requestFullscreen();\r\n    } else {\r\n      if (document.exitFullscreen) {\r\n        document.exitFullscreen();\r\n      }\r\n    }\r\n  \r\n  }\r\n  onSwitchLeftToRightclick() {\r\n    this.uiService.switchLeftToRight();\r\n  }\r\n  onShowMediaClick() {\r\n    this.uiService.showPanelMedia();\r\n  }\r\n\r\n  onShowSavClick() {\r\n    this.uiService.showPanelSav();\r\n  }\r\n}\r\n","<mat-toolbar class=\"display-flex\" color=\"primary\">\r\n  <div class=\"display-flex flex-1 flex-align-stretch\">\r\n    <button [matMenuTriggerFor]=\"menu\" mat-button>\r\n      <mat-icon [inline]=\"true\" class=\"big-icon\" aria-hidden=\"false\" aria-label=\"Click to open menu\">view_headline</mat-icon>\r\n    </button>\r\n    <mat-menu #menu=\"matMenu\">\r\n      <button *ngIf=\"userService.user != null && !router.url.includes('configuration') && (userService.user.role.toString() === 'Sav' || userService.user.role.toString() === 'Admin')\" (click)=\"onConfigurationButtonClick()\" mat-menu-item><mat-icon>settings</mat-icon>Configuration</button>\r\n      <button *ngIf=\"userService.user != null && !router.url.includes('configuration')\" (click)=\"onCameraButtonClick()\" mat-menu-item> <mat-icon>camera_enhance</mat-icon>Camera</button>\r\n      <button  *ngIf=\"userService.user != null && !router.url.includes('configuration')\"  (click)=\"onShowMediaClick()\" mat-menu-item><mat-icon>video_library</mat-icon>Medias</button>\r\n      <button *ngIf=\"userService.user != null && userService.user.role.toString() === 'Sav'\" (click)=\"onShowSavClick()\" mat-menu-item><mat-icon>bug_report</mat-icon>Sav</button>\r\n    </mat-menu>\r\n\r\n\r\n    <div class=\"display-flex flex-dir-col\">\r\n      <div class=\"flex-1\"></div>\r\n      <div class=\"flex-dir-row display-flex app-title-container\">\r\n        <div class=\"logo-small\"></div>\r\n        <div matTooltip=\"Go to home page\" (click)=\"onHomeClick()\" class=\"title\">Seasens</div>\r\n        <div matTooltip=\"Go to home page\" (click)=\"onHomeClick()\" class=\"sub-title\">By Exavision</div>\r\n      </div>\r\n\r\n      <div class=\"flex-1\"></div>\r\n    </div>\r\n    \r\n\r\n\r\n    \r\n\r\n\r\n\r\n    <div class=\"flex-1\"></div>\r\n\r\n\r\n    <mat-divider  *ngIf=\"this.userService.user != null\" class=\"margin-4\" [vertical]=\"true\"></mat-divider>\r\n\r\n    <div  *ngIf=\"this.userService.user != null &&  !router.url.includes('configuration')\"  class=\"flex-dir-col display-flex select-unit-combo\" >\r\n      <div class=\"flex-1\"></div>\r\n      <div class=\"user-info display-flex flex-dir-row\">\r\n        <div>Selected unit</div>\r\n      </div>\r\n      <div class=\"user-info display-flex flex-dir-row\">\r\n\r\n        <mat-select [(value)]=\"selectedUnitId\" #unitSelect (selectionChange)=\"onSelectedUnitChange(unitSelect.value)\">\r\n          <mat-option [value]=\"unit.id\" *ngFor=\"let unit of units\">\r\n            {{unit.displayName}}\r\n          </mat-option>\r\n        </mat-select>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <mat-divider  *ngIf=\"this.userService.user != null\" class=\"margin-4\" [vertical]=\"true\"></mat-divider>\r\n\r\n\r\n\r\n\r\n    <div class=\"flex-dir-col display-flex\" *ngIf=\"this.userService.user != null\">\r\n      <div class=\"flex-1\"></div>\r\n      <div class=\"user-info display-flex flex-dir-row\" >\r\n        <div>User : {{this.userService.user.login}} Role : {{this.userService.user.role}}</div>\r\n\r\n      </div>\r\n      <div class=\"user-info display-flex flex-dir-row\" *ngIf=\"this.userService.user != null\">\r\n        <mat-icon class=\"clickable margin-4\" matTooltip=\"Switch to fullscreen\" (click)=\"onFullScreenClick()\">fullscreen</mat-icon>\r\n        <mat-icon class=\"clickable margin-4\" matTooltip=\"Switch LeftToRight <-> RightToLeft\" (click)=\"onSwitchLeftToRightclick()\">flip_camera_android</mat-icon>\r\n        <mat-icon class=\"clickable margin-4\" matTooltip=\"Configuration\"  *ngIf=\"userService.user != null && !router.url.includes('configuration')  && (userService.user.role.toString() === 'Sav' || userService.user.role.toString() === 'Admin')\"  (click)=\"onConfigurationButtonClick()\">settings</mat-icon>\r\n        <mat-icon class=\"clickable margin-4\" matTooltip=\"Logout\" *ngIf=\"this.userService.user != null\" (click)=\"onLogoutClick()\">logout</mat-icon>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n  </div>\r\n</mat-toolbar>\r\n","import { Component, EventEmitter, HostListener, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-hud-button',\r\n  templateUrl: './hud-button.component.html',\r\n  styleUrls: ['./hud-button.component.scss']\r\n})\r\nexport class HudButtonComponent implements OnInit {\r\n\r\n  @Output() buttonUp: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n  @Output() buttonDown: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n  private isMouseDown: boolean = false;\r\n  constructor() { }\r\n  onMouseDown() {\r\n    this.isMouseDown = true;\r\n    this.buttonDown.emit(true);\r\n  }\r\n  onMouseUp() {\r\n    if (this.isMouseDown === true) {\r\n      this.isMouseDown = false;\r\n      this.buttonUp.emit(true);\r\n    }\r\n  }\r\n  ngOnInit(): void {\r\n  }\r\n  @HostListener('document:pointerup', ['$event'])\r\n  onDocumentPointerUp(evt: any) {\r\n    if (this.isMouseDown === true) {\r\n      this.isMouseDown = false;\r\n      this.buttonUp.emit(true);\r\n    }\r\n\r\n  }\r\n\r\n  @HostListener('document:mouseup', ['$event'])\r\n  onDocumentMouse(evt: any) {\r\n    if (this.isMouseDown === true) {\r\n      this.isMouseDown = false;\r\n      this.buttonUp.emit(true);\r\n    }\r\n  }\r\n}\r\n","<div (mousedown)=\"onMouseDown()\"  class=\"hexagon\" (mouseup)=\"onMouseUp()\">\r\n  <div class=\"flex-1\"></div>\r\n  <div class=\"display-flex flex-dir-col\">\r\n    <div class=\"flex-1\"></div>\r\n    <ng-content></ng-content>\r\n    <div class=\"flex-1\"></div>\r\n  </div> \r\n  <div class=\"flex-1\"></div>\r\n</div>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-hud-check',\r\n  templateUrl: './hud-check.component.html',\r\n  styleUrls: ['./hud-check.component.scss']\r\n})\r\nexport class HudCheckComponent implements OnInit {\r\n  @Input() isChecked: boolean = false;\r\n\r\n  @Output() checkChange: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n  onMouseClick() {  \r\n    this.checkChange.emit(!this.isChecked);\r\n  }\r\n\r\n}\r\n","<div (click)=\"onMouseClick()\"  [ngClass]=\"isChecked ? 'hexagon-checked' : 'hexagon-unchecked'\">\r\n  <div class=\"flex-1\"></div>\r\n  <div class=\"display-flex flex-dir-col\">\r\n    <div class=\"flex-1\"></div>\r\n    <ng-content></ng-content>\r\n    <div class=\"flex-1\"></div>\r\n  </div>\r\n  <div class=\"flex-1\"></div>\r\n</div>\r\n","import { animate, style, transition, trigger } from '@angular/animations';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { CameraZoomAbsolutePositionCapability } from '../../materials/capabilities/camera/camera-zoom-absolute-position-capability';\r\nimport { CapabilityType } from '../../materials/capabilities/capability-type';\r\nimport { TurretAbsolutePositionCapability } from '../../materials/capabilities/turret/turret-absolute-position-capability';\r\nimport { Material } from '../../materials/material';\r\nimport { MaterialType } from '../../materials/material-type';\r\nimport { RecordingState } from '../../materials/states/recording-state';\r\nimport { Status, StatusState } from '../../materials/states/status-state';\r\nimport { SiteService } from '../../services/site.service';\r\nimport { UiService } from '../../services/ui.service';\r\nimport { WsService } from '../../services/ws.service';\r\n\r\n@Component({\r\n  selector: 'app-hud-info',\r\n  templateUrl: './hud-info.component.html',\r\n  styleUrls: ['./hud-info.component.scss'],\r\n  host: { 'class': 'hud-layer' },\r\n  animations: [\r\n    trigger('fade', [\r\n      transition('void => *', [\r\n        style({ opacity: 0 }),\r\n        animate(300, style({ opacity: 1 }))\r\n      ]),\r\n      transition('* => void', [\r\n        animate(300, style({ opacity: 0 }))\r\n      ])\r\n    ])\r\n\r\n  ]\r\n})\r\nexport class HudInfoComponent implements OnInit, OnDestroy {\r\n\r\n  currentTilt: number = 0;\r\n  currentPan: number = 0;\r\n  currentHfov: number = 0;\r\n  isTooltipOpen: boolean = false;\r\n  mediaInfo: string | null = null;\r\n  recordings: RecordingState[] = [];\r\n  private stateSubscription: Subscription;\r\n  private screenshotSubscription: Subscription;\r\n  public detailMaterial: Material | null = null;\r\n  constructor(public siteService: SiteService, public uiService: UiService, private wsService: WsService) {\r\n    this.stateSubscription = this.siteService.siteStateSubject.subscribe(() => { this.updateValues(); });\r\n    this.screenshotSubscription =  this.wsService.screenshootSubject.subscribe((fileName: string) => {\r\n      this.mediaInfo = \"Screenshot preformed \" + fileName;\r\n      setTimeout(() => { this.mediaInfo = null }, 1300);\r\n        \r\n    });\r\n\r\n  }\r\n  updateValues() {\r\n    if (this.siteService.site == null) return;\r\n    if (this.siteService.selectedUnit == null) return;\r\n    let turret: Material | undefined = this.siteService.selectedUnit.getMaterial(MaterialType.Turret);\r\n    if (turret == undefined) return;\r\n    let posCap: TurretAbsolutePositionCapability | undefined = turret.getCapability<TurretAbsolutePositionCapability>(CapabilityType.TurretAbsolutePosition);\r\n    if (posCap == undefined) return;\r\n    this.currentPan = posCap.pan;\r\n    this.currentTilt = posCap.tilt;\r\n    if (this.siteService.selectedCamera == undefined) return;\r\n    let zoomPosCap: CameraZoomAbsolutePositionCapability | undefined = this.siteService.selectedCamera.getCapability<CameraZoomAbsolutePositionCapability>(CapabilityType.CameraZoomAbsolutePosition);\r\n    if (zoomPosCap == undefined) return;\r\n    this.currentHfov = zoomPosCap.horizontalFieldOfView;\r\n\r\n    this.recordings = [];\r\n    this.recordings = this.recordings.concat(this.siteService.site.recordings);\r\n\r\n\r\n }\r\n  ngOnDestroy() {\r\n    this.stateSubscription.unsubscribe();\r\n    this.screenshotSubscription.unsubscribe();\r\n  }\r\n  ngOnInit(): void {\r\n  }\r\n  getMaterialStatusClass(material: Material): string {\r\n    let errorCount: number = 0;\r\n    let warningCount: number = 0;\r\n    material.status.forEach((val: StatusState) => {\r\n      if (val.status == Status.Error) {\r\n        errorCount++;\r\n      }\r\n      if (val.status == Status.Warning) {\r\n        warningCount++;\r\n      }\r\n    });\r\n    if (errorCount > 0) {\r\n      return \"red led\";\r\n    }\r\n    else if (warningCount > 0) {\r\n      return \"yellow led\";\r\n    }\r\n    return \"green led\";\r\n  }\r\n\r\n  setDetailMaterial(material: Material | null) {\r\n    this.detailMaterial = material;\r\n  }\r\n\r\n}\r\n","<div class=\"flex-1 display-flex flex-dir-col\">\r\n  <div class=\"display-flex flex-dir-row\">\r\n  \r\n\r\n    <div class=\"display-flex flex-dir-col flex-1 flex-align-center\">\r\n      <div *ngIf=\"this.siteService.selectedUnit != null\" class=\"status-info display-flex flex-dir-row margin-4 flex-align-center\">\r\n        <div (mouseover)=\"setDetailMaterial(material)\" (mouseout)=\"setDetailMaterial(null)\" class=\"margin-4 display-flex flex-dir-row\" *ngFor=\"let material of this.siteService.selectedUnit.materials\">\r\n          <div [attr.class]=\"getMaterialStatusClass(material)\" class=\"led margin-4\"></div>\r\n          <div class=\"margin-4 stoke-text\">{{material.displayName}}</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div *ngIf=\"detailMaterial != null\" class=\"display-flex\">\r\n        <div class=\"display-flex flex-dir-row margin-4 flex-align-center\" *ngFor=\"let status of detailMaterial.status\">\r\n          <div class=\"flex-1\"></div>\r\n          <div class=\"led margin-4\" [ngClass]=\"{'green': status.status === 'Ok', 'yellow': status.status === 'Warning', 'red': status.status === 'Error'}\"></div>\r\n          <div class=\"margin-4 stoke-text\">{{status.message}}</div>\r\n          <div class=\"flex-1\"></div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"margin-4 stoke-text\" @fade *ngIf=\"mediaInfo != null\">\r\n        {{mediaInfo}}\r\n      </div>\r\n      <div class=\"margin-4 stoke-text\" *ngFor=\"let rec of recordings\">\r\n        {{rec.description}}\r\n\r\n      </div>\r\n    </div>\r\n   \r\n\r\n   \r\n  </div>\r\n\r\n  <div class=\"flex-1\"></div>\r\n  <div class=\"bottom-left-box\">\r\n    <div *ngIf=\"uiService.mousePan != null\" class=\"bottom-left-box-info stoke-text\">Mouse Pan : {{uiService.mousePan.toFixed(2)}}</div>\r\n    <div *ngIf=\"uiService.mouseTilt != null\" class=\"bottom-left-box-info stoke-text\">Mouse Tilt : {{uiService.mouseTilt.toFixed(2)}}</div>\r\n    <div class=\"bottom-left-box-info stoke-text\">Pan : {{currentPan.toFixed(2)}}</div>\r\n    <div class=\"bottom-left-box-info stoke-text\">Tilt : {{currentTilt.toFixed(2)}}</div>\r\n    <div class=\"bottom-left-box-info stoke-text\">HFov : {{currentHfov.toFixed(2)}}</div>\r\n  </div>\r\n</div>\r\n\r\n\r\n","import { Component, EventEmitter, HostListener, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { CapabilityType } from '../../materials/capabilities/capability-type';\r\nimport { LazerMeasurementShootCapability } from '../../materials/capabilities/lazer-measurement/lazer-measurement-shoot-capability';\r\nimport { Material } from '../../materials/material';\r\nimport { MaterialType } from '../../materials/material-type';\r\nimport { SiteService } from '../../services/site.service';\r\n\r\n@Component({\r\n  selector: 'app-hud-lrf-button',\r\n  templateUrl: './hud-lrf-button.component.html',\r\n  styleUrls: ['./hud-lrf-button.component.scss']\r\n})\r\nexport class HudLrfButtonComponent implements OnInit, OnDestroy {\r\n  private isMouseDown: boolean = false;\r\n  public isContinuousMode: boolean = false;\r\n  private continuousTriggerTimer: any;\r\n  private ignoreNextClick: boolean = false;\r\n  private continuousShootTimer: any;\r\n  @Output() shoot: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  constructor(private siteService: SiteService) {\r\n    \r\n    \r\n  }\r\n  lazerMeasurementShoot() {\r\n    if (this.siteService.selectedUnit == null) return;\r\n    let lazer: Material | undefined = this.siteService.selectedUnit.getMaterial(MaterialType.LazerMeasurement);\r\n    if (lazer == null) return;\r\n    let cap: LazerMeasurementShootCapability | undefined = lazer.getCapability<LazerMeasurementShootCapability>(CapabilityType.LazerMeasurementShootCapability);\r\n    if (cap == null) return;\r\n    cap.shootMeasure();\r\n  }\r\n  ngOnDestroy() {\r\n    clearInterval(this.continuousShootTimer);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.continuousShootTimer = setInterval(() => {\r\n      if (this.isContinuousMode === true) {\r\n        this.lazerMeasurementShoot();\r\n      }\r\n    \r\n\r\n    }, 500);\r\n\r\n  }\r\n\r\n  onMouseDown() {\r\n    this.isMouseDown = true;\r\n    this.continuousTriggerTimer = setTimeout(() => {\r\n      this.isContinuousMode = true;\r\n      this.ignoreNextClick = true;\r\n    }, 1000);\r\n\r\n\r\n  }\r\n\r\n  onMouseUp() {\r\n    if (this.isMouseDown && this.isContinuousMode) {\r\n      this.ignoreNextClick = true;\r\n      this.isMouseDown = false;\r\n    }\r\n    else {\r\n      this.isMouseDown = false;\r\n      clearTimeout(this.continuousTriggerTimer);\r\n    }\r\n\r\n  }\r\n\r\n  onMouseClick() {\r\n    if (this.ignoreNextClick === true) {\r\n      this.ignoreNextClick = false;\r\n    }\r\n    else {\r\n      this.lazerMeasurementShoot();\r\n      this.isContinuousMode = false;\r\n    }\r\n\r\n\r\n  }\r\n\r\n  @HostListener('document:pointerup', ['$event'])\r\n  onDocumentPointerUp(evt: any) {\r\n    if (this.isMouseDown === true && !this.ignoreNextClick === true) {\r\n      this.isMouseDown = false;\r\n      clearTimeout(this.continuousTriggerTimer);\r\n    }\r\n  }\r\n\r\n  @HostListener('document:mouseup', ['$event'])\r\n  onDocumentMouse(evt: any) {\r\n    if (this.isMouseDown === true && !this.ignoreNextClick === true) {\r\n      this.isMouseDown = false;\r\n      clearTimeout(this.continuousTriggerTimer);\r\n\r\n    }\r\n  }\r\n}\r\n","<div (click)=\"onMouseClick()\" (mousedown)=\"onMouseDown()\" (mouseup)=\"onMouseUp()\" [ngClass]=\"isContinuousMode ? 'continuous-mode-enabled' : 'continuous-mode-disabled'\">\r\n  <div class=\"flex-1\"></div>\r\n  <div class=\"display-flex flex-dir-col\">\r\n    <div class=\"flex-1\"></div>\r\n    <ng-content></ng-content>\r\n    <div class=\"flex-1\"></div>\r\n  </div>\r\n  <div class=\"flex-1\"></div>\r\n</div>\r\n","import { Component, ElementRef, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { CameraZoomAbsolutePositionCapability } from '../../materials/capabilities/camera/camera-zoom-absolute-position-capability';\r\nimport { CapabilityType } from '../../materials/capabilities/capability-type';\r\nimport { TurretAbsolutePositionCapability } from '../../materials/capabilities/turret/turret-absolute-position-capability';\r\nimport { Material } from '../../materials/material';\r\nimport { MaterialType } from '../../materials/material-type';\r\nimport { Turret } from '../../materials/turret';\r\nimport { CompasText } from '../../models/compas-text';\r\nimport { CompasTick } from '../../models/compas-tick';\r\nimport { SiteService } from '../../services/site.service';\r\nimport { UiService } from '../../services/ui.service';\r\n\r\n@Component({\r\n  selector: 'app-hud-ruller-pan',\r\n  templateUrl: './hud-ruller-pan.component.html',\r\n  styleUrls: ['./hud-ruller-pan.component.scss'],\r\n  host: { 'class': 'hud-layer' }\r\n})\r\nexport class HudRullerPanComponent implements OnInit, OnDestroy {\r\n\r\n  public isVisible: boolean = false;\r\n\r\n  public ticks: CompasTick[] = [];\r\n  // Texts du vernier\r\n  public texts: CompasText[] = [];\r\n\r\n  // Nombre de texts affiché\r\n  private textCount: number = 30;\r\n  private unitSelectedSubscription: Subscription;\r\n  private cameraSelectedSubscription: Subscription;\r\n  private siteStateSubscription: Subscription;\r\n\r\n  constructor(private el: ElementRef, private siteService: SiteService, private uiService: UiService) {\r\n    this.initializeTickAndText();\r\n    this.unitSelectedSubscription = this.siteService.unitSelectedSubject.subscribe(() => { this.updateTickAndText(); });\r\n    this.cameraSelectedSubscription = this.siteService.cameraSelectedSubject.subscribe(() => { this.updateTickAndText(); });\r\n    this.siteStateSubscription = this.siteService.siteStateSubject.subscribe(() => {  this.updateTickAndText(); });\r\n\r\n  }\r\n  ngOnDestroy() {\r\n    this.unitSelectedSubscription.unsubscribe();\r\n    this.cameraSelectedSubscription.unsubscribe();\r\n    this.siteStateSubscription.unsubscribe();\r\n  }\r\n\r\n  updateTickAndText() {\r\n    if (this.uiService.displayStreamWidth == null) {\r\n      this.isVisible = false;\r\n      return;\r\n    }\r\n    if (this.siteService.selectedUnit == null) {\r\n      this.isVisible = false;\r\n      return;\r\n    }\r\n    if (this.siteService.selectedCamera == null) {\r\n      this.isVisible = false;\r\n      return;\r\n    }\r\n    let turret: Material | undefined = this.siteService.selectedUnit.getMaterial(MaterialType.Turret);\r\n    if (turret == null) {\r\n      this.isVisible = false;\r\n      return;\r\n    }\r\n    let absolutPositionCap: TurretAbsolutePositionCapability | undefined = turret.getCapability<TurretAbsolutePositionCapability>(CapabilityType.TurretAbsolutePosition);\r\n    if (absolutPositionCap == null) {\r\n      this.isVisible = false;\r\n      return;\r\n    }\r\n\r\n    let absoluteZoomPositionCap: CameraZoomAbsolutePositionCapability | undefined = this.siteService.selectedCamera.getCapability<CameraZoomAbsolutePositionCapability>(CapabilityType.CameraZoomAbsolutePosition);\r\n    if (absoluteZoomPositionCap == null) {\r\n      this.isVisible = false;\r\n      return;\r\n    }\r\n    this.isVisible = true;\r\n    let hfov = absoluteZoomPositionCap.horizontalFieldOfView;\r\n    let pan = absolutPositionCap.pan;\r\n    let style = getComputedStyle(this.el.nativeElement);\r\n    let displayWidth = parseFloat(style.width.replace('px', ''));\r\n    let degreePerPixel = hfov / this.uiService.displayStreamWidth;\r\n    let minTick = Math.round(pan) - (this.textCount / 2);\r\n\r\n    // Mise a jour des degrées\r\n    let degree: number = minTick;\r\n\r\n    this.ticks.forEach((tick: CompasTick, index: number) => {\r\n      var rounded = Math.round(degree * 10) / 10;\r\n      tick.degree = rounded;\r\n      degree += 0.1;\r\n    });\r\n\r\n    this.texts.forEach((text: CompasText, index: number) => {\r\n      text.degree = minTick + index;\r\n    });\r\n    var x: number = 0;\r\n    var y: number = 20;\r\n    var delta: number = 0;\r\n    // Calcul des position X\r\n    let alternateVisibility: boolean = false;\r\n    if (this.texts.length > 10) {\r\n      alternateVisibility = true;\r\n    }\r\n    let textIndex: number = 0;\r\n    this.texts.forEach((text: CompasText) => {\r\n      delta = text.degree - pan;\r\n \r\n      x = (displayWidth / 2) + (delta / degreePerPixel);\r\n      let textDegree: number = (text.degree + 360) % 360;\r\n      text.text = textDegree.toFixed(0) + \"°\";\r\n      text.x = x - (text.degree.toFixed(0).length * 10 / 2);\r\n      text.y = 20;\r\n      text.opacity = 1;    \r\n      textIndex++;\r\n\r\n    });\r\n    this.ticks.forEach((tick: CompasTick) => {\r\n      delta = tick.degree - pan;\r\n     \r\n      x = (displayWidth / 2) + (delta / degreePerPixel);\r\n      y = 28;\r\n      if ((tick.degree % 1) == 0) {\r\n        y = 24;\r\n      }\r\n      tick.x1 = x;\r\n      tick.x2 = x;\r\n      tick.y1 = y;\r\n      tick.y2 = 32;\r\n      tick.opacity = 1;    \r\n      degree += 0.1;\r\n    });\r\n\r\n  }\r\n  initializeTickAndText() {\r\n    let initTicks: CompasTick[] = [];\r\n    let initTexts: CompasText[] = [];\r\n    var i: number;\r\n    var y: number;\r\n    for (i = 0; i < this.textCount; i++) {\r\n      initTexts.push({\r\n        x: 0,\r\n        y: 0,\r\n        text: \"\",\r\n        degree: 0,\r\n        opacity: 1\r\n      });\r\n    }\r\n    this.texts = initTexts;\r\n    for (i = 0; i < this.textCount * 10; i++) {\r\n\r\n      initTicks.push({\r\n        x1: 0,\r\n        x2: 0,\r\n        y1: 0,\r\n        y2: 0,\r\n        opacity: 0,\r\n        degree: 0\r\n      });\r\n      this.ticks = initTicks;\r\n\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<svg *ngIf=\"isVisible\" width=\"100%\" height=\"32\">\r\n  <line class=\"compas-tick\" [attr.x1]=\"tick.x1\" [style.opacity]=\"tick.opacity\" [attr.x2]=\"tick.x2\" [attr.y1]=\"tick.y1\" [attr.y2]=\"tick.y2\" *ngFor=\"let tick of ticks\"></line>\r\n  <text [style.opacity]=\"text.opacity\" class=\"compas-text\" *ngFor=\"let text of texts\" [attr.x]=\"text.x\" [attr.y]=\"text.y\">\r\n    {{text.text}}\r\n  </text>\r\n\r\n</svg>\r\n\r\n","import { Component, ElementRef, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { CameraZoomAbsolutePositionCapability } from '../../materials/capabilities/camera/camera-zoom-absolute-position-capability';\r\nimport { CapabilityType } from '../../materials/capabilities/capability-type';\r\nimport { TurretAbsolutePositionCapability } from '../../materials/capabilities/turret/turret-absolute-position-capability';\r\nimport { Material } from '../../materials/material';\r\nimport { MaterialType } from '../../materials/material-type';\r\nimport { CompasText } from '../../models/compas-text';\r\nimport { CompasTick } from '../../models/compas-tick';\r\nimport { SiteService } from '../../services/site.service';\r\nimport { UiService } from '../../services/ui.service';\r\n\r\n@Component({\r\n  selector: 'app-hud-ruller-tilt',\r\n  templateUrl: './hud-ruller-tilt.component.html',\r\n  styleUrls: ['./hud-ruller-tilt.component.scss']\r\n})\r\nexport class HudRullerTiltComponent implements OnInit, OnDestroy {\r\n\r\n  public ticks: CompasTick[] = [];\r\n  public texts: CompasText[] = [];\r\n  public isVisible: boolean = false;\r\n  private textCount: number = 30;\r\n  private unitSelectedSubscription: Subscription;\r\n  private cameraSelectedSubscription: Subscription;\r\n  private siteStateSubscription: Subscription;\r\n  constructor(private el: ElementRef, private siteService: SiteService,private uiService: UiService) {\r\n    this.initializeTickAndText();\r\n    this.unitSelectedSubscription = this.siteService.unitSelectedSubject.subscribe(() => { this.updateTickAndText(); });\r\n    this.cameraSelectedSubscription = this.siteService.cameraSelectedSubject.subscribe(() => { this.updateTickAndText(); });\r\n    this.siteStateSubscription = this.siteService.siteStateSubject.subscribe(() => { this.updateTickAndText(); });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.unitSelectedSubscription.unsubscribe();\r\n    this.cameraSelectedSubscription.unsubscribe();\r\n    this.siteStateSubscription.unsubscribe();\r\n  }\r\n\r\n  updateTickAndText() {\r\n    if (this.uiService.displayStreamHeight == null) {\r\n      this.isVisible = false;\r\n      return;\r\n    }\r\n    if (this.siteService.selectedUnit == null) {\r\n      this.isVisible = false;\r\n      return;\r\n    }\r\n    if (this.siteService.selectedCamera == null) {\r\n      this.isVisible = false;\r\n      return;\r\n    }\r\n    let turret: Material | undefined = this.siteService.selectedUnit.getMaterial(MaterialType.Turret);\r\n    if (turret == null) {\r\n      this.isVisible = false;\r\n      return;\r\n    }\r\n    let absolutPositionCap: TurretAbsolutePositionCapability | undefined = turret.getCapability<TurretAbsolutePositionCapability>(CapabilityType.TurretAbsolutePosition);\r\n    if (absolutPositionCap == null) {\r\n      this.isVisible = false;\r\n      return;\r\n    }\r\n\r\n    let absoluteZoomPositionCap: CameraZoomAbsolutePositionCapability | undefined = this.siteService.selectedCamera.getCapability<CameraZoomAbsolutePositionCapability>(CapabilityType.CameraZoomAbsolutePosition);\r\n    if (absoluteZoomPositionCap == null) {\r\n      this.isVisible = false;\r\n      return;\r\n    }\r\n    this.isVisible = true;\r\n    let hfov = absoluteZoomPositionCap.horizontalFieldOfView;\r\n    let ratio = this.siteService.selectedCamera.streamWidth / this.siteService.selectedCamera.streamHeight;\r\n    let vFov = hfov / ratio;\r\n    let tilt = absolutPositionCap.tilt;\r\n    let style = getComputedStyle(this.el.nativeElement);\r\n    let displayHeight = parseFloat(style.height.replace('px', ''));\r\n    let degreePerPixel = vFov / this.uiService.displayStreamHeight;\r\n\r\n    let minTick = Math.round(tilt) - (this.textCount / 2);\r\n\r\n    // Mise a jour des degrées\r\n    let degree: number = minTick;\r\n\r\n    this.ticks.forEach((tick: CompasTick, index: number) => {\r\n      var rounded = Math.round(degree * 10) / 10;\r\n      tick.degree = rounded;\r\n      degree += 0.1;\r\n    });\r\n\r\n\r\n    this.texts.forEach((text: CompasText, index: number) => {\r\n      text.degree = minTick + index;\r\n    });\r\n\r\n    var x: number = 0;\r\n    var y: number = 20;\r\n    var delta: number = 0;\r\n    // Calcul des position Y\r\n    this.texts.forEach((text: CompasText) => {\r\n      delta = (text.degree - tilt);\r\n      let ratio = Math.abs(delta) / (displayHeight * degreePerPixel / 6);\r\n      y = displayHeight - ((displayHeight / 2) + (delta / degreePerPixel));\r\n      text.text = (text.degree).toFixed(0) + \"°\";\r\n      text.x = 10;\r\n      text.y = y + 5;\r\n      text.opacity = 1;\r\n    });\r\n    this.ticks.forEach((tick: CompasTick) => {\r\n      delta = (tick.degree - tilt);\r\n      let ratio = Math.abs(delta) / (displayHeight * degreePerPixel / 6);\r\n      x = 4;\r\n      y = displayHeight - ((displayHeight / 2) + (delta / degreePerPixel));\r\n      if ((tick.degree % 1) == 0) {\r\n        x = 8;\r\n      }\r\n      tick.x1 = 0;\r\n      tick.x2 = x;\r\n      tick.y1 = y;\r\n      tick.y2 = y;\r\n      tick.opacity = 1;\r\n      degree += 0.1;\r\n    });\r\n   \r\n  }\r\n  initializeTickAndText() {\r\n    let initTicks: CompasTick[] = [];\r\n    let initTexts: CompasText[] = [];\r\n    var i: number;\r\n    var y: number;\r\n    for (i = 0; i < this.textCount; i++) {\r\n      initTexts.push({\r\n        x: 0,\r\n        y: 0,\r\n        text: \"\",\r\n        degree: 0,\r\n        opacity: 1\r\n      });\r\n    }\r\n    this.texts = initTexts;\r\n    for (i = 0; i < this.textCount * 10; i++) {\r\n\r\n      initTicks.push({\r\n        x1: 0,\r\n        x2: 0,\r\n        y1: 0,\r\n        y2: 0,\r\n        opacity: 0,\r\n        degree: 0\r\n      });\r\n      this.ticks = initTicks;\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<svg   *ngIf=\"isVisible\"  height=\"100%\" width=\"64\">\r\n  <line class=\"compas-tick\" [attr.x1]=\"tick.x1\" [style.opacity]=\"tick.opacity\" [attr.x2]=\"tick.x2\" [attr.y1]=\"tick.y1\" [attr.y2]=\"tick.y2\" *ngFor=\"let tick of ticks\"></line>\r\n  <text [style.opacity]=\"text.opacity\" class=\"compas-text\" *ngFor=\"let text of texts\" [attr.x]=\"text.x\" [attr.y]=\"text.y\">\r\n    {{text.text}}\r\n  </text>\r\n\r\n</svg>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-hud-status',\r\n  templateUrl: './hud-status.component.html',\r\n  styleUrls: ['./hud-status.component.scss'],\r\n  host: { 'class': 'hud-layer' }\r\n})\r\nexport class HudStatusComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"status\"></div>\r\n<div class=\"flex-1\"></div>\r\n","import { Component, ElementRef, EventEmitter, HostListener, Input, OnDestroy, OnInit, Output, Renderer2, ViewChild } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { IStream } from '../../models/stream';\r\nimport { SiteService } from '../../services/site.service';\r\nimport { Material } from '../../materials/material';\r\nimport { MaterialType } from '../../materials/material-type';\r\nimport { Camera } from '../../materials/camera';\r\nimport { UiService } from '../../services/ui.service';\r\nimport { CapabilityType } from '../../materials/capabilities/capability-type';\r\nimport { CameraZoomAbsolutePositionCapability } from '../../materials/capabilities/camera/camera-zoom-absolute-position-capability';\r\nimport { TurretAbsolutePositionCapability } from '../../materials/capabilities/turret/turret-absolute-position-capability';\r\nimport { TurretMoveAbsoluteCapability } from '../../materials/capabilities/turret/turret-move-absolute-capability';\r\n\r\n\r\n@Component({\r\n  selector: 'app-hud-stream',\r\n  templateUrl: './hud-stream.component.html',\r\n  styleUrls: ['./hud-stream.component.scss'],\r\n  host: { 'class': 'hud-layer' }\r\n})\r\nexport class HudStreamComponent implements OnInit, OnDestroy {\r\n\r\n\r\n  @Input() showMagnifier: boolean = false;\r\n  public isMouseOnImage: boolean = false;\r\n  public mousePan: number = 0;\r\n  public mouseTilt: number = 0;\r\n  public mainStream: IStream | undefined = undefined;\r\n  private streams: IStream[] = [];\r\n  private unitSelectedSubscription: Subscription;\r\n  private cameraSelectedSubscription: Subscription;\r\n  private showPipZoomSubscription: Subscription;\r\n  private siteStateSubscription: Subscription;\r\n  private documentMouseMoveEvent: any | null;\r\n  constructor(private siteService: SiteService, private el: ElementRef, private renderer: Renderer2, private uiService: UiService) {\r\n    this.unitSelectedSubscription = this.siteService.unitSelectedSubject.subscribe(() => { this.updateStreamList(); });\r\n    this.cameraSelectedSubscription = this.siteService.cameraSelectedSubject.subscribe(() => { this.updateStreamList(); });\r\n    this.siteStateSubscription=  this.siteService.siteStateSubject.subscribe(() => { this.computeMousePanAndTilt(); });\r\n    this.showPipZoomSubscription = this.uiService.showPipZoomSubject.subscribe((value: boolean) => { this.showMagnifier = value; })\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  updateStreamList() {\r\n    this.streams = [];\r\n    if (this.siteService.selectedUnit != null) {\r\n      let baseStreamUrl: string = \"\";\r\n      if (window.location.protocol === \"https:\") {\r\n        baseStreamUrl += \"https://\";\r\n      }\r\n      else {\r\n        baseStreamUrl += \"http://\";\r\n      }\r\n\r\n      baseStreamUrl += window.location.host + \":\" + window.location.port + \"/stream/\";\r\n      this.siteService.selectedUnit.materials.forEach((value: Material) => {\r\n\r\n        if (value.materialType == MaterialType.DayCamera || value.materialType == MaterialType.ThermalCamera) {\r\n          let camera: Camera = <Camera>value;\r\n\r\n          let isSelectedCamera = value.id === this.siteService.selectedCamera?.id;\r\n          let stream: IStream = {\r\n            displayName: value.displayName,\r\n            isMainStream: isSelectedCamera,\r\n            materialId: value.id,\r\n            //url: camera.streamUrl,\r\n            url: baseStreamUrl + value.id,\r\n            displayHeight: 0,\r\n            displayWidth: 0,\r\n            streamWidth: camera.streamWidth,\r\n            streamHeight: camera.streamHeight,\r\n            displayLeft: 0,\r\n            displayTop: 0\r\n          };\r\n          console.log(\"Add stream info \", stream);\r\n          if (isSelectedCamera) {\r\n            this.mainStream = stream;\r\n          }\r\n          this.streams.push(stream);\r\n\r\n        }\r\n      });\r\n    }\r\n    this.setStreamSize();\r\n  }\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  onResized(evt: any) {\r\n    this.setStreamSize();\r\n  }\r\n  setStreamSize() {\r\n    let style = getComputedStyle(this.el.nativeElement);\r\n    let displayWidth = parseFloat(style.width.replace('px', ''));\r\n    let displayHeight = parseFloat(style.height.replace('px', ''));\r\n    if (this.mainStream != null) {\r\n      let ratioStream: number = this.mainStream.streamWidth / this.mainStream.streamHeight;\r\n      let computedHeight = displayWidth / ratioStream;\r\n      if (computedHeight > displayHeight) {\r\n        let computedWidth = displayHeight * ratioStream;\r\n        let left: number = (displayWidth - computedWidth) / 2;\r\n        this.mainStream.displayTop = 0;\r\n        this.mainStream.displayLeft = left;\r\n        this.mainStream.displayWidth = computedWidth;\r\n        this.mainStream.displayHeight = displayHeight;\r\n      }\r\n      else {\r\n        let top: number = (displayHeight - computedHeight) / 2;\r\n        this.mainStream.displayTop = top;\r\n        this.mainStream.displayLeft = 0;\r\n        this.mainStream.displayWidth = displayWidth;\r\n        this.mainStream.displayHeight = computedHeight;\r\n      }\r\n\r\n      this.uiService.displayStreamWidth = this.mainStream.displayWidth;\r\n      this.uiService.displayStreamHeight = this.mainStream.displayHeight;\r\n    }\r\n  }\r\n\r\n\r\n  @HostListener('document:mousemove', ['$event'])\r\n  onMouseMove(e: any) {\r\n    this.documentMouseMoveEvent = e;\r\n    this.computeMousePanAndTilt();\r\n\r\n\r\n\r\n  }\r\n  computeMousePanAndTilt() {\r\n    if (this.documentMouseMoveEvent == null) return;\r\n    if (this.mainStream == null) return;\r\n    if (this.siteService.selectedCamera == null) return;\r\n    if (this.siteService.selectedUnit == null) return;\r\n    let turret: Material | undefined = this.siteService.selectedUnit.getMaterial(MaterialType.Turret);\r\n    if (turret == undefined) return;\r\n    let capPanTiltPos: TurretAbsolutePositionCapability | undefined = turret.getCapability<TurretAbsolutePositionCapability>(CapabilityType.TurretAbsolutePosition);\r\n    if (capPanTiltPos == undefined) return;\r\n    let capZoomPos: CameraZoomAbsolutePositionCapability | undefined = this.siteService.selectedCamera.getCapability<CameraZoomAbsolutePositionCapability>(CapabilityType.CameraZoomAbsolutePosition);\r\n    if (capZoomPos == undefined) return;\r\n    // get mouse position from document\r\n    let mousePageX: number = this.documentMouseMoveEvent.pageX;\r\n    let mousePageY: number = this.documentMouseMoveEvent.pageY;\r\n    let localX = mousePageX;\r\n    // Remove Header\r\n    let localY = mousePageY - 64;\r\n    if (localX >= this.mainStream.displayLeft &&\r\n      localX <= (this.mainStream.displayLeft + this.mainStream.displayWidth) &&\r\n      localY >= this.mainStream.displayTop &&\r\n      localY <= (this.mainStream.displayTop + this.mainStream.displayHeight)) {\r\n      let ratioX = ((localX - this.mainStream.displayLeft) / this.mainStream.displayWidth) - 0.5;\r\n      let ratioY = ((localY - this.mainStream.displayTop) / this.mainStream.displayHeight) - 0.5;\r\n      let verticalFieldOfView = (capZoomPos.horizontalFieldOfView / this.siteService.selectedCamera.streamWidth) * this.siteService.selectedCamera.streamHeight;\r\n      //console.log(\"horizontalFieldOfView \" + capZoomPos.horizontalFieldOfView);\r\n      //console.log(\"verticalFieldOfView \" + verticalFieldOfView);\r\n      let offsetPan = ratioX * capZoomPos.horizontalFieldOfView;\r\n      let offsetTilt = ratioY * verticalFieldOfView;\r\n      offsetTilt = offsetTilt * -1;\r\n      //console.log(\"offsetPan \" + offsetPan);\r\n      //console.log(\"offsetTilt \" + offsetTilt);\r\n      this.mousePan = capPanTiltPos.pan + offsetPan;\r\n      this.mouseTilt = capPanTiltPos.tilt + offsetTilt;\r\n      if (this.mousePan < 0) this.mousePan += 360;\r\n      this.mousePan = this.mousePan % 360;\r\n      this.isMouseOnImage = true;\r\n      this.uiService.mousePan = this.mousePan;\r\n      this.uiService.mouseTilt = this.mouseTilt;\r\n      //console.log(\"pan \" + pan);\r\n      //console.log(\"tilt \" + tilt);\r\n\r\n\r\n    }\r\n    else {\r\n      this.isMouseOnImage = false;\r\n      this.uiService.mousePan = null;\r\n      this.uiService.mouseTilt = null;\r\n    }\r\n  }\r\n  @HostListener('document:click', ['$event'])\r\n  onImageClick(evt: any) {\r\n\r\n    if (this.mainStream == null) return;\r\n    if (this.siteService.selectedCamera == null) return;\r\n    if (this.siteService.selectedUnit == null) return;\r\n    if (this.isMouseOnImage == false) return;\r\n\r\n    let turret: Material | undefined = this.siteService.selectedUnit.getMaterial(MaterialType.Turret);\r\n    if (turret == undefined) return;\r\n    let capMoveAbosulte: TurretMoveAbsoluteCapability | undefined = turret.getCapability<TurretMoveAbsoluteCapability>(CapabilityType.TurretMoveAbsolute);\r\n    if (capMoveAbosulte == undefined) return;\r\n    if (evt.srcElement.id === \"main-app-stream-click-handler\") {\r\n      capMoveAbosulte.move(this.mousePan, this.mouseTilt);\r\n    }\r\n    \r\n    \r\n   \r\n\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.unitSelectedSubscription.unsubscribe();\r\n    this.cameraSelectedSubscription.unsubscribe();\r\n    this.showPipZoomSubscription.unsubscribe();\r\n    this.siteStateSubscription.unsubscribe();\r\n\r\n  }\r\n  ngOnInit(): void {\r\n    this.updateStreamList();\r\n  }\r\n\r\n}\r\n","<img\r\n     \r\n     [style.width.px]=\"mainStream.displayWidth\"\r\n     [style.height.px]=\"mainStream.displayHeight\"\r\n     [style.top.px]=\"mainStream.displayTop\"\r\n     [style.left.px]=\"mainStream.displayLeft\"\r\n     class=\"main-stream\" *ngIf=\"mainStream !== undefined\" [src]=\"mainStream.url\"  />\r\n<div id=\"main-app-stream-click-handler\"\r\n      *ngIf=\"mainStream !== undefined\" \r\n     class=\"main-stream-click-handler\"\r\n     [style.width.px]=\"mainStream.displayWidth\"\r\n     [style.height.px]=\"mainStream.displayHeight\"\r\n     [style.top.px]=\"mainStream.displayTop\"\r\n     [style.left.px]=\"mainStream.displayLeft\"></div>\r\n\r\n\r\n<div *ngIf=\"showMagnifier && mainStream !== undefined\">\r\n  <div [style.width.px]=\"mainStream.displayWidth / 2\"\r\n\r\n       [style.height.px]=\"mainStream.displayHeight / 2\"\r\n       [style.top.px]=\"mainStream.displayTop +(mainStream.displayHeight / 4)\"\r\n       [style.left.px]=\"mainStream.displayLeft +(mainStream.displayWidth / 4)\"\r\n       class=\"stream-div-zoom\" >\r\n    <img alt=\"stream zoom image\"\r\n         referrerpolicy=\"unsafe-url\"\r\n         [style.top.px]=\"(mainStream.displayHeight / -4)\"\r\n         [style.left.px]=\"(mainStream.displayWidth / -4)\"\r\n         [style.width.px]=\"mainStream.displayWidth\"\r\n         [style.height.px]=\"mainStream.displayHeight\"    \r\n         [src]=\"mainStream.url\"\r\n         class=\"stream-img-zoom\" />\r\n  </div>\r\n</div>\r\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Data } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { WsCameraStartRecordResponse } from '../../api/ws/ws-camera-start-record-response';\r\nimport { Camera } from '../../materials/camera';\r\nimport { CameraAutoFocusOnePushCapability } from '../../materials/capabilities/camera/camera-auto-focus-one-push-capability';\r\nimport { CameraFocusContinuousCapability } from '../../materials/capabilities/camera/camera-focus-continuous-capability';\r\nimport { CameraZoomContinuousCapability } from '../../materials/capabilities/camera/camera-zoom-continuous-capability';\r\nimport { CapabilityType } from '../../materials/capabilities/capability-type';\r\nimport { LazerMeasurementShootCapability } from '../../materials/capabilities/lazer-measurement/lazer-measurement-shoot-capability';\r\nimport { TurretGyrostabilizationCapability } from '../../materials/capabilities/turret/turret-gyrostabilization-capability';\r\nimport { TurretMoveSpeedCapability } from '../../materials/capabilities/turret/turret-move-speed-capability';\r\nimport { Material } from '../../materials/material';\r\nimport { MaterialType } from '../../materials/material-type';\r\nimport { RecordingState } from '../../materials/states/recording-state';\r\nimport { SiteService } from '../../services/site.service';\r\nimport { UiService } from '../../services/ui.service';\r\nimport { WsService } from '../../services/ws.service';\r\n\r\n@Component({\r\n  selector: 'app-hud-ui',\r\n  templateUrl: './hud-ui.component.html',\r\n  styleUrls: ['./hud-ui.component.scss'],\r\n  host: { 'class': 'hud-layer' }\r\n})\r\nexport class HudUiComponent implements OnInit, OnDestroy {\r\n\r\n \r\n\r\n  \r\n\r\n  public runningRecord: RecordingState | undefined = undefined;\r\n  public isLeftToRight: boolean = true;\r\n  public hasPipZoom: boolean = false;\r\n  public hasMultipleCamera: boolean = false;\r\n  public lrfInfo: string = \"\";\r\n\r\n  public hasMoveSpeedCapability: boolean = false;\r\n  public hasZoomContinuousCapability: boolean = false;\r\n  public hasCameraAutoFocusCapability: boolean = false;\r\n  public hasCameraFocusContinuousCapability: boolean = false;\r\n  public hasWasherCapability: boolean = false;\r\n  public hasRecordCapability: boolean = false;\r\n  public hasScreenshotCapability: boolean = false;\r\n  public hasGyroStabilizationCapability: boolean = false;\r\n  public hasLrf: boolean = false;\r\n  public isTurretGyroStabilizationEnabled: boolean = false;\r\n  private unitSelectedSubscription: Subscription;\r\n  private cameraSelectedSubscription: Subscription;\r\n  private siteStateSubscription: Subscription;\r\n  private isLeftTorighSubscription: Subscription;\r\n\r\n\r\n  constructor(private siteService: SiteService, private snackBar: MatSnackBar, private uiService: UiService, private wsService: WsService) {\r\n    this.unitSelectedSubscription = this.siteService.unitSelectedSubject.subscribe(() => { this.updateVisibilityFlags(); });\r\n    this.cameraSelectedSubscription = this.siteService.cameraSelectedSubject.subscribe(() => { this.updateVisibilityFlags(); });\r\n    this.siteStateSubscription = this.siteService.siteStateSubject.subscribe(() => {\r\n      this.updateCheckState();\r\n      this.updateSwitchState();\r\n      this.updateLrfInfo();\r\n    });\r\n    this.isLeftTorighSubscription = this.uiService.isLeftTorightSubject.subscribe((isleftToRigth: boolean) => { this.isLeftToRight = isleftToRigth; });\r\n\r\n    \r\n    \r\n  }\r\n  onPipZoomButtonDown() {\r\n    this.uiService.showHidePipZoom();  \r\n  }\r\n \r\n  ngOnDestroy() {\r\n    this.unitSelectedSubscription.unsubscribe();\r\n    this.cameraSelectedSubscription.unsubscribe();\r\n    this.siteStateSubscription.unsubscribe();\r\n    this.isLeftTorighSubscription.unsubscribe();\r\n  \r\n  }\r\n  ngOnInit(): void {\r\n    this.updateVisibilityFlags();\r\n  }\r\n  updateVisibilityFlags() {\r\n    if (this.siteService.selectedUnit != null) {\r\n      this.hasMoveSpeedCapability = this.siteService.selectedUnit.hasMaterialWithCapability(MaterialType.Turret, CapabilityType.TurretMoveSpeed);\r\n      let cameraCount = 0;\r\n      this.siteService.selectedUnit?.materials.forEach((value: Material) => {\r\n        if (value.materialType == MaterialType.DayCamera || value.materialType == MaterialType.ThermalCamera) {\r\n          cameraCount++;\r\n        }\r\n      });\r\n      this.hasMultipleCamera = cameraCount > 1;\r\n      this.hasPipZoom = cameraCount > 0 && this.siteService.selectedCamera != null;\r\n      this.hasLrf = this.siteService.selectedUnit.getMaterial(MaterialType.LazerMeasurement) != null;\r\n      console.log(\"has lrf \" + this.hasLrf);\r\n\r\n      this.hasGyroStabilizationCapability = this.siteService.selectedUnit.hasMaterialWithCapability(MaterialType.Turret, CapabilityType.TurretGyrostabilization);\r\n\r\n      if (this.siteService.selectedCamera != null) {\r\n        this.hasCameraAutoFocusCapability = this.siteService.selectedCamera?.hasCapability(CapabilityType.CameraAutoFocusOnePush);\r\n        this.hasZoomContinuousCapability = this.siteService.selectedCamera.hasCapability(CapabilityType.CameraZoomContinuous);\r\n        this.hasCameraFocusContinuousCapability = this.siteService.selectedCamera.hasCapability(CapabilityType.CameraFocusContinuous);\r\n        this.hasRecordCapability = true;\r\n        this.hasScreenshotCapability = true;\r\n      }\r\n      else {\r\n        this.hasZoomContinuousCapability = false;\r\n        this.hasCameraAutoFocusCapability = false;\r\n        this.hasCameraFocusContinuousCapability = false;\r\n        this.hasRecordCapability = false;\r\n        this.hasScreenshotCapability = false;\r\n      }\r\n    }\r\n    else {\r\n      this.hasMultipleCamera = false;\r\n      this.hasMoveSpeedCapability = false;\r\n      this.hasZoomContinuousCapability = false;\r\n      this.hasCameraAutoFocusCapability = false;\r\n      this.hasCameraFocusContinuousCapability = false;\r\n      this.hasRecordCapability = false;\r\n      this.hasScreenshotCapability = false;\r\n      this.hasWasherCapability = false;\r\n      this.hasGyroStabilizationCapability = false;\r\n      this.hasLrf = false;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  updateSwitchState() {\r\n   \r\n  }\r\n  updateCheckState() {\r\n    if (this.siteService.selectedUnit == null) return;\r\n    let material: Material | undefined = this.siteService.selectedUnit.getMaterial(MaterialType.Turret);\r\n    if (material != null) {\r\n      let cap: TurretGyrostabilizationCapability | undefined = material.getCapability(CapabilityType.TurretGyrostabilization);\r\n      if (cap != null) {\r\n        this.isTurretGyroStabilizationEnabled = cap.isGyrostabilizationEnabled;\r\n      }\r\n    }\r\n\r\n    if (this.siteService.site != null && this.siteService.site.recordings != null && this.siteService.selectedCamera != null) {\r\n      this.runningRecord = this.siteService.site.recordings.find((val: RecordingState) => { return val.materialId === this.siteService.selectedCamera?.id });\r\n    }\r\n\r\n  }\r\n\r\n\r\n  onZoomInDown() {\r\n    if (this.siteService.selectedCamera == undefined) return;\r\n    console.log(\"onZoomInDown\");\r\n    let cap: CameraZoomContinuousCapability | undefined = this.siteService.selectedCamera.getCapability<CameraZoomContinuousCapability>(CapabilityType.CameraZoomContinuous);\r\n    if (cap != null) cap.zoomInStart();\r\n  }\r\n  onZoomUp() {\r\n    console.log(\"onZoomUp\");\r\n    if (this.siteService.selectedCamera == undefined) return;\r\n    let cap: CameraZoomContinuousCapability | undefined = this.siteService.selectedCamera.getCapability<CameraZoomContinuousCapability>(CapabilityType.CameraZoomContinuous);\r\n    if (cap != null) cap.zoomStop();\r\n  }\r\n  onZoomOutDown() {\r\n    console.log(\"onZoomOutDown\");\r\n    if (this.siteService.selectedCamera == undefined) return;\r\n    let cap: CameraZoomContinuousCapability | undefined = this.siteService.selectedCamera.getCapability<CameraZoomContinuousCapability>(CapabilityType.CameraZoomContinuous);\r\n    if (cap != null) cap.zoomOutStart();\r\n  }\r\n\r\n  onSwitchCameraDown() {\r\n    let camera: Camera | undefined = this.siteService.selectNextCamera();\r\n    if (camera == null) return;\r\n\r\n    this.snackBar.open(\"Display : \" + camera.displayName,\"\", {\r\n      duration: 3000,\r\n      panelClass: 'seasense-snackbar'\r\n    });\r\n  }\r\n  onStablizationCheckChange(enabled: boolean) {\r\n    if (this.siteService.selectedUnit == null) return;\r\n    let material: Material | undefined = this.siteService.selectedUnit.getMaterial(MaterialType.Turret);\r\n    if (material == null) return;\r\n    let cap: TurretGyrostabilizationCapability | undefined = material.getCapability(CapabilityType.TurretGyrostabilization);\r\n    if (cap == null) return;\r\n    cap.setGyrostabilization(enabled);\r\n\r\n  }\r\n  onScreenshot() {\r\n    if (this.siteService.selectedCamera != null && this.siteService.selectedUnit != null) {\r\n      this.wsService.screenshot(this.siteService.selectedUnit.id, this.siteService.selectedCamera.id);\r\n      this.uiService.notifyMediaChange(500);\r\n\r\n    }\r\n  }\r\n  onRecordClick() {\r\n    if (this.siteService.selectedCamera != null && this.siteService.selectedUnit != null) {\r\n      if (!this.runningRecord) {\r\n        this.wsService.startRecord(this.siteService.selectedUnit.id, this.siteService.selectedCamera.id);\r\n      }\r\n      else {\r\n        this.wsService.stopRecord(this.siteService.selectedUnit.id, this.siteService.selectedCamera.id, this.runningRecord.id);\r\n        this.uiService.notifyMediaChange(500);\r\n      }\r\n      \r\n    }\r\n  }\r\n  onAutoFocusButtonDown() {\r\n    if (this.siteService.selectedCamera == undefined) return;\r\n    let cap: CameraAutoFocusOnePushCapability | undefined = this.siteService.selectedCamera.getCapability<CameraAutoFocusOnePushCapability>(CapabilityType.CameraAutoFocusOnePush);\r\n    if (cap != null) cap.autoFocusOnePush();\r\n  }\r\n\r\n  updateLrfInfo() {\r\n    if (this.siteService.selectedUnit == null) {\r\n      this.lrfInfo = \"\";\r\n      return;\r\n    }\r\n    let lazer: Material | undefined = this.siteService.selectedUnit.getMaterial(MaterialType.LazerMeasurement);\r\n    if (lazer == null) {\r\n      this.lrfInfo = \"\";\r\n      return;\r\n    }\r\n    let cap: LazerMeasurementShootCapability | undefined = lazer.getCapability<LazerMeasurementShootCapability>(CapabilityType.LazerMeasurementShootCapability);\r\n    if (cap == null) {\r\n      this.lrfInfo = \"\";\r\n      return;\r\n    }\r\n    if (cap.lastShootDate == null) {\r\n      this.lrfInfo = \"\";\r\n      return;\r\n    }\r\n    if (cap.isOn === false) {\r\n      this.lrfInfo = \"\";\r\n      return;\r\n    }\r\n    let today: Date = new Date();\r\n    let shootDate: Date = cap.lastShootDate;\r\n    let seconds: number = (today.getTime() - cap.lastShootDate.getTime()) / 1000;\r\n    if (seconds < 5) {\r\n      if (cap.lastShootDistance != null) {\r\n        this.lrfInfo = cap.lastShootDistance + \" m\";\r\n      }\r\n      else if (cap.error != null) {\r\n        this.lrfInfo = cap.error;\r\n      }\r\n      else {\r\n        this.lrfInfo = \"\";\r\n      }\r\n    } else {\r\n      this.lrfInfo = \"\";\r\n    }\r\n\r\n  }\r\n  onFocusInDown() {\r\n    if (this.siteService.selectedCamera != null) {\r\n      let cap: CameraFocusContinuousCapability | undefined = this.siteService.selectedCamera.getCapability<CameraFocusContinuousCapability>(CapabilityType.CameraFocusContinuous);\r\n      if (cap != null) cap.focusInStart();\r\n    }\r\n  }\r\n  onFocusOutDown() {\r\n    if (this.siteService.selectedCamera != null) {\r\n      let cap: CameraFocusContinuousCapability | undefined = this.siteService.selectedCamera.getCapability<CameraFocusContinuousCapability>(CapabilityType.CameraFocusContinuous);\r\n      if (cap != null) cap.focusOutStart();\r\n    }\r\n  }\r\n  onFocusUp() {\r\n    if (this.siteService.selectedCamera != null) {\r\n      let cap: CameraFocusContinuousCapability | undefined = this.siteService.selectedCamera.getCapability<CameraFocusContinuousCapability>(CapabilityType.CameraFocusContinuous);\r\n      if (cap != null) cap.focusStop();\r\n    }\r\n  }\r\n}\r\n","<div *ngIf=\"isLeftToRight\" class=\"hud-column flex-dir-col\">\r\n  <div class=\"spacer\">\r\n\r\n  </div>\r\n\r\n  <!-- Button LRF -->\r\n  <mat-label *ngIf=\"hasLrf\" class=\"lrf-info-label\">{{lrfInfo}}</mat-label>\r\n  <app-hud-lrf-button *ngIf=\"hasLrf\">\r\n    <mat-icon class=\"hud-button-icon\" [inline]=\"true\" matTooltip=\"Lazer Measurement\" aria-hidden=\"false\" aria-label=\"Lazer Measurement\">sensors</mat-icon>\r\n  </app-hud-lrf-button>\r\n\r\n  <!-- Zoom In -->\r\n  <app-hud-button *ngIf=\"hasZoomContinuousCapability\" (buttonDown)=\"onZoomInDown()\" (buttonUp)=\"onZoomUp()\">\r\n    <mat-icon class=\"hud-button-icon\" [inline]=\"true\" matTooltip=\"Zoom In\" aria-hidden=\"false\" aria-label=\"Zoom In\">zoom_in</mat-icon>\r\n  </app-hud-button>\r\n\r\n  <!-- Zoom PIP -->\r\n  <app-hud-button  *ngIf=\"hasPipZoom\" (buttonDown)=\"onPipZoomButtonDown()\">\r\n    <mat-icon class=\"hud-button-icon\" [inline]=\"true\" matTooltip=\"Switch Zoom Center On/Off\" aria-hidden=\"false\" aria-label=\"Switch Zoom Center On/Off\">crop_free</mat-icon>\r\n  </app-hud-button>\r\n\r\n\r\n  <!-- Zoom Out -->\r\n  <app-hud-button *ngIf=\"hasZoomContinuousCapability\" (buttonDown)=\"onZoomOutDown()\" (buttonUp)=\"onZoomUp()\">\r\n    <mat-icon class=\"hud-button-icon\" [inline]=\"true\" matTooltip=\"Zoom Out\" aria-hidden=\"false\" aria-label=\"Zoom Out\">zoom_out</mat-icon>\r\n  </app-hud-button>\r\n\r\n\r\n  <!-- Auto Focus -->\r\n  <app-hud-button (buttonDown)=\"onAutoFocusButtonDown()\" *ngIf=\"hasCameraAutoFocusCapability\">\r\n\r\n    <mat-icon class=\"hud-button-icon\" [inline]=\"true\" matTooltip=\"Auto Focus\" aria-hidden=\"false\" aria-label=\"Auto Focus\"> filter_center_focus</mat-icon>\r\n\r\n  </app-hud-button>\r\n\r\n  <!-- Focus Near -->\r\n  <app-hud-button (buttonDown)=\"onFocusInDown()\" (buttonUp)=\"onFocusUp()\" *ngIf=\"hasCameraFocusContinuousCapability\">\r\n    <mat-icon class=\"hud-button-icon\" [inline]=\"true\" matTooltip=\"Focus Near\" aria-hidden=\"false\" aria-label=\"Focus Near\">portrait</mat-icon>\r\n  </app-hud-button>\r\n\r\n  <!-- Focus Far -->\r\n  <app-hud-button (buttonDown)=\"onFocusOutDown()\" (buttonUp)=\"onFocusUp()\"  *ngIf=\"hasCameraFocusContinuousCapability\">\r\n    <mat-icon class=\"hud-button-icon\" [inline]=\"true\" matTooltip=\"Focus Far\" aria-hidden=\"false\" aria-label=\"Focus Far\">panorama</mat-icon>\r\n  </app-hud-button>\r\n\r\n  <div class=\"spacer\">\r\n\r\n  </div>\r\n\r\n</div>\r\n<div *ngIf=\"!isLeftToRight\" class=\"hud-column flex-dir-col\">\r\n  <app-compass></app-compass>\r\n\r\n  <div class=\"spacer\"></div>\r\n  <!-- Wash -->\r\n  <app-hud-button *ngIf=\"hasWasherCapability\">\r\n\r\n    <mat-icon class=\"hud-button-icon\" [inline]=\"true\" matTooltip=\"Start Recording\" aria-hidden=\"false\" aria-label=\"Start Recording\">cleaning_services</mat-icon>\r\n  </app-hud-button>\r\n\r\n  <!-- Record -->\r\n  <app-hud-button (click)=\"onRecordClick()\" *ngIf=\"hasRecordCapability\">\r\n    <mat-icon *ngIf=\"runningRecord == null\" class=\"hud-button-icon\" [inline]=\"true\" matTooltip=\"Start Recording\" aria-hidden=\"false\" aria-label=\"Start Recording\">fiber_manual_record</mat-icon>\r\n    <mat-icon *ngIf=\"runningRecord != null\" class=\"hud-button-icon\" [inline]=\"true\" matTooltip=\"Stop Recording\" aria-hidden=\"false\" aria-label=\"Stop Recording\">stop</mat-icon>\r\n  </app-hud-button>\r\n  <!-- Screenshot -->\r\n  <app-hud-button (buttonUp)=\"onScreenshot()\" *ngIf=\"hasScreenshotCapability\">\r\n    <mat-icon class=\"hud-button-icon\" [inline]=\"true\" matTooltip=\"Screenshot\" aria-hidden=\"false\" aria-label=\"Screenshot\">photo_camera</mat-icon>\r\n  </app-hud-button>\r\n  <!-- Switch -->\r\n  <app-hud-button *ngIf=\"hasMultipleCamera\" (buttonDown)=\"onSwitchCameraDown()\">\r\n    <mat-icon class=\"hud-button-icon\" [inline]=\"true\" matTooltip=\"Switch to next camera\" aria-hidden=\"false\" aria-label=\"Switch to next camera\">swap_horizontal_circle</mat-icon>\r\n\r\n  </app-hud-button>\r\n\r\n  <!--Stabilization -->\r\n  <app-hud-check (checkChange)=\"onStablizationCheckChange($event)\" [isChecked]=\"isTurretGyroStabilizationEnabled\" *ngIf=\"hasGyroStabilizationCapability\">\r\n    <mat-icon class=\"hud-button-icon\" [inline]=\"true\" matTooltip=\"Gyrostabilization\" aria-hidden=\"false\" aria-label=\"Gyrostabilization\">video_stable</mat-icon>\r\n\r\n  </app-hud-check>\r\n\r\n  <div class=\"spacer\"></div>\r\n  <app-stick *ngIf=\"hasMoveSpeedCapability\"></app-stick>\r\n</div>\r\n<div class=\"spacer\">\r\n\r\n</div>\r\n\r\n\r\n<div *ngIf=\"isLeftToRight\" class=\"hud-column flex-dir-col\">\r\n  <app-compass></app-compass>\r\n\r\n  <div class=\"spacer\"></div>\r\n  <!-- Wash -->\r\n  <app-hud-button *ngIf=\"hasWasherCapability\">\r\n\r\n    <mat-icon class=\"hud-button-icon\" [inline]=\"true\" matTooltip=\"Start Recording\" aria-hidden=\"false\" aria-label=\"Start Recording\">cleaning_services</mat-icon>\r\n  </app-hud-button>\r\n\r\n  <!-- Record -->\r\n  <app-hud-button (click)=\"onRecordClick()\" *ngIf=\"hasRecordCapability\">\r\n    <mat-icon *ngIf=\"runningRecord == null\" class=\"hud-button-icon\" [inline]=\"true\" matTooltip=\"Start Recording\" aria-hidden=\"false\" aria-label=\"Start Recording\">fiber_manual_record</mat-icon>\r\n    <mat-icon *ngIf=\"runningRecord != null\" class=\"hud-button-icon\" [inline]=\"true\" matTooltip=\"Stop Recording\" aria-hidden=\"false\" aria-label=\"Stop Recording\">stop</mat-icon>\r\n  </app-hud-button>\r\n  <!-- Screenshot -->\r\n  <app-hud-button (buttonUp)=\"onScreenshot()\" *ngIf=\"hasScreenshotCapability\">\r\n    <mat-icon class=\"hud-button-icon\" [inline]=\"true\" matTooltip=\"Screenshot\" aria-hidden=\"false\" aria-label=\"Screenshot\">photo_camera</mat-icon>\r\n  </app-hud-button>\r\n  <!-- Switch -->\r\n  <app-hud-button *ngIf=\"hasMultipleCamera\" (buttonDown)=\"onSwitchCameraDown()\">\r\n    <mat-icon class=\"hud-button-icon\" [inline]=\"true\" matTooltip=\"Switch to next camera\" aria-hidden=\"false\" aria-label=\"Switch to next camera\">swap_horizontal_circle</mat-icon>\r\n\r\n  </app-hud-button>\r\n\r\n  <!--Stabilization -->\r\n  <app-hud-check (checkChange)=\"onStablizationCheckChange($event)\" [isChecked]=\"isTurretGyroStabilizationEnabled\" *ngIf=\"hasGyroStabilizationCapability\">\r\n    <mat-icon class=\"hud-button-icon\" [inline]=\"true\" matTooltip=\"Gyrostabilization\" aria-hidden=\"false\" aria-label=\"Gyrostabilization\">video_stable</mat-icon>\r\n\r\n  </app-hud-check>\r\n\r\n  <div class=\"spacer\"></div>\r\n  <app-stick *ngIf=\"hasMoveSpeedCapability\"></app-stick>\r\n</div>\r\n\r\n\r\n<div *ngIf=\"!isLeftToRight\" class=\"hud-column flex-dir-col\">\r\n  <div class=\"spacer\">\r\n\r\n  </div>\r\n\r\n  <!-- Button LRF -->\r\n  <mat-label *ngIf=\"hasLrf\" class=\"lrf-info-label\">{{lrfInfo}}</mat-label>\r\n  <app-hud-lrf-button *ngIf=\"hasLrf\">\r\n    <mat-icon class=\"hud-button-icon\" [inline]=\"true\" matTooltip=\"Lazer Measurement\" aria-hidden=\"false\" aria-label=\"Lazer Measurement\">sensors</mat-icon>\r\n  </app-hud-lrf-button>\r\n\r\n  <!-- Zoom In -->\r\n  <app-hud-button *ngIf=\"hasZoomContinuousCapability\" (buttonDown)=\"onZoomInDown()\" (buttonUp)=\"onZoomUp()\">\r\n    <mat-icon class=\"hud-button-icon\" [inline]=\"true\" matTooltip=\"Zoom In\" aria-hidden=\"false\" aria-label=\"Zoom In\">zoom_in</mat-icon>\r\n  </app-hud-button>\r\n\r\n  <!-- Zoom PIP -->\r\n  <app-hud-button  *ngIf=\"hasPipZoom\" (buttonDown)=\"onPipZoomButtonDown()\">\r\n    <mat-icon class=\"hud-button-icon\" [inline]=\"true\" matTooltip=\"Switch Zoom Center On/Off\" aria-hidden=\"false\" aria-label=\"Switch Zoom Center On/Off\">crop_free</mat-icon>\r\n  </app-hud-button>\r\n\r\n\r\n  <!-- Zoom Out -->\r\n  <app-hud-button *ngIf=\"hasZoomContinuousCapability\" (buttonDown)=\"onZoomOutDown()\" (buttonUp)=\"onZoomUp()\">\r\n    <mat-icon class=\"hud-button-icon\" [inline]=\"true\" matTooltip=\"Zoom Out\" aria-hidden=\"false\" aria-label=\"Zoom Out\">zoom_out</mat-icon>\r\n  </app-hud-button>\r\n\r\n\r\n  <!-- Auto Focus -->\r\n  <app-hud-button (buttonDown)=\"onAutoFocusButtonDown()\" *ngIf=\"hasCameraAutoFocusCapability\">\r\n\r\n    <mat-icon class=\"hud-button-icon\" [inline]=\"true\" matTooltip=\"Auto Focus\" aria-hidden=\"false\" aria-label=\"Auto Focus\"> filter_center_focus</mat-icon>\r\n\r\n  </app-hud-button>\r\n\r\n  <!-- Focus Near -->\r\n  <app-hud-button *ngIf=\"hasCameraFocusContinuousCapability\">\r\n    <mat-icon class=\"hud-button-icon\" [inline]=\"true\" matTooltip=\"Focus Near\" aria-hidden=\"false\" aria-label=\"Focus Near\">portrait</mat-icon>\r\n  </app-hud-button>\r\n\r\n  <!-- Focus Far -->\r\n  <app-hud-button *ngIf=\"hasCameraFocusContinuousCapability\">\r\n    <mat-icon class=\"hud-button-icon\" [inline]=\"true\" matTooltip=\"Focus Far\" aria-hidden=\"false\" aria-label=\"Focus Far\">panorama</mat-icon>\r\n  </app-hud-button>\r\n\r\n  <div class=\"spacer\">\r\n\r\n  </div>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Camera } from '../../materials/camera';\r\nimport { SiteService } from '../../services/site.service';\r\nimport { UiService } from '../../services/ui.service';\r\nimport { DoubleValueType } from '../../materials/capabilities/double-value-type';\r\nimport { DoubleValueCapability } from '../../materials/capabilities/double-value-capability';\r\nimport { SwitchValueCapability } from '../../materials/capabilities/switch-value-capability';\r\nimport { SwitchValueType } from '../../materials/capabilities/switch-value-type';\r\n\r\n\r\n@Component({\r\n  selector: 'app-panel-camera',\r\n  templateUrl: './panel-camera.component.html',\r\n  styleUrls: ['./panel-camera.component.scss']\r\n})\r\nexport class PanelCameraComponent implements OnInit, OnDestroy {\r\n\r\n  public camera: Camera | undefined = undefined;\r\n  private cameraSelectedSubscription: Subscription;\r\n  public qualityCapability: DoubleValueCapability | undefined = undefined;\r\n  public blackLevelCapability: DoubleValueCapability | undefined = undefined;\r\n  public exposureTimeModeCapability: SwitchValueCapability | undefined = undefined;\r\n  public exposureTimeCapability: DoubleValueCapability | undefined = undefined;\r\n  public gainModeCapability: SwitchValueCapability | undefined = undefined;\r\n  public gainCapability: DoubleValueCapability | undefined = undefined;\r\n  public gammaCapability: DoubleValueCapability | undefined = undefined;\r\n  public contrastCapability: DoubleValueCapability | undefined = undefined;\r\n  public whiteBalanceModeCapability: SwitchValueCapability | undefined = undefined;\r\n  public whiteBalanceCapability: DoubleValueCapability | undefined = undefined;\r\n  public luminosityCapability: DoubleValueCapability | undefined = undefined;\r\n  public meteoLocationCapability: SwitchValueCapability | undefined = undefined;\r\n  public meteoTimeCapability: SwitchValueCapability | undefined = undefined;\r\n  public meteoWeatherCapability: SwitchValueCapability | undefined = undefined;\r\n  public shutterModeCapability: SwitchValueCapability | undefined = undefined;\r\n  public reticuleModeCapability: SwitchValueCapability | undefined = undefined;\r\n  public colorModeCapability: SwitchValueCapability | undefined = undefined;\r\n  constructor(private uiService: UiService, private siteService: SiteService) {\r\n\r\n    this.cameraSelectedSubscription = this.siteService.cameraSelectedSubject.subscribe(() => {\r\n      this.camera = this.siteService.selectedCamera;\r\n      this.updateVisibilityFlags();\r\n      console.log(\"Current camera \", this.camera);\r\n    });\r\n  }\r\n  updateVisibilityFlags() {\r\n    if (this.camera != null) {\r\n      this.qualityCapability = this.camera.getValueCapability(DoubleValueType.Quality);\r\n      if (this.qualityCapability != null) this.qualityCapability.beginEdit();\r\n\r\n      this.blackLevelCapability = this.camera.getValueCapability(DoubleValueType.BlackLevel);\r\n      if (this.blackLevelCapability != null) this.blackLevelCapability.beginEdit();\r\n\r\n      this.exposureTimeModeCapability = this.camera.getSwitchCapability(SwitchValueType.ExposureTimeMode);\r\n      if (this.exposureTimeModeCapability != null) this.exposureTimeModeCapability.beginEdit();\r\n\r\n      this.exposureTimeCapability = this.camera.getValueCapability(DoubleValueType.ExposureTime);\r\n      if (this.exposureTimeCapability != null) this.exposureTimeCapability.beginEdit();\r\n\r\n      this.gainModeCapability = this.camera.getSwitchCapability(SwitchValueType.GainMode);\r\n      if (this.gainModeCapability != null) this.gainModeCapability.beginEdit();\r\n\r\n      this.gainCapability = this.camera.getValueCapability(DoubleValueType.Gain);\r\n      if (this.gainCapability != null) this.gainCapability.beginEdit();\r\n\r\n      this.gammaCapability = this.camera.getValueCapability(DoubleValueType.Gamma);\r\n      if (this.gammaCapability != null) this.gammaCapability.beginEdit();\r\n\r\n      this.contrastCapability = this.camera.getValueCapability(DoubleValueType.Contrast);\r\n      if (this.contrastCapability != null) this.contrastCapability.beginEdit();\r\n\r\n\r\n      this.whiteBalanceCapability = this.camera.getValueCapability(DoubleValueType.WhiteBalance);\r\n      if (this.whiteBalanceCapability != null) this.whiteBalanceCapability.beginEdit();\r\n\r\n\r\n      this.whiteBalanceModeCapability = this.camera.getSwitchCapability(SwitchValueType.WhiteBalanceMode);\r\n      if (this.whiteBalanceModeCapability != null) this.whiteBalanceModeCapability.beginEdit();\r\n\r\n      this.luminosityCapability = this.camera.getValueCapability(DoubleValueType.Luminosity);\r\n      if (this.luminosityCapability != null) this.luminosityCapability.beginEdit();\r\n\r\n\r\n      this.meteoLocationCapability = this.camera.getSwitchCapability(SwitchValueType.MeteoLocation);\r\n      this.meteoLocationCapability?.beginEdit();\r\n\r\n      this.meteoTimeCapability = this.camera.getSwitchCapability(SwitchValueType.MeteoTime);\r\n      this.meteoTimeCapability?.beginEdit();\r\n\r\n\r\n      this.meteoWeatherCapability = this.camera.getSwitchCapability(SwitchValueType.MeteoWeather);\r\n      this.meteoWeatherCapability?.beginEdit();\r\n\r\n      this.reticuleModeCapability = this.camera.getSwitchCapability(SwitchValueType.ReticuleMode);\r\n      this.reticuleModeCapability?.beginEdit();\r\n      if (this.reticuleModeCapability != null) {\r\n        console.log(\"reticuleMode values \", this.reticuleModeCapability.values);\r\n      }\r\n\r\n      this.shutterModeCapability = this.camera.getSwitchCapability(SwitchValueType.ShutterMode);\r\n      this.shutterModeCapability?.beginEdit();\r\n\r\n      this.colorModeCapability = this.camera.getSwitchCapability(SwitchValueType.ColorMode);\r\n      this.colorModeCapability?.beginEdit();\r\n\r\n\r\n\r\n    }\r\n    else {\r\n      this.gammaCapability = undefined;\r\n      this.whiteBalanceCapability = undefined;\r\n      this.whiteBalanceModeCapability = undefined;\r\n      this.qualityCapability = undefined;\r\n      this.blackLevelCapability = undefined;\r\n      this.exposureTimeCapability = undefined;\r\n      this.gainModeCapability = undefined;\r\n      this.gainCapability = undefined;\r\n      this.luminosityCapability = undefined;\r\n      this.meteoLocationCapability = undefined;\r\n      this.meteoTimeCapability = undefined;\r\n      this.meteoWeatherCapability = undefined;\r\n      this.reticuleModeCapability = undefined;\r\n      this.shutterModeCapability = undefined;\r\n      this.colorModeCapability = undefined;\r\n      this.contrastCapability = undefined;\r\n    }\r\n  }\r\n\r\n\r\n  onCloseClick() {\r\n    this.uiService.hidePanelCamera();\r\n  }\r\n  ngOnInit(): void {\r\n    this.camera = this.siteService.selectedCamera;\r\n    this.updateVisibilityFlags();\r\n    console.log(\"Current camera \", this.camera);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.cameraSelectedSubscription.unsubscribe();\r\n  }\r\n\r\n}\r\n","<mat-card class=\"camera-card\">\r\n  <mat-card-header>\r\n    <mat-card-title class=\"card-title\"><mat-icon class=\"card-icon-title\">camera_enhance</mat-icon>Camera Advanced Parameters</mat-card-title>\r\n    <mat-card-subtitle>Be carefull with this settings</mat-card-subtitle>\r\n  </mat-card-header>\r\n  <mat-card-content >\r\n\r\n      <mat-tab-group >\r\n        <mat-tab label=\"Image\" *ngIf=\"luminosityCapability != null || contrastCapability != null || gammaCapability != null || qualityCapability != null\">\r\n          <div class=\"tab-content-container\">\r\n            <app-async-slider *ngIf=\"luminosityCapability != null\" displayName=\"Luminosity\" [capability]=\"luminosityCapability\"> </app-async-slider>\r\n            <app-async-slider *ngIf=\"contrastCapability != null\" displayName=\"Contrast\" [capability]=\"contrastCapability\"> </app-async-slider>\r\n            <app-async-slider *ngIf=\"gammaCapability != null\" displayName=\"Gamma\" [capability]=\"gammaCapability\"> </app-async-slider>\r\n            <app-async-slider *ngIf=\"qualityCapability != null\" displayName=\"Quality\" [capability]=\"qualityCapability\"> </app-async-slider>\r\n          </div>        \r\n        </mat-tab>\r\n\r\n\r\n        <mat-tab label=\"Meteo\" *ngIf=\"meteoLocationCapability != null || meteoTimeCapability != null || meteoWeatherCapability != null\">\r\n          <div class=\"tab-content-container\">\r\n            <app-async-toggle-group *ngIf=\"meteoLocationCapability != null\" displayName=\"Meteo Location\" [capability]=\"meteoLocationCapability\"> </app-async-toggle-group>\r\n            <app-async-toggle-group *ngIf=\"meteoTimeCapability != null\" displayName=\"Meteo Timer\" [capability]=\"meteoTimeCapability\"> </app-async-toggle-group>\r\n            <app-async-toggle-group *ngIf=\"meteoWeatherCapability != null\" displayName=\"Meteo Weather\" [capability]=\"meteoWeatherCapability\"> </app-async-toggle-group>\r\n          </div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"Exposition\" *ngIf=\"exposureTimeModeCapability != null || exposureTimeCapability != null || gainCapability != null || gainModeCapability != null || shutterModeCapability != null\">\r\n          <div class=\"tab-content-container\">\r\n            <app-async-toggle-group *ngIf=\"exposureTimeModeCapability != null\" displayName=\"Exposure Time Mode\" [capability]=\"exposureTimeModeCapability\"></app-async-toggle-group>\r\n            <app-async-slider *ngIf=\"exposureTimeCapability != null\" displayName=\"Exposure Time\" [capability]=\"exposureTimeCapability\"> </app-async-slider>\r\n            <app-async-slider *ngIf=\"gainCapability != null\" displayName=\"Gain\" [capability]=\"gainCapability\"> </app-async-slider>\r\n            <app-async-toggle-group *ngIf=\"gainModeCapability != null\" displayName=\"Gain Mode\" [capability]=\"gainModeCapability\"></app-async-toggle-group>\r\n            <app-async-toggle-group *ngIf=\"shutterModeCapability != null\" displayName=\"Shutter\" [capability]=\"shutterModeCapability\"> </app-async-toggle-group>\r\n          </div>\r\n\r\n\r\n        </mat-tab>\r\n        <mat-tab label=\"Black & White\" *ngIf=\"blackLevelCapability != null || whiteBalanceModeCapability != null || whiteBalanceCapability != null\">\r\n          <div class=\"tab-content-container\">\r\n            <app-async-slider *ngIf=\"blackLevelCapability != null\" displayName=\"Black level\" [capability]=\"blackLevelCapability\"> </app-async-slider>\r\n            <app-async-toggle-group *ngIf=\"whiteBalanceModeCapability != null\" displayName=\"White Balance Mode\" [capability]=\"whiteBalanceModeCapability\"></app-async-toggle-group>\r\n            <app-async-slider *ngIf=\"whiteBalanceCapability != null\" displayName=\"White Balance\" [capability]=\"whiteBalanceCapability\"> </app-async-slider>\r\n          </div>\r\n        </mat-tab>\r\n\r\n\r\n        <mat-tab label=\"Misc\" *ngIf=\"reticuleModeCapability != null || colorModeCapability != null\">\r\n          <div class=\"tab-content-container\">\r\n            <app-async-toggle-group *ngIf=\"reticuleModeCapability != null\" displayName=\"Reticule\" [capability]=\"reticuleModeCapability\"> </app-async-toggle-group>\r\n            <app-async-toggle-group *ngIf=\"colorModeCapability != null\" displayName=\"Color\" [capability]=\"colorModeCapability\"> </app-async-toggle-group>\r\n          </div>\r\n        </mat-tab>\r\n      </mat-tab-group>\r\n\r\n\r\n    \r\n\r\n\r\n   \r\n\r\n  </mat-card-content>\r\n  <mat-card-actions>\r\n    <button class=\"full-width\" (click)=\"onCloseClick()\" mat-button>Close</button>\r\n  </mat-card-actions>\r\n</mat-card>\r\n\r\n\r\n","import { Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { Data } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { MediaFile } from '../../models/media-file';\r\nimport { UiService } from '../../services/ui.service';\r\nimport { WsService } from '../../services/ws.service';\r\n\r\n@Component({\r\n  selector: 'app-panel-media',\r\n  templateUrl: './panel-media.component.html',\r\n  styleUrls: ['./panel-media.component.scss']\r\n})\r\nexport class PanelMediaComponent implements OnInit, OnDestroy {\r\n  public files: MediaFile[] = [];\r\n  displayedColumns: string[] = [ 'name','size','date','type','download','open','delete'];\r\n  private mediaFilesSubscription: Subscription;\r\n  @ViewChild('refLink') refLink: ElementRef | null = null;\r\n    mediaChangeSubscription: Subscription;\r\n  constructor(private uiService: UiService, private wsService: WsService) {\r\n    this.mediaChangeSubscription= this.uiService.mediaChangeSubject.subscribe(() => {\r\n      this.wsService.getMediaList();\r\n    });\r\n\r\n    this.mediaFilesSubscription = this.wsService.mediaFilesSubject.subscribe((files: MediaFile[]) => {\r\n      this.files = [];\r\n      this.files = this.files.concat(files);\r\n    });\r\n\r\n  \r\n  }\r\n  ngOnDestroy() {\r\n    this.mediaFilesSubscription.unsubscribe();\r\n    this.mediaChangeSubscription.unsubscribe();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.wsService.getMediaList();\r\n\r\n  }\r\n  onCloseClick() {\r\n    this.uiService.hidePanelMedia();\r\n  }\r\n  getComputedSize(sizeIOnBytes: number): string {\r\n    if (sizeIOnBytes > 1073741824) {\r\n      return (sizeIOnBytes / 1073741824).toFixed(2) + \" GB\";\r\n    }\r\n    else if (sizeIOnBytes > 1048576) {\r\n      return (sizeIOnBytes / 1048576).toFixed(2) + \" MB\";\r\n    }\r\n    else if (sizeIOnBytes > 1024) {\r\n      return (sizeIOnBytes / 1024).toFixed(2) + \" KB\";\r\n    }\r\n    return sizeIOnBytes + \" Bytes\";\r\n  }\r\n  getComputedType(url: string) {\r\n    if (url.endsWith(\"jpg\")) return \"Image\";\r\n    if (url.endsWith(\"png\")) return \"Image\";\r\n    if (url.endsWith(\"bmp\")) return \"Image\";\r\n    if (url.endsWith(\"avi\")) return \"Video\";\r\n    if (url.endsWith(\"mpg\")) return \"Video\";\r\n    if (url.endsWith(\"mp4\")) return \"Video\";\r\n    if (url.endsWith(\"mpeg\")) return \"Video\";\r\n    return \"Undefined\";\r\n  }\r\n  padTo2Digits(num : number) {\r\n  return num.toString().padStart(2, '0');\r\n}\r\n\r\n  formatDate(val: string) {\r\n    let date: Date = new Date(val);\r\n    return [\r\n      this.padTo2Digits(date.getDate()),\r\n      this.padTo2Digits(date.getMonth() + 1),\r\n      date.getFullYear(),\r\n    ].join('/') + ' ' + date.toTimeString().split(' ')[0];\r\n  }\r\n  onDownloadClick(file: MediaFile) {\r\n    if (this.refLink == null) return;\r\n    this.refLink.nativeElement.setAttribute('download', file.name);\r\n    this.refLink.nativeElement.href = file.url;\r\n    console.log(\"Download url \" + file.url);\r\n    this.refLink.nativeElement.click();\r\n  }\r\n  onOpenInNewTabClick(file: MediaFile) {\r\n    console.log(\"Open url \" + file.url);\r\n    window.open(file.url, \"_blank\");\r\n\r\n  }\r\n  onDeleteClick(file: MediaFile) {\r\n    this.wsService.deleteMedia(file.name);\r\n    this.uiService.notifyMediaChange(500);\r\n  }\r\n}\r\n","<mat-card class=\"camera-card\">\r\n  <mat-card-header>\r\n    <mat-card-title class=\"card-title\"><mat-icon class=\"card-icon-title\">video_library</mat-icon>Medias library</mat-card-title>\r\n    <mat-card-subtitle>Show or download medias</mat-card-subtitle>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <a [hidden]=\"true\" #refLink>\r\n    </a>\r\n    <div class=\"media-container\">\r\n      <table mat-table [dataSource]=\"files\">\r\n\r\n        <!--- Note that these columns can be defined in any order.\r\n  The actual rendered columns are set as a property on the row definition\" -->\r\n        <!-- Position Column -->\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"name\">\r\n          <th mat-header-cell *matHeaderCellDef> Name </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Size Column -->\r\n        <ng-container matColumnDef=\"size\">\r\n          <th mat-header-cell *matHeaderCellDef> Size </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{getComputedSize(element.size)}} </td>\r\n        </ng-container>\r\n\r\n\r\n        <!-- Date Column -->\r\n        <ng-container matColumnDef=\"date\">\r\n          <th mat-header-cell *matHeaderCellDef> Date </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{formatDate(element.creationDate)}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Type Column -->\r\n        <ng-container matColumnDef=\"type\">\r\n          <th mat-header-cell *matHeaderCellDef> Type </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{getComputedType(element.url)}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Download Column -->\r\n        <ng-container matColumnDef=\"download\">\r\n          <th mat-header-cell *matHeaderCellDef> Download </th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n            <mat-icon (click)=\"onDownloadClick(element)\" class=\"clickable margin-4\" matTooltip=\"Download file\">download</mat-icon>\r\n\r\n          </td>\r\n        </ng-container>\r\n\r\n        <!-- Open Column -->\r\n        <ng-container matColumnDef=\"open\">\r\n          <th mat-header-cell *matHeaderCellDef> Open </th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n            <mat-icon (click)=\"onOpenInNewTabClick(element)\" class=\"clickable margin-4\" matTooltip=\"Open file in new tab\">open_in_new</mat-icon>\r\n          </td>\r\n        </ng-container>\r\n\r\n\r\n        <!-- Delete Column -->\r\n        <ng-container matColumnDef=\"delete\">\r\n          <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n            <mat-icon (click)=\"onDeleteClick(element)\" class=\"clickable margin-4\" matTooltip=\"Delete file\">delete</mat-icon>\r\n          </td>\r\n        </ng-container>\r\n\r\n\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n    </div>\r\n\r\n\r\n  </mat-card-content>\r\n  <mat-card-actions>\r\n    <button class=\"full-width\" (click)=\"onCloseClick()\" mat-button>Close</button>\r\n  </mat-card-actions>\r\n</mat-card>\r\n\r\n\r\n","import { Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { MatCheckboxChange } from '@angular/material/checkbox';\r\nimport { Subscription } from 'rxjs';\r\nimport { CapabilityType } from '../../materials/capabilities/capability-type';\r\nimport { UnitSavCapability } from '../../materials/capabilities/unit/unit-sav-capability';\r\nimport { SiteService } from '../../services/site.service';\r\nimport { UiService } from '../../services/ui.service';\r\nimport { WsService } from '../../services/ws.service';\r\n\r\n@Component({\r\n  selector: 'app-panel-sav',\r\n  templateUrl: './panel-sav.component.html',\r\n  styleUrls: ['./panel-sav.component.scss']\r\n})\r\nexport class PanelSavComponent implements OnInit,OnDestroy {\r\n\r\n  @ViewChild('tcpMessagesCtrl') private tcpMessagesCtrl: ElementRef | undefined = undefined;\r\n  public savCapability: UnitSavCapability | undefined = undefined;\r\n  siteStateSubscription: Subscription;\r\n  latestComMessageSubscription: Subscription;\r\n  public tcpMessageToSend: string = \"\";\r\n  public tcpMessages: string = \"\";\r\n  private tcpMessageTimer: any;\r\n  public isPollingEnabled: boolean = true;\r\n  constructor(private uiService: UiService, private siteService: SiteService, private wsService: WsService) {\r\n    this.siteStateSubscription = this.siteService.siteStateSubject.subscribe(() => { this.retreiveSavCapability(); });\r\n    this.latestComMessageSubscription = this.wsService.latestComMessageSubject.subscribe((messages: string[]) => {\r\n      this.tcpMessages += messages.join(\"\\r\\n\");\r\n      if (messages.length > 0) this.tcpMessages += \"\\r\\n\";\r\n      if (this.tcpMessagesCtrl != null) {\r\n        this.tcpMessagesCtrl.nativeElement.scrollTop = this.tcpMessagesCtrl.nativeElement.scrollHeight;\r\n      }\r\n    });\r\n  }\r\n\r\n  retreiveSavCapability() {\r\n    if (this.siteService.selectedUnit != null) {\r\n      this.savCapability = this.siteService.selectedUnit.getCapability<UnitSavCapability>(CapabilityType.UnitSav);\r\n    }\r\n    else {\r\n      this.savCapability = undefined;\r\n    }\r\n\r\n  }\r\n  ngOnDestroy() {\r\n    this.siteStateSubscription.unsubscribe();\r\n    this.latestComMessageSubscription.unsubscribe();\r\n    clearInterval(this.tcpMessageTimer);\r\n  }\r\n  onPollingStateChange(evt: MatCheckboxChange) {\r\n    if (this.savCapability != null) this.savCapability.setPollingState(evt.checked);\r\n  }\r\n  ngOnInit(): void {\r\n    this.retreiveSavCapability();\r\n    this.tcpMessageTimer = setInterval(() => { if (this.savCapability != null) this.savCapability.getLatestComMessage() }, 500);\r\n  }\r\n\r\n  onCloseClick() {\r\n    this.uiService.hidePanelSav();\r\n\r\n  }\r\n  onSendClick() {\r\n    if (this.savCapability != null) {\r\n      this.savCapability.executeCommand(this.tcpMessageToSend);\r\n    }\r\n  }\r\n\r\n}\r\n","<mat-card class=\"camera-card\">\r\n  <mat-card-header>\r\n    <mat-card-title class=\"card-title\"><mat-icon class=\"card-icon-title\">bug_report</mat-icon>Sav</mat-card-title>\r\n    <mat-card-subtitle>Specific features reserved at Exavision</mat-card-subtitle>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div *ngIf=\"savCapability != null\" class=\"display-flex flex-dir-col\">\r\n\r\n      <mat-checkbox (change)=\"onPollingStateChange($event)\" [(ngModel)]=\"isPollingEnabled\" >Polling state</mat-checkbox>\r\n\r\n      <mat-form-field class=\"margin-4\">\r\n        <mat-label>TCP Messages</mat-label>\r\n        <textarea #tcpMessagesCtrl class=\"tcp-messages\" readonly matInput\r\n                  cdkTextareaAutosize\r\n                  [(ngModel)]=\"tcpMessages\"\r\n                  #autosize=\"cdkTextareaAutosize\"\r\n                  cdkAutosizeMinRows=\"20\"\r\n                  cdkAutosizeMaxRows=\"20\"></textarea>\r\n      </mat-form-field>\r\n      <div class=\"display-flex flex-dir-row\">\r\n        <mat-form-field class=\"margin-4 flex-1\">\r\n\r\n          <mat-label>Send TCP Message</mat-label>\r\n          <input matInput placeholder=\"Command to send\" name=\"command-field\" [(ngModel)]=\"tcpMessageToSend\">\r\n        </mat-form-field>\r\n        <button (click)=\"onSendClick()\" mat-button>Send</button>\r\n      </div>\r\n\r\n    </div>\r\n  </mat-card-content>\r\n  <mat-card-actions>\r\n    <button class=\"full-width\" (click)=\"onCloseClick()\" mat-button>Close</button>\r\n  </mat-card-actions>\r\n</mat-card>\r\n\r\n\r\n","import { AfterContentInit, AfterViewInit, ChangeDetectorRef, Component, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\r\nimport * as nipplejs from 'nipplejs';\r\nimport { JoystickManager } from 'nipplejs';\r\nimport { Subscription } from 'rxjs';\r\nimport { CapabilityType } from '../../materials/capabilities/capability-type';\r\nimport { TurretMoveSpeedCapability } from '../../materials/capabilities/turret/turret-move-speed-capability';\r\nimport { MaterialType } from '../../materials/material-type';\r\nimport { Vector2 } from '../../models/vector2';\r\nimport { GamepadService } from '../../services/gamepad.service';\r\nimport { SiteService } from '../../services/site.service';\r\n@Component({\r\n  selector: 'app-stick',\r\n  templateUrl: './stick.component.html',\r\n  styleUrls: ['./stick.component.scss']\r\n})\r\nexport class StickComponent implements AfterViewInit, OnInit, OnChanges, AfterContentInit{\r\n  @ViewChild(\"nipplejshost\") nipplejshost: any = null;\r\n  private commandInterval : number = 100;\r\n  private nippleControl: JoystickManager | undefined = undefined;\r\n  private commandIntervalTimer: any;\r\n  private turretMoveSpeedCapability: TurretMoveSpeedCapability | undefined = undefined;\r\n  public axisX: number = 0;\r\n  public axisY: number = 0;\r\n  public lastSendAxisX: number = 0;\r\n  public lastSendAxisY: number = 0;\r\n  private unitSelectedSubscription: Subscription;\r\n  constructor(private cdref: ChangeDetectorRef, private siteService: SiteService, private gamePadService: GamepadService) {\r\n    this.commandIntervalTimer = setInterval(() => {\r\n      this.updateStickInfos();\r\n    }, this.commandInterval);\r\n    this.gamePadService.initialize();\r\n    this.gamePadService.gamepadAxisSubject.subscribe((moveVector: Vector2) => {\r\n      this.turretMoveSpeedCapability?.moveSpeed(moveVector.x, moveVector.y);\r\n    });\r\n    this.findTurretMoveSpeedCapability();\r\n    this.unitSelectedSubscription = this.siteService.unitSelectedSubject.subscribe(this.findTurretMoveSpeedCapability);\r\n\r\n  }\r\n  findTurretMoveSpeedCapability() {\r\n    if (this.siteService == null) {\r\n      this.turretMoveSpeedCapability = undefined;\r\n      return;\r\n    }\r\n    if (this.siteService.selectedUnit == null) {\r\n      this.turretMoveSpeedCapability = undefined;\r\n      return;\r\n    }\r\n    this.turretMoveSpeedCapability = this.siteService.selectedUnit.getMaterialCapability(MaterialType.Turret, CapabilityType.TurretMoveSpeed);\r\n    \r\n  }\r\n  ngOnInit(): void {\r\n\r\n\r\n  }\r\n  updateStickInfos() {\r\n\r\n    if (this.lastSendAxisX != this.axisX || this.lastSendAxisY != this.axisY) {\r\n      if (this.turretMoveSpeedCapability != null) {\r\n        console.log(\"Call turretMoveSpeedCapability.moveSpeed \" + this.axisX + \" \" + this.axisY);\r\n        this.turretMoveSpeedCapability.moveSpeed(this.axisX, this.axisY);\r\n\r\n      }\r\n    }\r\n    this.lastSendAxisX = this.axisX;\r\n    this.lastSendAxisY = this.axisY;\r\n  }\r\n  ngOnDestroy() {\r\n    clearInterval(this.commandIntervalTimer);\r\n    this.unitSelectedSubscription.unsubscribe();\r\n  }\r\n  ngOnChanges(changes: SimpleChanges) {\r\n   \r\n  }\r\n  ngAfterContentInit(): void {\r\n  \r\n  }\r\n  ngAfterViewInit(): void {\r\n    // NippleJs creation is deffered.\r\n    // without deffred instanciation stick initialization is corrupted.\r\n    setTimeout(() => {\r\n      this.nippleControl = nipplejs.create({\r\n        zone: this.nipplejshost.nativeElement,\r\n        mode: 'static',\r\n        position: { left: '80px', top: '80px' },\r\n        color: 'blue',\r\n        restOpacity:1,\r\n        \r\n      });\r\n      this.nippleControl.on('start', (evt, data) => {       \r\n        this.axisX = 0;\r\n        this.axisY = 0;\r\n      });\r\n\r\n      this.nippleControl.on('end', (evt, data) => {       \r\n        this.axisX = 0;\r\n        this.axisY = 0;\r\n      });\r\n      this.nippleControl.on('move', (evt, data) => {      \r\n        this.axisX = data.vector.x;\r\n        this.axisY = data.vector.y;\r\n      });\r\n    }, 500);\r\n    \r\n  \r\n    \r\n  }\r\n\r\n}\r\n","<div #nipplejshost class=\"stick-host\"></div>\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { ValidateTokenResponse } from '../api/http/validate-token-response';\r\nimport { HttpService } from '../services/http.service';\r\nimport { UserService } from '../services/user.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class JwtGuard implements CanActivate {\r\n  constructor(private router: Router, private userService: UserService, private httpService: HttpService) { }\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n\r\n    return new Promise<boolean | UrlTree>((resolve, reject) => {\r\n      this.httpService.validateToken().subscribe({\r\n        next: (response: ValidateTokenResponse) => {\r\n          resolve(true);\r\n        },\r\n        error: (err: HttpErrorResponse) => {\r\n          this.router.navigate(['/login'])\r\n          reject(false);\r\n\r\n        },\r\n      });  \r\n    });\r\n     \r\n\r\n    \r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest\r\n} from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { UserService } from '../services/user.service';\r\n\r\n/** Pass untouched request through to the next request handler. */\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler):\r\n    Observable<HttpEvent<any>> {\r\n    const userToken = this.userService.token;\r\n    if (userToken != undefined) {\r\n      const modifiedReq = req.clone({\r\n        headers: req.headers.set('Authorization', `Bearer ${userToken}`),\r\n      });\r\n      return next.handle(modifiedReq);    \r\n    }\r\n    return next.handle(req);    \r\n  }\r\n}\r\n","import { WsService } from \"../services/ws.service\";\r\nimport { Capability } from \"./capabilities/capability\";\r\nimport { CapabilityType } from \"./capabilities/capability-type\";\r\nimport { DoubleValueCapability } from \"./capabilities/double-value-capability\";\r\nimport { DoubleValueType } from \"./capabilities/double-value-type\";\r\nimport { SwitchValueCapability } from \"./capabilities/switch-value-capability\";\r\nimport { SwitchValueType } from \"./capabilities/switch-value-type\";\r\nimport { Factory } from \"./factory\";\r\nimport { Material } from \"./material\";\r\nimport { MaterialType } from \"./material-type\";\r\nimport { SettingCamera } from \"./settings/setting-camera\";\r\nimport { SettingCapability } from \"./settings/setting-capability\";\r\nimport { SettingMaterial } from \"./settings/setting-material\";\r\nimport { Site } from \"./site\";\r\nimport { CapabilityState } from \"./states/capability-state\";\r\nimport { MaterialState } from \"./states/material-state\";\r\nimport { StatusState } from \"./states/status-state\";\r\nimport { Unit } from \"./unit\";\r\n\r\nexport abstract class Camera implements Material  {\r\n  \r\n \r\n  id: string;\r\n  materials: Material[];\r\n  capabilities: Capability[] = [];\r\n  displayName: string;\r\n  status: StatusState[] = [];\r\n  materialType: MaterialType;\r\n  wsService: WsService;\r\n  site: Site;\r\n  unit: Unit;\r\n  streamWidth: number;\r\n  streamHeight: number;\r\n  streamUrl: string;\r\n  constructor(settingMaterial: SettingMaterial, site: Site, unit: Unit, wsService: WsService, factory: Factory) {\r\n    this.id = settingMaterial.id;\r\n    this.materials = [];\r\n    this.site = site;\r\n    this.unit = unit;\r\n    this.wsService = wsService;\r\n    this.materialType = MaterialType.DayCamera;\r\n    this.displayName = settingMaterial.displayName;\r\n\r\n    let settingCamera: SettingCamera = <SettingCamera>settingMaterial;\r\n    this.streamWidth = settingCamera.streamWidth;\r\n    this.streamHeight = settingCamera.streamHeight;\r\n    this.streamUrl = settingCamera.streamUrl;\r\n    settingMaterial.materials.forEach((settingMaterialChild: SettingMaterial) => {\r\n      let material: Material = factory.createMaterial(settingMaterialChild, site, unit, this.wsService);\r\n      this.materials.push(material);\r\n    });\r\n    settingMaterial.capabilities.forEach((settingCapability: SettingCapability) => {\r\n      let capability: Capability = factory.createCapability(settingCapability);\r\n      capability.material = this;\r\n      this.capabilities.push(capability);\r\n    });\r\n  }\r\n  setState(state: MaterialState): void {\r\n    this.status = state.status;\r\n    state.capabilities.forEach((valueState: CapabilityState) => {\r\n      let cap: Capability | undefined = this.capabilities.find((valueCap: Capability) => { return valueCap.id === valueState.id; });\r\n      if (cap != null) {\r\n        cap.setState(valueState);\r\n      }\r\n    });\r\n    state.materials.forEach((valueState: MaterialState) => {\r\n      let mat: Material | undefined = this.materials.find((valueMat: Material) => { return valueMat.id === valueState.id; });\r\n      if (mat != null) {\r\n        mat.setState(valueState);\r\n      }\r\n    });\r\n  }\r\n  getCapability<T extends Capability>(capabilityType: CapabilityType): T | undefined {\r\n    let cap: Capability | undefined = this.capabilities.find((value: Capability) => { return value.capabilityType === capabilityType; });\r\n    return <T>cap;\r\n\r\n  }\r\n  hasCapability(capabilityType: CapabilityType): boolean {\r\n    let cap: Capability | undefined = this.capabilities.find((value: Capability) => { return value.capabilityType === capabilityType; });\r\n    return cap !== undefined;\r\n\r\n  }\r\n\r\n  getValueCapability(type: DoubleValueType): DoubleValueCapability | undefined {\r\n    return <DoubleValueCapability>this.capabilities.find((val: Capability) => {\r\n      return (val.capabilityType == CapabilityType.DoubleValue && (<DoubleValueCapability>val).doubleValueType == type);\r\n    });\r\n   \r\n  }\r\n\r\n  getSwitchCapability(type: SwitchValueType): SwitchValueCapability | undefined {\r\n    let result: SwitchValueCapability | undefined = undefined;\r\n    this.capabilities.forEach((val: Capability) => {\r\n      if (val.capabilityType === CapabilityType.SwitchValue) {\r\n        let cap: SwitchValueCapability = <SwitchValueCapability>val;\r\n        if (cap.switchValueType === type) {\r\n          result = cap;\r\n        }\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n\r\n  \r\n}\r\n\r\n","import { Material } from \"../../material\";\r\nimport { SettingCapability } from \"../../settings/setting-capability\";\r\nimport { Site } from \"../../site\";\r\nimport { CapabilityState } from \"../../states/capability-state\";\r\nimport { Unit } from \"../../unit\";\r\nimport { Capability } from \"../capability\";\r\nimport { CapabilityType } from \"../capability-type\";\r\n\r\nexport class CameraAutoFocusOnePushCapability implements Capability {\r\n \r\n  \r\n  id: string;\r\n  capabilityType: CapabilityType;\r\n  material: Material | undefined;\r\n\r\n\r\n  constructor(settingCapability: SettingCapability) {\r\n    this.id = settingCapability.id;\r\n    this.capabilityType = CapabilityType.CameraAutoFocusOnePush;\r\n  }\r\n\r\n  autoFocusOnePush() {\r\n    if (this.material == null) return;\r\n    if (this.material.unit == null) return;\r\n    this.material?.wsService.cameraAutoFocusOnePush(this.material.unit.id, this.material.id);\r\n\r\n\r\n  }\r\n \r\n\r\n  setState(valueState: CapabilityState): void {\r\n\r\n  }\r\n}\r\n","import { Material } from \"../../material\";\r\nimport { SettingCapability } from \"../../settings/setting-capability\";\r\nimport { Site } from \"../../site\";\r\nimport { CapabilityState } from \"../../states/capability-state\";\r\nimport { Unit } from \"../../unit\";\r\nimport { Capability } from \"../capability\";\r\nimport { CapabilityType } from \"../capability-type\";\r\n\r\nexport class CameraFocusContinuousCapability implements Capability {\r\n \r\n  \r\n  id: string;\r\n  capabilityType: CapabilityType;\r\n  material: Material | undefined;\r\n\r\n\r\n  constructor(settingCapability: SettingCapability) {\r\n    this.id = settingCapability.id;\r\n    this.capabilityType = CapabilityType.CameraFocusContinuous;\r\n  }\r\n\r\n  focusOutStart() {\r\n    if (this.material == null) return;\r\n    if (this.material.unit == null) return;\r\n    this.material?.wsService.cameraFocusOutStart(this.material.unit.id, this.material.id);\r\n\r\n\r\n  }\r\n  focusStop() {\r\n    if (this.material == null) return;\r\n    if (this.material.unit == null) return;\r\n    this.material?.wsService.cameraFocusStop(this.material.unit.id, this.material.id);\r\n  }\r\n focusInStart() {\r\n    if (this.material == null) return;\r\n    if (this.material.unit == null) return;\r\n   this.material?.wsService.cameraFocusInStart(this.material.unit.id, this.material.id);\r\n  }\r\n\r\n  setState(valueState: CapabilityState): void {\r\n\r\n  }\r\n}\r\n","import { Material } from \"../../material\";\r\nimport { SettingCapability } from \"../../settings/setting-capability\";\r\nimport { Site } from \"../../site\";\r\nimport { CameraZoomAbsolutePositionStep } from \"../../states/camera/camera-zoom-absolute-position-state\";\r\nimport { CapabilityState } from \"../../states/capability-state\";\r\nimport { Unit } from \"../../unit\";\r\nimport { Capability } from \"../capability\";\r\nimport { CapabilityType } from \"../capability-type\";\r\n\r\nexport class CameraZoomAbsolutePositionCapability implements Capability {\r\n \r\n  id: string;\r\n  capabilityType: CapabilityType;\r\n  material: Material | undefined;\r\n  zoomMultiplier: number = 1;\r\n  horizontalFieldOfView: number = 25;\r\n\r\n\r\n  constructor(settingCapability: SettingCapability) {\r\n    this.id = settingCapability.id;\r\n    this.capabilityType = CapabilityType.CameraZoomAbsolutePosition;\r\n  }\r\n\r\n \r\n  setState(valueState: CapabilityState): void {\r\n    let state: CameraZoomAbsolutePositionStep = <CameraZoomAbsolutePositionStep>valueState;\r\n    this.zoomMultiplier = state.zoomMultiplier;\r\n    this.horizontalFieldOfView = state.horizontalFieldOfView;\r\n  }\r\n}\r\n","import { Material } from \"../../material\";\r\nimport { SettingCapability } from \"../../settings/setting-capability\";\r\nimport { Site } from \"../../site\";\r\nimport { CapabilityState } from \"../../states/capability-state\";\r\nimport { Unit } from \"../../unit\";\r\nimport { Capability } from \"../capability\";\r\nimport { CapabilityType } from \"../capability-type\";\r\n\r\nexport class CameraZoomContinuousCapability implements Capability {\r\n \r\n  \r\n  id: string;\r\n  capabilityType: CapabilityType;\r\n  material: Material | undefined;\r\n\r\n\r\n  constructor(settingCapability: SettingCapability) {\r\n    this.id = settingCapability.id;\r\n    this.capabilityType = CapabilityType.CameraZoomContinuous;\r\n  }\r\n\r\n  zoomOutStart() {\r\n    if (this.material == null) return;\r\n    if (this.material.unit == null) return;\r\n    this.material?.wsService.cameraZoomOutStart(this.material.unit.id, this.material.id);\r\n\r\n\r\n  }\r\n  zoomStop() {\r\n    if (this.material == null) return;\r\n    if (this.material.unit == null) return;\r\n    this.material?.wsService.cameraZoomStop(this.material.unit.id, this.material.id);\r\n  }\r\n  zoomInStart() {\r\n    if (this.material == null) return;\r\n    if (this.material.unit == null) return;\r\n    this.material?.wsService.cameraZoomInStart(this.material.unit.id, this.material.id);\r\n  }\r\n\r\n  setState(valueState: CapabilityState): void {\r\n\r\n  }\r\n}\r\n","import { Material } from \"../material\";\r\nimport { SettingCapability } from \"../settings/setting-capability\";\r\nimport { SettingDoubleValueCapability } from \"../settings/setting-double-value-capability\";\r\n\r\nimport { CapabilityState } from \"../states/capability-state\";\r\nimport { DoubleValueState } from \"../states/double-value-state\";\r\nimport { Capability } from \"./capability\";\r\nimport { CapabilityType } from \"./capability-type\";\r\nimport { DoubleValueType } from \"./double-value-type\";\r\n\r\n\r\n\r\nexport class DoubleValueCapability implements Capability {\r\n  id: string;\r\n  minValue: number = 0;\r\n  maxValue: number = 0;\r\n  value: number = 0;\r\n  _editValue: number = 0;\r\n  capabilityType: CapabilityType;\r\n  doubleValueType: DoubleValueType;\r\n  material: Material | undefined;\r\n  constructor(settingCapability: SettingDoubleValueCapability) {\r\n    this.id = settingCapability.id;\r\n    this.capabilityType = CapabilityType.DoubleValue;\r\n    this.doubleValueType = settingCapability.doubleValueType;\r\n    this.value = 0;\r\n    this.minValue = settingCapability.minValue;\r\n    this.maxValue = settingCapability.maxValue;\r\n  }\r\n  get editValue() : number {\r\n    return this._editValue;\r\n  }\r\n  set editValue(val : number) {\r\n    this._editValue = val;\r\n    this.material?.wsService.doubleValueSet(this.material.unit.id, this.material.id, this.id, this._editValue);\r\n  }\r\n  beginEdit() {\r\n    this._editValue = this.value;\r\n  }\r\n  setState(valueState: CapabilityState): void {\r\n    let state: DoubleValueState = <DoubleValueState>valueState;\r\n    this.value = state.value;\r\n  }\r\n}\r\n","export enum DoubleValueType {\r\n  Luminosity = \"Luminosity\",\r\n  Contrast = \"Contrast\",\r\n  Saturation = \"Saturation\",\r\n  Quality = \"Quality\",\r\n  BlackLevel = \"BlackLevel\",\r\n  ExposureTime = \"ExposureTime\",\r\n  Gain = \"Gain\",\r\n  Gamma = \"Gamma\",\r\n  WhiteBalance = \"WhiteBalance\"\r\n}\r\n","import { Material } from \"../../material\";\r\nimport { SettingCapability } from \"../../settings/setting-capability\";\r\nimport { Site } from \"../../site\";\r\nimport { CapabilityState } from \"../../states/capability-state\";\r\nimport { InertialMeasurementMeasureState } from \"../../states/inertial-measurement/inertial-measurement-measure-state\";\r\nimport { LazerMeasurementShootState } from \"../../states/lazer-measurement/lazer-measurement-shoot-state\";\r\nimport { Unit } from \"../../unit\";\r\nimport { Capability } from \"../capability\";\r\nimport { CapabilityType } from \"../capability-type\";\r\n\r\nexport class InertialMeasurementMeasureCapability implements Capability {\r\n \r\n  id: string;\r\n  capabilityType: CapabilityType;\r\n  material: Material | undefined;\r\n  angleX: number = 0;\r\n  angleY: number = 0;\r\n  angleZ: number = 0;\r\n\r\n  constructor(settingCapability: SettingCapability) {\r\n    this.id = settingCapability.id;\r\n    this.capabilityType = CapabilityType.InertialMeasurementMeasure;\r\n  }\r\n  setState(valueState: CapabilityState): void {\r\n    let state: InertialMeasurementMeasureState = <InertialMeasurementMeasureState>valueState;\r\n    this.angleX = state.angleX;\r\n    this.angleY = state.angleY;\r\n    this.angleZ = state.angleZ;\r\n   \r\n   \r\n  }\r\n\r\n  \r\n}\r\n","import { Material } from \"../../material\";\r\nimport { SettingCapability } from \"../../settings/setting-capability\";\r\nimport { Site } from \"../../site\";\r\nimport { CapabilityState } from \"../../states/capability-state\";\r\nimport { LazerMeasurementShootState } from \"../../states/lazer-measurement/lazer-measurement-shoot-state\";\r\nimport { Unit } from \"../../unit\";\r\nimport { Capability } from \"../capability\";\r\nimport { CapabilityType } from \"../capability-type\";\r\n\r\nexport class LazerMeasurementShootCapability implements Capability {\r\n \r\n  id: string;\r\n  capabilityType: CapabilityType;\r\n  material: Material | undefined;\r\n  error: string | undefined;\r\n  lastShootDistance: number | undefined;\r\n  lastShootDate: Date | undefined;\r\n  isOn: boolean = false;\r\n\r\n  constructor(settingCapability: SettingCapability) {\r\n    this.id = settingCapability.id;\r\n    this.capabilityType = CapabilityType.LazerMeasurementShootCapability;\r\n  }\r\n  setState(valueState: CapabilityState): void {\r\n    let state: LazerMeasurementShootState = <LazerMeasurementShootState>valueState;\r\n    this.isOn = state.isOn;\r\n    this.error = state.error;\r\n    this.lastShootDistance = state.lastShootDistance;\r\n    if (state.lastShootDate == null) {\r\n      this.lastShootDate = undefined;\r\n    } else {\r\n      this.lastShootDate = new Date(state.lastShootDate?.toString());\r\n    }\r\n   \r\n  }\r\n\r\n  shootMeasure() {\r\n    if (this.material == null) return;\r\n    if (this.material.unit == null) return;\r\n    this.material?.wsService.lazerMeasurementShoot(this.material.unit.id, this.material.id);\r\n  }\r\n}\r\n","import { SwitchValue } from \"../../models/switch-value\";\r\nimport { Material } from \"../material\";\r\nimport { SettingCapability } from \"../settings/setting-capability\";\r\nimport { SettingDoubleValueCapability } from \"../settings/setting-double-value-capability\";\r\nimport { SettingSwitchValueCapability } from \"../settings/setting-switch-value-capability\";\r\n\r\nimport { CapabilityState } from \"../states/capability-state\";\r\nimport { DoubleValueState } from \"../states/double-value-state\";\r\nimport { SwitchValueState } from \"../states/switch-value-state\";\r\nimport { Capability } from \"./capability\";\r\nimport { CapabilityType } from \"./capability-type\";\r\nimport { DoubleValueType } from \"./double-value-type\";\r\nimport { SwitchValueType } from \"./switch-value-type\";\r\n\r\n\r\n\r\nexport class SwitchValueCapability implements Capability {\r\n  id: string;\r\n  values: SwitchValue[];\r\n  value: SwitchValue;\r\n  _editValue: SwitchValue;\r\n  capabilityType: CapabilityType;\r\n  switchValueType: SwitchValueType;\r\n  material: Material | undefined;\r\n  constructor(settingCapability: SettingSwitchValueCapability) {\r\n    this.id = settingCapability.id;\r\n    this.capabilityType = CapabilityType.SwitchValue;\r\n    this.switchValueType = settingCapability.switchValueType;\r\n    this.values = settingCapability.values;\r\n    this.value = this.values[0];\r\n    this._editValue = this.values[0];\r\n   \r\n  \r\n  }\r\n  get editValue(): SwitchValue {\r\n    return this._editValue;\r\n  }\r\n  set editValue(val: SwitchValue) {\r\n    this._editValue = val;\r\n    this.material?.wsService.switchValueSet(this.material.unit.id, this.material.id, this.id, this._editValue);\r\n  }\r\n  beginEdit() {\r\n    this._editValue = this.value;\r\n  }\r\n  setState(valueState: CapabilityState): void {\r\n    let state: SwitchValueState = <SwitchValueState>valueState;\r\n    let value: SwitchValue | undefined = this.values.find((val: SwitchValue) => {\r\n      return val.value != null && state.value != null && state.value.value != null &&  val.value === state.value.value;\r\n    });    \r\n    if (value != null) {\r\n      this.value = value;\r\n    }\r\n    else {\r\n   //  console.log(\"null value for set state of capability \" + this.capabilityType + \" \" + this.switchValueType);\r\n    }\r\n \r\n  }\r\n}\r\n","export enum SwitchValueType {\r\n  ExposureTimeMode = \"ExposureTimeMode\",\r\n  GainMode = \"GainMode\",\r\n  WhiteBalanceMode = \"WhiteBalanceMode\",\r\n  PolarityMode = \"PolarityMode\",\r\n  MeteoWeather =\"MeteoWeather\",\r\n  MeteoTime = \"MeteoTime\",\r\n  MeteoLocation = \"MeteoLocation\",\r\n  ShutterMode = \"ShutterMode\",\r\n  ReticuleMode = \"ReticuleMode\",\r\n  ColorMode = \"ColorMode\"\r\n\r\n\r\n}\r\n","import { Material } from \"../../material\";\r\nimport { SettingCapability } from \"../../settings/setting-capability\";\r\nimport { Site } from \"../../site\";\r\nimport { CapabilityState } from \"../../states/capability-state\";\r\nimport { TurretAbsolutePositionState } from \"../../states/turret/turret-absolute-position-state\";\r\nimport { Unit } from \"../../unit\";\r\nimport { Capability } from \"../capability\";\r\nimport { CapabilityType } from \"../capability-type\";\r\n\r\nexport class TurretAbsolutePositionCapability implements Capability {\r\n  id: string;\r\n  capabilityType: CapabilityType;\r\n  material: Material | undefined;\r\n  pan: number = 0;\r\n  tilt: number = 0;\r\n  constructor(settingCapability: SettingCapability) {\r\n    this.id = settingCapability.id;\r\n    this.capabilityType = CapabilityType.TurretAbsolutePosition;\r\n  }\r\n  setState(valueState: CapabilityState): void {\r\n    if (valueState.$type === 'TurretAbsolutePositionState') {\r\n      let turretAbsolutePositionState: TurretAbsolutePositionState = <TurretAbsolutePositionState>valueState;\r\n      this.pan = turretAbsolutePositionState.pan;\r\n      this.tilt = turretAbsolutePositionState.tilt;     \r\n    }\r\n  }\r\n\r\n}\r\n","import { Material } from \"../../material\";\r\nimport { SettingCapability } from \"../../settings/setting-capability\";\r\nimport { CapabilityState } from \"../../states/capability-state\";\r\nimport { TurretGyrostabilizationState } from \"../../states/turret/turret-gyrostabilization-state\";\r\nimport { Capability } from \"../capability\";\r\nimport { CapabilityType } from \"../capability-type\";\r\nexport class TurretGyrostabilizationCapability implements Capability {\r\n \r\n  id: string;\r\n  capabilityType: CapabilityType;\r\n  material: Material | undefined;\r\n  isGyrostabilizationEnabled: boolean = false;\r\n \r\n  constructor(settingCapability: SettingCapability) {\r\n    this.id = settingCapability.id;\r\n    this.capabilityType = CapabilityType.TurretGyrostabilization;\r\n  }\r\n  setState(valueState: CapabilityState): void {\r\n    let state: TurretGyrostabilizationState = <TurretGyrostabilizationState>valueState;\r\n    this.isGyrostabilizationEnabled = state.isEnabled;\r\n  }\r\n\r\n  setGyrostabilization(enabled: boolean) {\r\n    if (this.material == null) return;\r\n    if (this.material.unit == null) return;\r\n   \r\n    this.material?.wsService.turretGyrostabilization(this.material.unit.id, this.material.id, enabled);\r\n  }\r\n\r\n}\r\n","import { Material } from \"../../material\";\r\nimport { SettingCapability } from \"../../settings/setting-capability\";\r\nimport { Site } from \"../../site\";\r\nimport { CapabilityState } from \"../../states/capability-state\";\r\nimport { TurretAbsolutePositionState } from \"../../states/turret/turret-absolute-position-state\";\r\nimport { Unit } from \"../../unit\";\r\nimport { Capability } from \"../capability\";\r\nimport { CapabilityType } from \"../capability-type\";\r\n\r\nexport class TurretMoveAbsoluteCapability implements Capability {\r\n \r\n  id: string;\r\n  capabilityType: CapabilityType;\r\n  material: Material | undefined;\r\n \r\n  constructor(settingCapability: SettingCapability) {\r\n    this.id = settingCapability.id;\r\n    this.capabilityType = CapabilityType.TurretMoveAbsolute;\r\n  }\r\n  setState(valueState: CapabilityState): void {\r\n  \r\n  }\r\n\r\n  move(pan: number, tilt: number) {\r\n    if (this.material == null) return;\r\n    if (this.material.unit == null) return;\r\n    console.log(\"Call wsService.turretMoveAbsolute \" + pan + \" \" + tilt);\r\n    this.material?.wsService.turretMoveAbsolute(this.material.unit.id, this.material.id, pan, tilt);\r\n  }\r\n\r\n}\r\n","import { Material } from \"../../material\";\r\nimport { SettingCapability } from \"../../settings/setting-capability\";\r\nimport { Site } from \"../../site\";\r\nimport { CapabilityState } from \"../../states/capability-state\";\r\nimport { Unit } from \"../../unit\";\r\nimport { Capability } from \"../capability\";\r\nimport { CapabilityType } from \"../capability-type\";\r\n\r\nexport class TurretMoveSpeedCapability implements Capability {\r\n \r\n  id: string;\r\n  capabilityType: CapabilityType;\r\n  material: Material | undefined;\r\n\r\n\r\n  constructor(settingCapability: SettingCapability) {\r\n    this.id = settingCapability.id;\r\n    this.capabilityType = CapabilityType.TurretMoveSpeed;\r\n  }\r\n\r\n  moveSpeed(axisX: number, axisY: number) {\r\n    if (this.material == null) return;\r\n    if (this.material.unit == null) return;\r\n    console.log(\"Call wsService.turretMoveSpeed \" + axisX + \" \" + axisY);\r\n    this.material?.wsService.turretMoveSpeed(this.material.unit.id, this.material.id, axisX, axisY);\r\n    \r\n  }\r\n  setState(valueState: CapabilityState): void {\r\n\r\n  }\r\n}\r\n","import { Material } from \"../../material\";\r\nimport { SettingCapability } from \"../../settings/setting-capability\";\r\nimport { Site } from \"../../site\";\r\nimport { CapabilityState } from \"../../states/capability-state\";\r\nimport { Unit } from \"../../unit\";\r\nimport { Capability } from \"../capability\";\r\nimport { CapabilityType } from \"../capability-type\";\r\n\r\nexport class UnitRebootCapability implements Capability {\r\n  id: string;\r\n  capabilityType: CapabilityType;\r\n  material: Material | undefined;\r\n  constructor(settingCapability: SettingCapability) {\r\n    this.id = settingCapability.id;\r\n    this.capabilityType = CapabilityType.UnitReboot;\r\n  }\r\n  setState(valueState: CapabilityState): void {\r\n\r\n  }\r\n}\r\n","import { Material } from \"../../material\";\r\nimport { SettingCapability } from \"../../settings/setting-capability\";\r\nimport { Site } from \"../../site\";\r\nimport { CapabilityState } from \"../../states/capability-state\";\r\nimport { Unit } from \"../../unit\";\r\nimport { Capability } from \"../capability\";\r\nimport { CapabilityType } from \"../capability-type\";\r\n\r\nexport class UnitSavCapability implements Capability {\r\n  id: string;\r\n  capabilityType: CapabilityType;\r\n  material: Material | undefined;\r\n  constructor(settingCapability: SettingCapability) {\r\n    this.id = settingCapability.id;\r\n    this.capabilityType = CapabilityType.UnitSav;\r\n  }\r\n  setState(valueState: CapabilityState): void {\r\n\r\n  }\r\n  getLatestComMessage() {\r\n    this.material?.unit.wsService.getLastComMessage(this.material?.unit.id);\r\n  }\r\n  executeCommand(command: string) {\r\n    this.material?.unit.wsService.executeCommand(this.material?.unit.id,command);\r\n  }\r\n  setPollingState(isPollingEnabled: boolean) {\r\n    this.material?.unit.wsService.setPollingState(this.material?.unit.id,isPollingEnabled);\r\n  }\r\n}\r\n","import { WsService } from \"../services/ws.service\";\r\nimport { Camera } from \"./camera\";\r\nimport { Capability } from \"./capabilities/capability\";\r\nimport { Factory } from \"./factory\";\r\nimport { Material } from \"./material\";\r\nimport { MaterialType } from \"./material-type\";\r\nimport { SettingCapability } from \"./settings/setting-capability\";\r\nimport { SettingMaterial } from \"./settings/setting-material\";\r\nimport { Site } from \"./site\";\r\nimport { CapabilityState } from \"./states/capability-state\";\r\nimport { MaterialState } from \"./states/material-state\";\r\nimport { Unit } from \"./unit\";\r\n\r\nexport class DayCamera extends Camera  {\r\n \r\n  \r\n\r\n  \r\n}\r\n\r\n","import { SettingMaterial } from \"./settings/setting-material\";\r\nimport { Material } from \"./material\";\r\nimport { MaterialType } from \"./material-type\";\r\nimport { DayCamera } from \"./day-camera\";\r\nimport { ThermalCamera } from \"./thermal-camera\";\r\nimport { InertialMeasurement } from \"./inertial-measurement\";\r\nimport { LazerMeasurement } from \"./lazer-measurement\";\r\nimport { Unit } from \"./unit\";\r\nimport { Turret } from \"./turret\";\r\nimport { SettingCapability } from \"./settings/setting-capability\";\r\nimport { Capability } from \"./capabilities/capability\";\r\nimport { CapabilityType } from \"./capabilities/capability-type\";\r\nimport { TurretMoveSpeedCapability } from \"./capabilities/turret/turret-move-speed-capability\";\r\nimport { UnitRebootCapability } from \"./capabilities/unit/unit-reboot-capability\";\r\nimport { TurretMoveAbsoluteCapability } from \"./capabilities/turret/turret-move-absolute-capability\";\r\nimport { WsService } from \"../services/ws.service\";\r\nimport { Site } from \"./site\";\r\nimport { WsResponse } from \"../api/ws/ws-response\";\r\nimport { WsGetStateResponse } from \"../api/ws/ws-get-state-response\";\r\nimport { CapabilityState } from \"./states/capability-state\";\r\nimport { UnitState } from \"./states/unit-state\";\r\nimport { MaterialState } from \"./states/material-state\";\r\nimport { TurretAbsolutePositionState } from \"./states/turret/turret-absolute-position-state\";\r\nimport { TurretAbsolutePositionCapability } from \"./capabilities/turret/turret-absolute-position-capability\";\r\nimport { CameraZoomAbsolutePositionCapability } from \"./capabilities/camera/camera-zoom-absolute-position-capability\";\r\nimport { CameraZoomContinuousCapability } from \"./capabilities/camera/camera-zoom-continuous-capability\";\r\nimport { TurretGyrostabilizationCapability } from \"./capabilities/turret/turret-gyrostabilization-capability\";\r\nimport { CameraAutoFocusOnePushCapability } from \"./capabilities/camera/camera-auto-focus-one-push-capability\";\r\nimport { LazerMeasurementShootCapability } from \"./capabilities/lazer-measurement/lazer-measurement-shoot-capability\";\r\nimport { SettingDoubleValueCapability } from \"./settings/setting-double-value-capability\";\r\nimport { DoubleValueCapability } from \"./capabilities/double-value-capability\";\r\nimport { SwitchValueCapability } from \"./capabilities/switch-value-capability\";\r\nimport { SettingSwitchValueCapability } from \"./settings/setting-switch-value-capability\";\r\nimport { WsValidResponse } from \"../api/ws/ws-valid-response\";\r\nimport { WsErrorResponse } from \"../api/ws/ws-error-response\";\r\nimport { SwitchValueType } from \"./capabilities/switch-value-type\";\r\nimport { WsGetMediaListResponse } from \"../api/ws/ws-get-media-list-response\";\r\nimport { WsCameraScreenshotResponse } from \"../api/ws/ws-camera-screeneshot-response\";\r\nimport { WsCameraStartRecordResponse } from \"../api/ws/ws-camera-start-record-response\";\r\nimport { InertialMeasurementMeasureCapability } from \"./capabilities/inertial-measurement/inertial-measurement-measure-capability\";\r\nimport { UnitSavCapability } from \"./capabilities/unit/unit-sav-capability\";\r\nimport { WsUnitGetLastComMessageResponse } from \"../api/ws/ws-unit-get-last-com-message-response\";\r\nimport { CameraFocusContinuousCapability } from \"./capabilities/camera/camera-focus-continuous-capability\";\r\nexport class Factory {\r\n\r\n  createMessage(data: any): WsResponse {\r\n    let typeName: string = data.$type;\r\n    switch (typeName) {\r\n      case 'WsGetStateResponse':\r\n        let response: WsGetStateResponse = <WsGetStateResponse>data;        \r\n        response.site.capabilities = response.site.capabilities.map((value: CapabilityState) => { return this.mapCapabilityState(value); });\r\n        response.site.units = response.site.units.map((value: UnitState) => { return this.mapUnitState(value); });\r\n        response.site.units.forEach((unitState: UnitState) => {\r\n          unitState.capabilities = unitState.capabilities.map((value: CapabilityState) => { return this.mapCapabilityState(value); });\r\n          unitState.materials = unitState.materials.map((value: MaterialState) => { return this.mapMaterialState(value); });\r\n          unitState.materials.forEach((valueMat: MaterialState) => {\r\n            this.recurseCreateMaterialState(valueMat);\r\n          });\r\n        });\r\n        return response;\r\n      case \"WsValidResponse\":\r\n        let validResponse: WsValidResponse = <WsValidResponse>data;\r\n        return validResponse;\r\n        break;\r\n\r\n      case \"WsErrorResponse\":\r\n        let errorResponse: WsErrorResponse = <WsErrorResponse>data;\r\n        return errorResponse;\r\n        break;\r\n\r\n      case \"WsGetMediaListResponse\":\r\n        let getMediaListResponse: WsGetMediaListResponse = <WsGetMediaListResponse>data;\r\n        return getMediaListResponse;\r\n        break;\r\n\r\n      case \"WsCameraScreenshotResponse\":\r\n        let cameraScreenshotResponse: WsCameraScreenshotResponse = <WsCameraScreenshotResponse>data;\r\n        return cameraScreenshotResponse;\r\n        break;\r\n\r\n\r\n      case \"WsCameraStartRecordResponse\":\r\n        let cameraStartRecordResponse: WsCameraStartRecordResponse = <WsCameraStartRecordResponse>data;\r\n        return cameraStartRecordResponse;\r\n        break;\r\n\r\n      case \"WsUnitGetLastComMessageResponse\":\r\n        let unitGetLastComMessageResponse: WsUnitGetLastComMessageResponse = <WsUnitGetLastComMessageResponse>data;\r\n        return unitGetLastComMessageResponse;\r\n        break;\r\n\r\n        \r\n      default:\r\n        console.error(\"No creation implemtation in facotry for type \" + typeName);\r\n        throw \"No creation implemtation in facotry for type \" + typeName;\r\n    }\r\n  }\r\n  mapMaterialState(value: MaterialState): MaterialState {\r\n    return value;\r\n  }\r\n  mapUnitState(value: UnitState): UnitState {\r\n    return value;\r\n  }\r\n  mapCapabilityState(value: CapabilityState): CapabilityState {\r\n    if (value.$type === 'TurretAbsolutePositionState') {\r\n      let state: TurretAbsolutePositionState = <TurretAbsolutePositionState>value;\r\n      return state;\r\n    }\r\n    return value;\r\n  }\r\n  recurseCreateMaterialState(materailState: MaterialState) {\r\n    materailState.materials = materailState.materials.map((childMaterialState: MaterialState) => { return childMaterialState; });\r\n    materailState.capabilities = materailState.capabilities.map((value: CapabilityState) => { return this.mapCapabilityState(value); });\r\n    materailState.materials.forEach((childMaterialState: MaterialState) => { this.recurseCreateMaterialState(childMaterialState); });\r\n  }\r\n  createCapability(settingCapability: SettingCapability): Capability {\r\n    let capability: Capability | null = null;\r\n    switch (settingCapability.capabilityType) {\r\n      case CapabilityType.TurretMoveSpeed:\r\n        capability = new TurretMoveSpeedCapability(settingCapability);\r\n        break;\r\n      case CapabilityType.TurretMoveAbsolute:\r\n        capability = new TurretMoveAbsoluteCapability(settingCapability);\r\n        break;\r\n      case CapabilityType.UnitReboot:\r\n        capability = new UnitRebootCapability(settingCapability);\r\n        break;\r\n\r\n      case CapabilityType.TurretAbsolutePosition:\r\n        capability = new TurretAbsolutePositionCapability(settingCapability);\r\n        break;\r\n      case CapabilityType.CameraZoomAbsolutePosition:\r\n        capability = new CameraZoomAbsolutePositionCapability(settingCapability);\r\n        break;\r\n      case CapabilityType.CameraZoomContinuous:\r\n        capability = new CameraZoomContinuousCapability(settingCapability);\r\n        break;\r\n      case CapabilityType.TurretGyrostabilization:\r\n        capability = new TurretGyrostabilizationCapability(settingCapability);\r\n        break;\r\n\r\n      case CapabilityType.CameraAutoFocusOnePush:\r\n        capability = new CameraAutoFocusOnePushCapability(settingCapability);\r\n        break;\r\n      case CapabilityType.LazerMeasurementShootCapability:\r\n        capability = new LazerMeasurementShootCapability(settingCapability);\r\n        break;\r\n     \r\n      case CapabilityType.DoubleValue:\r\n        capability = new DoubleValueCapability(<SettingDoubleValueCapability>settingCapability);\r\n        break;\r\n      case CapabilityType.SwitchValue:\r\n        let settingSwitchValueCapability: SettingSwitchValueCapability = <SettingSwitchValueCapability>settingCapability;\r\n        capability = new SwitchValueCapability(settingSwitchValueCapability);\r\n        break;\r\n      case CapabilityType.InertialMeasurementMeasure:       \r\n        capability = new InertialMeasurementMeasureCapability(settingCapability);\r\n        break;\r\n      case CapabilityType.UnitSav:\r\n        capability = new UnitSavCapability(settingCapability);\r\n        break;\r\n      case CapabilityType.CameraFocusContinuous:\r\n        capability = new CameraFocusContinuousCapability(settingCapability);\r\n        break;\r\n    }\r\n    if (capability == null) {\r\n      console.error('Capability ' + settingCapability.capabilityType + ' not implemented !!!');\r\n      throw 'Capability ' + settingCapability.capabilityType + ' not implemented !!!';\r\n\r\n    }\r\n    return capability;\r\n  }\r\n\r\n  public createMaterial(settingMaterial: SettingMaterial, site: Site, unit: Unit, wsService: WsService): Material {\r\n    let material: Material | null = null;\r\n\r\n    switch (settingMaterial.materialType) {\r\n      case MaterialType.DayCamera:\r\n        material = new DayCamera(settingMaterial, site, unit, wsService, this);\r\n        break;\r\n      case MaterialType.ThermalCamera:\r\n        material = new ThermalCamera(settingMaterial, site, unit, wsService, this);\r\n        break;\r\n      case MaterialType.InertialMeasurement:\r\n        material = new InertialMeasurement(settingMaterial, site, unit, wsService, this);\r\n        break;\r\n      case MaterialType.LazerMeasurement:\r\n        material = new LazerMeasurement(settingMaterial, site, unit, wsService, this);\r\n        break;\r\n      case MaterialType.Unit:\r\n        material = new Unit(settingMaterial, site, wsService,this);\r\n        break;\r\n      case MaterialType.Turret:\r\n        material = new Turret(settingMaterial, site, unit, wsService, this);\r\n        break;\r\n    }\r\n\r\n    if (material == null) throw 'Material ' + settingMaterial.materialType + ' not implemented !!!';\r\n    return material;\r\n  }\r\n}\r\n","import { WsService } from \"../services/ws.service\";\r\nimport { Capability } from \"./capabilities/capability\";\r\nimport { CapabilityType } from \"./capabilities/capability-type\";\r\nimport { Factory } from \"./factory\";\r\nimport { Material } from \"./material\";\r\nimport { MaterialType } from \"./material-type\";\r\nimport { SettingCapability } from \"./settings/setting-capability\";\r\nimport { SettingMaterial } from \"./settings/setting-material\";\r\nimport { Site } from \"./site\";\r\nimport { CapabilityState } from \"./states/capability-state\";\r\nimport { MaterialState } from \"./states/material-state\";\r\nimport { StatusState } from \"./states/status-state\";\r\nimport { Unit } from \"./unit\";\r\n\r\nexport class InertialMeasurement implements Material {\r\n  id: string;\r\n  materials: Material[];\r\n  capabilities: Capability[] = [];\r\n  displayName: string;\r\n  materialType: MaterialType;\r\n  status: StatusState[] = [];\r\n  wsService: WsService;\r\n  site: Site;\r\n  unit: Unit;\r\n  constructor(settingMaterial: SettingMaterial, site: Site, unit: Unit, wsService: WsService, factory: Factory) {\r\n    this.id = settingMaterial.id;\r\n    this.materials = [];\r\n    this.wsService = wsService;\r\n    this.site = site;\r\n    this.unit = unit;\r\n    this.materialType = MaterialType.InertialMeasurement;\r\n    this.displayName = settingMaterial.displayName;\r\n      settingMaterial.materials.forEach((settingMaterialChild: SettingMaterial) => {\r\n      let material: Material = factory.createMaterial(settingMaterialChild, site, unit, this.wsService);\r\n      this.materials.push(material);\r\n    });\r\n    settingMaterial.capabilities.forEach((settingCapability: SettingCapability) => {\r\n      let capability: Capability = factory.createCapability(settingCapability);\r\n      capability.material = this;\r\n      this.capabilities.push(capability);\r\n    });\r\n  }\r\n  getCapability<T extends Capability>(capabilityType: CapabilityType): T | undefined {\r\n    let cap: Capability | undefined = this.capabilities.find((value: Capability) => { return value.capabilityType === capabilityType; });\r\n    return <T>cap;\r\n\r\n  }\r\n  setState(state: MaterialState): void {\r\n    this.status = state.status;\r\n    state.capabilities.forEach((valueState: CapabilityState) => {\r\n      let cap: Capability | undefined = this.capabilities.find((valueCap: Capability) => { return valueCap.id === valueState.id; });\r\n      if (cap != null) {\r\n        cap.setState(valueState);\r\n      }\r\n    });\r\n    state.materials.forEach((valueState: MaterialState) => {\r\n      let mat: Material | undefined = this.materials.find((valueMat: Material) => { return valueMat.id === valueState.id; });\r\n      if (mat != null) {\r\n        mat.setState(valueState);\r\n      }\r\n    });\r\n  }\r\n  hasCapability(capabilityType: CapabilityType): boolean {\r\n    let cap: Capability | undefined = this.capabilities.find((value: Capability) => { return value.capabilityType === capabilityType; });\r\n    return cap !== undefined;\r\n\r\n  }\r\n  \r\n}\r\n\r\n","import { WsService } from \"../services/ws.service\";\r\nimport { Capability } from \"./capabilities/capability\";\r\nimport { CapabilityType } from \"./capabilities/capability-type\";\r\nimport { Factory } from \"./factory\";\r\nimport { Material } from \"./material\";\r\nimport { MaterialType } from \"./material-type\";\r\nimport { SettingCapability } from \"./settings/setting-capability\";\r\nimport { SettingMaterial } from \"./settings/setting-material\";\r\nimport { Site } from \"./site\";\r\nimport { CapabilityState } from \"./states/capability-state\";\r\nimport { MaterialState } from \"./states/material-state\";\r\nimport { StatusState } from \"./states/status-state\";\r\nimport { Unit } from \"./unit\";\r\n\r\nexport class LazerMeasurement implements Material {\r\n  id: string;\r\n  materials: Material[];\r\n  capabilities: Capability[] = [];\r\n  displayName: string;\r\n  status: StatusState[] = [];\r\n  materialType: MaterialType;\r\n  wsService: WsService;\r\n  site: Site;\r\n  unit: Unit;\r\n  constructor(settingMaterial: SettingMaterial, site: Site, unit: Unit, wsService: WsService, factory: Factory) {\r\n    this.id = settingMaterial.id;\r\n    this.materials = [];\r\n    this.wsService = wsService;\r\n    this.site = site;\r\n    this.unit = unit;\r\n    this.materialType = MaterialType.LazerMeasurement;\r\n    this.displayName = settingMaterial.displayName;   \r\n    settingMaterial.materials.forEach((settingMaterialChild: SettingMaterial) => {\r\n      let material: Material = factory.createMaterial(settingMaterialChild, site, unit, this.wsService);\r\n      this.materials.push(material);\r\n    });\r\n    settingMaterial.capabilities.forEach((settingCapability: SettingCapability) => {\r\n      let capability: Capability = factory.createCapability(settingCapability);\r\n      capability.material = this;\r\n      this.capabilities.push(capability);\r\n    });\r\n  }\r\n  getCapability<T extends Capability>(capabilityType: CapabilityType): T | undefined {\r\n    let cap: Capability | undefined = this.capabilities.find((value: Capability) => { return value.capabilityType === capabilityType; });\r\n    return <T>cap;\r\n\r\n  }\r\n  setState(state: MaterialState): void {\r\n    this.status = state.status;\r\n    state.capabilities.forEach((valueState: CapabilityState) => {\r\n      let cap: Capability | undefined = this.capabilities.find((valueCap: Capability) => { return valueCap.id === valueState.id; });\r\n      if (cap != null) {\r\n        cap.setState(valueState);\r\n      }\r\n    });\r\n    state.materials.forEach((valueState: MaterialState) => {\r\n      let mat: Material | undefined = this.materials.find((valueMat: Material) => { return valueMat.id === valueState.id; });\r\n      if (mat != null) {\r\n        mat.setState(valueState);\r\n      }\r\n    });\r\n  }\r\n  hasCapability(capabilityType: CapabilityType): boolean {\r\n    let cap: Capability | undefined = this.capabilities.find((value: Capability) => { return value.capabilityType === capabilityType; });\r\n    return cap !== undefined;\r\n\r\n  }\r\n  \r\n}\r\n\r\n","import { WsService } from \"../services/ws.service\";\r\nimport { Capability } from \"./capabilities/capability\";\r\nimport { Factory } from \"./factory\";\r\nimport { SettingCapability } from \"./settings/setting-capability\";\r\nimport { SettingSite } from \"./settings/setting-site\";\r\nimport { SettingUnit } from \"./settings/setting-unit\";\r\nimport { CapabilityState } from \"./states/capability-state\";\r\nimport { RecordingState } from \"./states/recording-state\";\r\nimport { SiteState } from \"./states/site-state\";\r\nimport { UnitState } from \"./states/unit-state\";\r\nimport { Unit } from \"./unit\";\r\n\r\n\r\nexport class Site {\r\n  \r\n  public id: string;\r\n  public units: Unit[] = [];\r\n  public capabilities: Capability[] = [];\r\n  public recordings: RecordingState[] = [];\r\n  constructor(settingSite: SettingSite, wsService: WsService, factory: Factory ) {\r\n   \r\n    this.id = settingSite.id;\r\n  \r\n    settingSite.units.forEach((settingUnit: SettingUnit) => {\r\n      let unit: Unit = new Unit(settingUnit, this, wsService, factory);\r\n      this.units.push(unit);\r\n    });\r\n\r\n    settingSite.capabilities.forEach((settingCapability: SettingCapability) => {\r\n      let capability: Capability = factory.createCapability(settingCapability);     \r\n      this.capabilities.push(capability);\r\n    });\r\n\r\n  }\r\n\r\n  setState(siteState: SiteState) {\r\n    this.recordings = siteState.recordings;\r\n    siteState.units.forEach((valueState: UnitState) => {\r\n      let unit: Unit | undefined = this.units.find((valueUnit: Unit) => { return valueUnit.id === valueState.id; });\r\n      if (unit != null) {\r\n        unit.setState(valueState);\r\n      }\r\n    });\r\n    siteState.capabilities.forEach((valueState: CapabilityState) => {\r\n      let cap: Capability | undefined = this.capabilities.find((valueCap: Capability) => { return valueCap.id === valueState.id; });\r\n      if (cap != null) {\r\n        cap.setState(valueState);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n","export enum Status {\r\n  Ok = \"Ok\",\r\n  Warning = \"Warning\",\r\n  Error=\"Error\"\r\n}\r\n\r\nexport interface StatusState {\r\n  status: Status;\r\n  message: string;\r\n\r\n}\r\n","import { WsService } from \"../services/ws.service\";\r\nimport { Camera } from \"./camera\";\r\nimport { Capability } from \"./capabilities/capability\";\r\nimport { Factory } from \"./factory\";\r\nimport { Material } from \"./material\";\r\nimport { MaterialType } from \"./material-type\";\r\nimport { SettingCapability } from \"./settings/setting-capability\";\r\nimport { SettingMaterial } from \"./settings/setting-material\";\r\nimport { Site } from \"./site\";\r\nimport { CapabilityState } from \"./states/capability-state\";\r\nimport { MaterialState } from \"./states/material-state\";\r\nimport { Unit } from \"./unit\";\r\n\r\nexport class ThermalCamera extends Camera {\r\n  \r\n\r\n  \r\n}\r\n\r\n","import { WsService } from \"../services/ws.service\";\r\nimport { Capability } from \"./capabilities/capability\";\r\nimport { CapabilityType } from \"./capabilities/capability-type\";\r\nimport { Factory } from \"./factory\";\r\nimport { Material } from \"./material\";\r\nimport { MaterialType } from \"./material-type\";\r\nimport { SettingCapability } from \"./settings/setting-capability\";\r\nimport { SettingMaterial } from \"./settings/setting-material\";\r\nimport { Site } from \"./site\";\r\nimport { CapabilityState } from \"./states/capability-state\";\r\nimport { MaterialState } from \"./states/material-state\";\r\nimport { StatusState } from \"./states/status-state\";\r\nimport { UnitState } from \"./states/unit-state\";\r\nimport { Unit } from \"./unit\";\r\n\r\nexport class Turret implements Material {\r\n\r\n  id: string;\r\n  materials: Material[];\r\n  capabilities: Capability[] = [];\r\n  status: StatusState[] = [];\r\n  displayName: string;\r\n  materialType: MaterialType;\r\n  wsService: WsService;\r\n  site: Site;\r\n  unit: Unit;\r\n  constructor(settingMaterial: SettingMaterial, site: Site, unit: Unit, wsService: WsService, factory: Factory) {\r\n    this.id = settingMaterial.id;\r\n    this.materials = [];\r\n    this.site = site;\r\n    this.unit = unit;\r\n    this.materialType = MaterialType.Turret;\r\n    this.wsService = wsService;\r\n    this.displayName = settingMaterial.displayName;\r\n   \r\n    settingMaterial.materials.forEach((settingMaterialChild: SettingMaterial) => {\r\n      let material: Material = factory.createMaterial(settingMaterialChild, site, unit, this.wsService);\r\n      this.materials.push(material);\r\n    });\r\n    settingMaterial.capabilities.forEach((settingCapability: SettingCapability) => {\r\n      let capability: Capability = factory.createCapability(settingCapability);\r\n      capability.material = this;\r\n      this.capabilities.push(capability);\r\n    });\r\n  }\r\n  hasCapability(capabilityType: CapabilityType): boolean {\r\n    let cap: Capability | undefined = this.capabilities.find((value: Capability) => { return value.capabilityType === capabilityType; });\r\n    return cap !== undefined;\r\n\r\n  }\r\n  getCapability<T extends Capability>(capabilityType: CapabilityType): T | undefined {\r\n    let cap: Capability | undefined = this.capabilities.find((value: Capability) => { return value.capabilityType === capabilityType; });\r\n    return <T>cap;\r\n\r\n  }\r\n  setState(state: MaterialState): void {\r\n    this.status = state.status;\r\n    state.capabilities.forEach((valueState: CapabilityState) => {\r\n      let cap: Capability | undefined = this.capabilities.find((valueCap: Capability) => { return valueCap.id === valueState.id; });\r\n      if (cap != null) {\r\n        cap.setState(valueState);\r\n      }\r\n    });\r\n    state.materials.forEach((valueState: MaterialState) => {\r\n      let mat: Material | undefined = this.materials.find((valueMat: Material) => { return valueMat.id === valueState.id; });\r\n      if (mat != null) {\r\n        mat.setState(valueState);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\r\n","import { MatError } from \"@angular/material/form-field\";\r\nimport { WsService } from \"../services/ws.service\";\r\nimport { Capability } from \"./capabilities/capability\";\r\nimport { CapabilityType } from \"./capabilities/capability-type\";\r\nimport { Factory } from \"./factory\";\r\nimport { Material } from \"./material\";\r\nimport { MaterialType } from \"./material-type\";\r\nimport { SettingCapability } from \"./settings/setting-capability\";\r\nimport { SettingMaterial } from \"./settings/setting-material\";\r\nimport { Site } from \"./site\";\r\nimport { CapabilityState } from \"./states/capability-state\";\r\nimport { MaterialState } from \"./states/material-state\";\r\nimport { UnitState } from \"./states/unit-state\";\r\nimport { StatusState } from \"./states/status-state\";\r\nexport class Unit implements Material {\r\n  \r\n  id: string;\r\n  materials: Material[];\r\n  capabilities: Capability[] = [];\r\n  status: StatusState[] = [];\r\n  displayName: string;\r\n  materialType: MaterialType;\r\n  wsService: WsService;\r\n  site: Site;\r\n  unit: Unit;\r\n  constructor(settingMaterial: SettingMaterial, site: Site, wsService: WsService, factory: Factory ) {\r\n \r\n    this.unit = this;\r\n    this.site = site;\r\n    this.id = settingMaterial.id;\r\n    this.materials = [];\r\n    this.wsService = wsService;\r\n    this.materialType = MaterialType.Unit;\r\n\r\n   \r\n    this.displayName = settingMaterial.displayName;\r\n    settingMaterial.materials.forEach((settingMaterialChild: SettingMaterial) => {\r\n      let material: Material = factory.createMaterial(settingMaterialChild, site,this, this.wsService);\r\n\r\n      this.materials.push(material);\r\n    });\r\n \r\n    settingMaterial.capabilities.forEach((settingCapability: SettingCapability) => {\r\n      let capability: Capability = factory.createCapability(settingCapability);\r\n      capability.material = this;   \r\n      this.capabilities.push(capability);\r\n    });\r\n  }\r\n\r\n  hasCapability(capabilityType: CapabilityType): boolean {\r\n    let cap: Capability | undefined = this.capabilities.find((value: Capability) => { return value.capabilityType === capabilityType; });\r\n    return cap !== undefined;\r\n\r\n  }\r\n  getCapability<T extends Capability>(capabilityType: CapabilityType): T | undefined {\r\n    let cap: Capability | undefined = this.capabilities.find((value: Capability) => { return value.capabilityType === capabilityType; });\r\n    return <T>cap;\r\n\r\n  }\r\n  // Pour coder cette methode il faut au mmoins une deuxième capability qui ne soit pas du type recherché\r\n  hasMaterialWithCapability( materialType: MaterialType,capabilityType: CapabilityType) {\r\n  \r\n    let material: Material | undefined = this.getMaterial(materialType);\r\n    if (material != null) {\r\n      let cap = material.capabilities.find((value: Capability) => {\r\n        return (value.capabilityType == capabilityType);\r\n      });\r\n      if (cap != null) return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getMaterialCapability<T extends Capability>(materialType: MaterialType, capabilityType: CapabilityType): T | undefined {\r\n    let material: Material | undefined = this.getMaterial(materialType);\r\n    if (material != null) {\r\n      let cap = material.capabilities.find((value: Capability) => {\r\n        return (value.capabilityType == capabilityType);\r\n      });\r\n\r\n      if (cap != null) {\r\n        let result: T = <T>cap;\r\n        return result;\r\n      }\r\n        \r\n      \r\n    }\r\n    return undefined;\r\n  }\r\n \r\n  getMaterial(materialType: MaterialType): Material | undefined {\r\n    return this.materials.find((value: Material) => { return value.materialType == materialType; });\r\n  }\r\n\r\n \r\n  setState(unitState: UnitState) {\r\n    this.status = unitState.status;\r\n    unitState.capabilities.forEach((valueState: CapabilityState) => {\r\n      let cap: Capability | undefined = this.capabilities.find((valueCap: Capability) => { return valueCap.id === valueState.id; });\r\n      if (cap != null) {\r\n        cap.setState(valueState);\r\n      }\r\n    });\r\n    unitState.materials.forEach((valueState: MaterialState) => {\r\n      let mat: Material | undefined = this.materials.find((valueMat: Material) => { return valueMat.id === valueState.id; });\r\n      if (mat != null) {\r\n        mat.setState(valueState);\r\n      }\r\n    });\r\n  \r\n  }\r\n\r\n}\r\n","export class ConfigurationNode {\r\n  public item: any;\r\n  public childs: ConfigurationNode[];\r\n  public selected: boolean = false;\r\n  constructor(item: any,  childs: ConfigurationNode[]) {\r\n    this.item = item;    \r\n    this.childs = childs;\r\n\r\n  }\r\n\r\n}\r\n","import { NestedTreeControl } from '@angular/cdk/tree';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatTreeNestedDataSource } from '@angular/material/tree';\r\nimport { Router } from '@angular/router';\r\nimport { SetSettingResponse } from '../../api/http/set-setting-response';\r\nimport { UnitCreateEmptyResponse } from '../../api/http/unit-create-empty-response';\r\nimport { SettingCapability } from '../../materials/settings/setting-capability';\r\nimport { SettingMaterial } from '../../materials/settings/setting-material';\r\nimport { SettingSite } from '../../materials/settings/setting-site';\r\nimport { SettingUnit } from '../../materials/settings/setting-unit';\r\nimport { Site } from '../../materials/site';\r\nimport { UnitType } from '../../models/unit-type';\r\nimport { HttpService } from '../../services/http.service';\r\nimport { SiteService } from '../../services/site.service';\r\nimport { ConfigurationNode } from './configuration-node';\r\n\r\n@Component({\r\n  selector: 'app-configuration',\r\n  templateUrl: './configuration.component.html',\r\n  styleUrls: ['./configuration.component.scss']\r\n})\r\nexport class ConfigurationComponent implements OnInit {\r\n\r\n  public site: SettingSite;\r\n  public errorMessage: string | undefined = undefined;\r\n  public unitTypes: UnitType[] = [];\r\n  private rootNode: ConfigurationNode = new ConfigurationNode(null, []);\r\n  treeControl = new NestedTreeControl<ConfigurationNode>(node => node.childs);\r\n  dataSource = new MatTreeNestedDataSource<ConfigurationNode>();\r\n  public selectedNode: ConfigurationNode | undefined = undefined;\r\n  public selectedUnitTypeValue:string | undefined = undefined;\r\n\r\n  constructor(private siteService: SiteService, private router: Router, private httpService: HttpService) {\r\n    this.site = <SettingSite>JSON.parse(JSON.stringify(this.siteService.siteSetting));\r\n    this.unitTypes.push({\r\n      displayName: \"Seamos\",\r\n      value:\"SeamosUnit\"\r\n    });\r\n    this.unitTypes.push({\r\n      displayName: \"Nemosys\",\r\n      value: \"NemosysPelcoUnit\"\r\n    });\r\n    this.createTreeNodes();\r\n  }\r\n  \r\n\r\n  onAddUnitButtonClick() {\r\n    if (this.selectedUnitTypeValue != null) {\r\n      this.httpService.createEmptyUnit(this.selectedUnitTypeValue).subscribe({\r\n        next: (response: UnitCreateEmptyResponse) => {\r\n          this.site.units = this.site.units.concat([response.settingUnit]);         \r\n          this.createTreeNodes();\r\n          this.selectedNode = this.rootNode;   \r\n        },\r\n        error: (err: HttpErrorResponse) => {\r\n          this.errorMessage = err.message;\r\n          \r\n        },\r\n      });\r\n\r\n    }\r\n  }\r\n  onRemoveSelectedNodeButtonClick() {\r\n    if (this.selectedNode != null) {\r\n      let index: number = this.site.units.indexOf(this.selectedNode.item);\r\n      this.site.units.splice(index, 1);\r\n      this.createTreeNodes();\r\n      this.selectedNode = this.rootNode;   \r\n    }\r\n  }\r\n  findParent(node: ConfigurationNode, searchNode: ConfigurationNode): ConfigurationNode | undefined {\r\n    if (node.childs.indexOf(searchNode) != -1) return node;\r\n    else {\r\n      let result: ConfigurationNode | undefined = undefined;\r\n      node.childs.forEach((child: ConfigurationNode) => {\r\n        let findedParent: ConfigurationNode | undefined = this.findParent(child, searchNode);\r\n        if (findedParent != null) {\r\n          result = findedParent;\r\n        }\r\n      });\r\n      return result;\r\n    }\r\n    \r\n  }\r\n\r\n  selectNode(node: ConfigurationNode) {\r\n    this.deselectChild(this.rootNode);\r\n    node.selected = true;\r\n    this.selectedNode = node;\r\n\r\n  }\r\n  deselectChild(node: ConfigurationNode) {\r\n    node.selected = false;\r\n    node.childs.forEach((n: ConfigurationNode) => {\r\n      n.selected = false;\r\n      this.deselectChild(n);\r\n    });\r\n\r\n  }\r\n  createTreeNodes() {\r\n    let childs: ConfigurationNode[] = [];\r\n    this.site.units.forEach((settingUnit: SettingUnit) => {\r\n      let node: ConfigurationNode = new ConfigurationNode(settingUnit, this.createUnitChild(settingUnit));\r\n      childs.push(node);\r\n    });\r\n    this.site.capabilities.forEach((settingCapability: SettingCapability) => {\r\n      let props = Object.getOwnPropertyNames(settingCapability);\r\n      if (props.length > 5) {\r\n        let node: ConfigurationNode = new ConfigurationNode(settingCapability, []);\r\n        childs.push(node);\r\n      }\r\n      \r\n    });\r\n    this.rootNode = new ConfigurationNode(this.site, childs);\r\n    this.rootNode.selected = true;\r\n    this.dataSource.data = [this.rootNode];\r\n    \r\n  }\r\n  createUnitChild(settingUnit: SettingUnit): ConfigurationNode[] {\r\n    let childs: ConfigurationNode[] = [];\r\n    \r\n    settingUnit.capabilities.forEach((settingCapability: SettingCapability) => {\r\n      let props = Object.getOwnPropertyNames(settingCapability);\r\n      if (props.length > 5) {\r\n        let node: ConfigurationNode = new ConfigurationNode(settingCapability,  []);\r\n        childs.push(node);\r\n      }\r\n    \r\n    });\r\n    \r\n    settingUnit.materials.forEach((settingMaterial: SettingMaterial) => {\r\n      let node: ConfigurationNode = new ConfigurationNode(settingMaterial, this.createMaterialChild(settingMaterial));\r\n      childs.push(node);\r\n    });\r\n    return childs;\r\n  }\r\n  createMaterialChild(settingMaterial: SettingMaterial): ConfigurationNode[] {\r\n    let childs: ConfigurationNode[] = [];\r\n    \r\n    settingMaterial.capabilities.forEach((settingCapability: SettingCapability) => {\r\n      let props = Object.getOwnPropertyNames(settingCapability);\r\n      if (props.length > 5) {\r\n        let node: ConfigurationNode = new ConfigurationNode(settingCapability,  []);\r\n        childs.push(node);\r\n      }\r\n     \r\n    });\r\n    \r\n    settingMaterial.materials.forEach((settingMaterialChild: SettingMaterial) => {\r\n      let node: ConfigurationNode = new ConfigurationNode(settingMaterialChild, this.createMaterialChild(settingMaterialChild));\r\n      childs.push(node);\r\n    });\r\n\r\n    return childs;\r\n  }\r\n\r\n  hasChild = (_: number, node: ConfigurationNode) => !!node.childs && node.childs.length > 0;\r\n  ngOnInit(): void {\r\n\r\n  }\r\n  onCancelButtonClick() {\r\n    this.router.navigate(['/home']);\r\n  }\r\n  onApplyButtonClick() {\r\n    this.httpService.setSetting(this.site).subscribe({\r\n      next: (response: SetSettingResponse) => {\r\n        this.router.navigate(['/home']);\r\n      },\r\n      error: (err: HttpErrorResponse) => {\r\n        this.errorMessage = err.message;\r\n\r\n      },\r\n    });\r\n\r\n  }\r\n}\r\n","<mat-card class=\"card-configuration\">\r\n  <mat-card-header>\r\n    <mat-card-title><mat-icon class=\"icon-title\">face</mat-icon>Configuration</mat-card-title>\r\n    <mat-card-subtitle>Configure Seasense</mat-card-subtitle>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <form class=\"display-flex flex-1\">\r\n      <div class=\"configuration-tree-container\">\r\n        <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" class=\"configuration-tree\">\r\n          <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle>\r\n            <button mat-button (click)=\"selectNode(node)\">\r\n              <div [class]=\"node.selected == true ? 'node-bold' : 'node-normal'\">{{node.item.displayName}}</div>\r\n\r\n            </button>\r\n          </mat-tree-node>\r\n          <mat-nested-tree-node *matTreeNodeDef=\"let node; when: hasChild\">\r\n            <div class=\"mat-tree-node\">\r\n              <button mat-icon-button matTreeNodeToggle\r\n                      [attr.aria-label]=\"'Toggle ' + node.name\">\r\n                <mat-icon class=\"mat-icon-rtl-mirror\">\r\n                  {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\r\n                </mat-icon>\r\n              </button>\r\n              <button mat-button (click)=\"selectNode(node)\">\r\n                <div [class]=\"node.selected == true ? 'node-bold' : 'node-normal'\">{{node.item.displayName}}</div>\r\n              </button>\r\n            </div>\r\n            <div [class.configuration-tree-invisible]=\"!treeControl.isExpanded(node)\"\r\n                 role=\"group\">\r\n              <ng-container matTreeNodeOutlet></ng-container>\r\n            </div>\r\n          </mat-nested-tree-node>\r\n        </mat-tree>\r\n      </div>\r\n      <mat-divider vertical=\"true\"></mat-divider>\r\n      <div class=\"flex-1 display-flex flex-dir-col\">\r\n\r\n        <mat-card *ngIf=\"selectedNode != null\" class=\"display-flex flex-1 mat-elevation-z0 flex-dir-col\">\r\n          <mat-card-header>\r\n            <mat-card-title>{{selectedNode.item.displayName}}</mat-card-title>\r\n          </mat-card-header>\r\n          <mat-card-content class=\"full-size flex-1 display-flex\">\r\n\r\n            <!------------------------------------------  SettingSite  -------------------------------------------------->\r\n            <div class=\"full-size display-flex\" *ngIf=\"selectedNode.item.type == 'SettingSite'\">\r\n              <div class=\"flex-1 display-flex flex-dir-col\">\r\n                <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                  <mat-label>Display name</mat-label>\r\n                  <input name=\"displayName\" matInput [(ngModel)]=\"selectedNode.item.displayName\">\r\n                </mat-form-field>\r\n\r\n                <div class=\"flex-1\"></div>\r\n                <div class=\"flex-dir-row display-flex flex-align-center\">\r\n                  <mat-label class=\"margin-4\">Add unit of type </mat-label>\r\n                  <mat-select class=\"flex-1 margin-4\" [(value)]=\"selectedUnitTypeValue\">\r\n                    <mat-option *ngFor=\"let unitType of unitTypes\" [value]=\"unitType.value\">\r\n                      {{unitType.displayName}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                  <button class=\"flex-1 margin-4\" [disabled]=\"selectedUnitTypeValue == null\" (click)=\"onAddUnitButtonClick()\" mat-button>Add</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!------------------------------------------  SettingSeamosUnit  -------------------------------------------------->\r\n            <div class=\"full-size display-flex flex-dir-col\" *ngIf=\"selectedNode.item.type == 'SettingSeamosUnit'\">\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Display name</mat-label>\r\n                <input name=\"displayName\" matInput [(ngModel)]=\"selectedNode.item.displayName\">\r\n              </mat-form-field>\r\n\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Hardware IP</mat-label>\r\n                <input name=\"hardwareIP\" matInput [(ngModel)]=\"selectedNode.item.hardwareCardIp\">\r\n              </mat-form-field>\r\n\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Hardware Port</mat-label>\r\n                <input name=\"hardwarePort\" matInput [(ngModel)]=\"selectedNode.item.hardwareCardPort\">\r\n              </mat-form-field>\r\n              <div class=\"flex-1\"></div>\r\n              <button class=\"full-width\" (click)=\"onRemoveSelectedNodeButtonClick()\" mat-button>Remove this unit</button>\r\n            </div>\r\n\r\n            <!------------------------------------------  SettingSeamosDayCamera  -------------------------------------------------->\r\n            <div class=\"full-size display-flex flex-dir-col\" *ngIf=\"selectedNode.item.type == 'SettingSeamosDayCamera'\">\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Display name</mat-label>\r\n                <input name=\"displayName\" matInput [(ngModel)]=\"selectedNode.item.displayName\">\r\n              </mat-form-field>\r\n\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Base URL</mat-label>\r\n                <input name=\"baseUrl\" matInput [(ngModel)]=\"selectedNode.item.baseUrl\">\r\n              </mat-form-field>\r\n\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Stream URL</mat-label>\r\n                <input name=\"streamUrl\" matInput [(ngModel)]=\"selectedNode.item.streamUrl\">\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <!------------------------------------------  SettingSeamosThermalCamera  -------------------------------------------------->\r\n            <div class=\"full-size display-flex flex-dir-col\" *ngIf=\"selectedNode.item.type == 'SettingSeamosThermalCamera'\">\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Display name</mat-label>\r\n                <input name=\"displayName\" matInput [(ngModel)]=\"selectedNode.item.displayName\">\r\n              </mat-form-field>\r\n\r\n\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Stream URL</mat-label>\r\n                <input name=\"streamUrl\" matInput [(ngModel)]=\"selectedNode.item.streamUrl\">\r\n              </mat-form-field>\r\n            </div>\r\n\r\n\r\n            <!------------------------------------------  SettingSeamosInertialMeasurement  -------------------------------------------------->\r\n\r\n            <div class=\"full-size display-flex\" *ngIf=\"selectedNode.item.type == 'SettingSeamosInertialMeasurement'\">\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Display name</mat-label>\r\n                <input name=\"displayName\" matInput [(ngModel)]=\"selectedNode.item.displayName\">\r\n              </mat-form-field>\r\n            </div>\r\n\r\n\r\n            <!------------------------------------------  SettingSeamosLazerMeasurement  -------------------------------------------------->\r\n            <div class=\"full-size display-flex\" *ngIf=\"selectedNode.item.type == 'SettingSeamosLazerMeasurement'\">\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Display name</mat-label>\r\n                <input name=\"displayName\" matInput [(ngModel)]=\"selectedNode.item.displayName\">\r\n              </mat-form-field>\r\n            </div>\r\n\r\n\r\n\r\n            <!------------------------------------------  SettingSeamosTurret  -------------------------------------------------->\r\n            <div class=\"full-size display-flex\" *ngIf=\"selectedNode.item.type == 'SettingSeamosTurret'\">\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Display name</mat-label>\r\n                <input name=\"displayName\" matInput [(ngModel)]=\"selectedNode.item.displayName\">\r\n              </mat-form-field>\r\n            </div>\r\n\r\n\r\n\r\n            <!------------------------------------------  SettingSeamosTurretMoveSpeedCapability  -------------------------------------------------->\r\n            <div class=\"full-size display-flex\" *ngIf=\"selectedNode.item.type == 'SettingSeamosTurretMoveSpeedCapability'\">\r\n              <div class=\"flex-1 display-flex flex-dir-col\">\r\n                <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                  <mat-label>Max Pan Speed (°/sec)</mat-label>\r\n                  <input name=\"maxPanSpeed\" matInput [(ngModel)]=\"selectedNode.item.maxPanSpeed\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                  <mat-label>Max Tilt Speed  (°/sec)</mat-label>\r\n                  <input name=\"maxTiltSpeed\" matInput [(ngModel)]=\"selectedNode.item.maxTiltSpeed\">\r\n\r\n                </mat-form-field>\r\n              </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n            <!------------------------------------------  SettingNemosysPelcoUnit  -------------------------------------------------->\r\n            <div class=\"full-size display-flex flex-dir-col\" *ngIf=\"selectedNode.item.type == 'SettingNemosysPelcoUnit'\">\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Display name</mat-label>\r\n                <input name=\"displayName\" matInput [(ngModel)]=\"selectedNode.item.displayName\">\r\n              </mat-form-field>\r\n\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Hardware IP</mat-label>\r\n                <input name=\"hardwareIP\" matInput [(ngModel)]=\"selectedNode.item.hardwareCardIp\">\r\n              </mat-form-field>\r\n\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Hardware Port</mat-label>\r\n                <input name=\"hardwarePort\" matInput [(ngModel)]=\"selectedNode.item.hardwareCardPort\">\r\n              </mat-form-field>\r\n              <div class=\"flex-1\"></div>\r\n              <button class=\"full-width\" (click)=\"onRemoveSelectedNodeButtonClick()\" mat-button>Remove this unit</button>\r\n            </div>\r\n\r\n            <!------------------------------------------  SettingNemosysPelcoDayCamera  -------------------------------------------------->\r\n            <div class=\"full-size display-flex flex-dir-col\" *ngIf=\"selectedNode.item.type == 'SettingNemosysPelcoDayCamera'\">\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Display name</mat-label>\r\n                <input name=\"displayName\" matInput [(ngModel)]=\"selectedNode.item.displayName\">\r\n              </mat-form-field>\r\n\r\n\r\n\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Stream URL</mat-label>\r\n                <input name=\"streamUrl\" matInput [(ngModel)]=\"selectedNode.item.streamUrl\">\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <!------------------------------------------  SettingNemosysPelcoThermalCamera  -------------------------------------------------->\r\n            <div class=\"full-size display-flex flex-dir-col\" *ngIf=\"selectedNode.item.type == 'SettingNemosysPelcoThermalCamera'\">\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Display name</mat-label>\r\n                <input name=\"displayName\" matInput [(ngModel)]=\"selectedNode.item.displayName\">\r\n              </mat-form-field>\r\n\r\n\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Stream URL</mat-label>\r\n                <input name=\"streamUrl\" matInput [(ngModel)]=\"selectedNode.item.streamUrl\">\r\n              </mat-form-field>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n          </mat-card-content>\r\n        </mat-card>\r\n      </div>\r\n    </form>\r\n    <mat-error *ngIf=\"errorMessage != ''\">{{errorMessage}}</mat-error>\r\n  </mat-card-content>\r\n  <mat-card-actions>\r\n    <div class=\"display-flex\">\r\n      <button class=\"full-width\" (click)=\"onCancelButtonClick()\" mat-button>Cancel</button>\r\n      <button class=\"full-width\" (click)=\"onApplyButtonClick()\" mat-button>Apply</button>\r\n    </div>\r\n  </mat-card-actions>\r\n</mat-card>\r\n\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { GetSettingResponse } from '../../api/http/get-setting-response';\r\n\r\nimport { HttpService } from '../../services/http.service';\r\nimport { SiteService } from '../../services/site.service';\r\nimport { UiService } from '../../services/ui.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit, OnDestroy {\r\n\r\n  public isPanelCameraVisible: boolean = false;\r\n  private showPanelCameraSubscription: Subscription;\r\n\r\n  public isPanelMediaVisible: boolean = false;\r\n  private showPanelMediaSubscription: Subscription;\r\n\r\n  public isPanelSavVisible: boolean = false;\r\n  private showPanelSavSubscription: Subscription;\r\n\r\n\r\n  constructor(private httpService: HttpService, private siteService: SiteService, private uiService: UiService) {\r\n    this.showPanelCameraSubscription = this.uiService.showPanelCameraSubject.subscribe((value: boolean) => { this.isPanelCameraVisible = value; });\r\n    this.showPanelMediaSubscription = this.uiService.showPanelMediaSubject.subscribe((value: boolean) => { this.isPanelMediaVisible = value; });\r\n    this.showPanelSavSubscription = this.uiService.showPanelSavSubject.subscribe((value: boolean) => { this.isPanelSavVisible = value; });\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.showPanelCameraSubscription.unsubscribe();\r\n    this.showPanelMediaSubscription.unsubscribe();\r\n    this.showPanelSavSubscription.unsubscribe();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.httpService.getSetting().subscribe({\r\n      next: (response: GetSettingResponse) => {\r\n        this.siteService.createSite(response);        \r\n      },\r\n      error: (err: HttpErrorResponse) => {        \r\n      },\r\n    });  \r\n  }\r\n \r\n}\r\n","<app-hud-stream   class=\"unselectable\"></app-hud-stream>\r\n<app-hud-info class=\"unselectable\"></app-hud-info>\r\n<app-hud-ruller-pan class=\"unselectable\"></app-hud-ruller-pan>\r\n<app-hud-ruller-tilt class=\"unselectable\"></app-hud-ruller-tilt>\r\n<app-hud-status class=\"unselectable\"></app-hud-status>\r\n<app-hud-ui  class=\"unselectable\"></app-hud-ui>\r\n<app-panel-camera *ngIf=\"isPanelCameraVisible\"></app-panel-camera>\r\n<app-panel-media *ngIf=\"isPanelMediaVisible\"></app-panel-media>\r\n<app-panel-sav *ngIf=\"isPanelSavVisible\"></app-panel-sav>\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { sha512 } from 'js-sha512';\r\nimport { LoginResponse } from '../../api/http/login-response';\r\nimport { HttpService } from '../../services/http.service';\r\nimport { UserService } from '../../services/user.service';\r\nimport { WsService } from '../../services/ws.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  public login: string = \"sav\";\r\n  public password: string = \"sav\";\r\n  public loginRunning: boolean = false;\r\n  public errorMessage: string = \"\";\r\n\r\n  constructor(private httpService: HttpService, private userService: UserService, private router: Router, private wsService: WsService) {\r\n   \r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  async onConnectButtonClick() {\r\n    this.loginRunning = true;\r\n    this.userService.clearToken();\r\n    this.userService.clearUser();\r\n    this.errorMessage = \"\";\r\n    let hash: string = sha512(this.password);\r\n    this.httpService.login(this.login, hash).subscribe({\r\n      next: (response: LoginResponse) => {\r\n        this.userService.setToken(response.token);\r\n        this.userService.setUser(response.user);\r\n        this.loginRunning = false;\r\n        this.wsService.start();\r\n        this.router.navigate(['/home']);\r\n      },\r\n      error: (err: HttpErrorResponse) => {\r\n        this.errorMessage = err.message;\r\n        this.loginRunning = false;\r\n      },\r\n    });  \r\n    \r\n  }\r\n \r\n}\r\n\r\n","<mat-card class=\"card-login\">\r\n  <mat-card-header>   \r\n    <mat-card-title class=\"card-title\"><mat-icon class=\"card-icon-title\">face</mat-icon>Authentification</mat-card-title>\r\n    <mat-card-subtitle>Please identify yourself</mat-card-subtitle>\r\n  </mat-card-header>  \r\n  <mat-card-content>\r\n    <form>\r\n      <mat-form-field class=\"full-width\">\r\n        <mat-label>Login</mat-label>\r\n        <input [disabled]=\"loginRunning\" name=\"login\" [(ngModel)]=\"login\" matInput>\r\n      </mat-form-field>\r\n      <mat-form-field class=\"full-width\">\r\n        <mat-label>Password</mat-label>\r\n        <input [disabled]=\"loginRunning\" name=\"password\" [(ngModel)]=\"password\" type=\"password\" matInput>\r\n      </mat-form-field>\r\n    </form>\r\n    <mat-error *ngIf=\"errorMessage != ''\">{{errorMessage}}</mat-error>\r\n  </mat-card-content>\r\n  <mat-card-actions>\r\n    <button [disabled]=\"loginRunning\" class=\"full-width\" (click)=\"onConnectButtonClick()\" mat-button>Connect</button>\r\n\r\n  </mat-card-actions>\r\n</mat-card>\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { Vector2 }  from '../models/vector2';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GamepadService {\r\n\r\n  private initialized: boolean = false;\r\n  public gamepadAxisSubject: Subject<Vector2> = new Subject<Vector2>();\r\n  \r\n  private gamePad: Gamepad | null = null;\r\n  private lastX: number = 0;\r\n  private lastY: number = 0;\r\n  constructor() {\r\n   \r\n  }\r\n\r\n  public initialize() {\r\n    if (this.initialized == false) {\r\n      window.addEventListener(\"gamepadconnected\", (e) => {\r\n        this.gamePad = e.gamepad;\r\n      });\r\n      window.addEventListener(\"gamepaddisconnected\",  (e)=> {      \r\n          this.gamePad = null;\r\n      });\r\n      setInterval(() => { this.gamePadLoop(); }, 100);\r\n      this.initialized = true;\r\n    }\r\n\r\n  }\r\n  gamePadLoop() {\r\n    let index = 0;\r\n    let pads: (Gamepad | null)[] = navigator.getGamepads();\r\n    let pad = pads.find((val: Gamepad | null) => { return val != null });    \r\n    if (pad == null) return;\r\n    let x = pad.axes[0];\r\n    let y = pad.axes[1];\r\n    let hasMove: boolean = false;\r\n    if (Math.abs(x) > 0.1 ) {    \r\n      this.lastX = x;     \r\n      hasMove = true;\r\n    }\r\n    else {\r\n      if (this.lastX != 0 ) {\r\n       \r\n        this.lastX = 0;      \r\n        hasMove = true;\r\n      }\r\n    }\r\n\r\n\r\n    if ( Math.abs(y) > 0.1) {  \r\n      this.lastY = y;\r\n      hasMove = true;\r\n    }\r\n    else {\r\n      if  (this.lastY != 0) {             \r\n        this.lastY = 0;\r\n        hasMove = true;\r\n      }\r\n    }\r\n    if (hasMove) {\r\n      this.gamepadAxisSubject.next({\r\n        x: this.lastX,\r\n        y: this.lastY\r\n      });     \r\n    }\r\n   \r\n    \r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { LoginRequest } from '../api/http/login-request';\r\nimport { LoginResponse } from '../api/http/login-response';\r\nimport { Observable } from 'rxjs';\r\nimport { ValidateTokenResponse } from '../api/http/validate-token-response';\r\nimport { ValidateTokenRequest } from '../api/http/validate-token-request';\r\nimport { LogoutResponse } from '../api/http/logout-response';\r\nimport { LogoutRequest } from '../api/http/logout-request';\r\nimport { GetSettingResponse } from '../api/http/get-setting-response';\r\nimport { GetSettingRequest } from '../api/http/get-setting-request';\r\nimport { SetSettingResponse } from '../api/http/set-setting-response';\r\nimport { SettingSite } from '../materials/settings/setting-site';\r\nimport { SetSettingRequest } from '../api/http/set-setting-request';\r\nimport { UnitCreateEmptyResponse } from '../api/http/unit-create-empty-response';\r\nimport { UnitCreateEmptyRequest } from '../api/http/unit-create-empty-request';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpService {\r\n  private baseApiUrl: string = \"\";\r\n  private headers: HttpHeaders;\r\n  constructor(private http: HttpClient) {\r\n    this.headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\r\n  }\r\n  getApiUrl(path : string): string{\r\n    if (this.baseApiUrl == \"\") {\r\n      let url: string = \"\";\r\n      if (location.protocol !== 'https:') {\r\n        url += \"http://\";\r\n      }\r\n      else {\r\n        url += \"https://\";\r\n      }\r\n      url += window.location.hostname;\r\n      url += \":\";\r\n      url += window.location.port;\r\n      url += \"/api/\";     \r\n      this.baseApiUrl = url;\r\n    }\r\n \r\n    return this.baseApiUrl + path;\r\n  }\r\n  login(login: string, hash: string): Observable<LoginResponse> {\r\n    let url: string = this.getApiUrl(\"login\");\r\n    let req: LoginRequest = {\r\n      login: login,\r\n      passwordHash: hash\r\n    };\r\n    return this.http.post<LoginResponse>(url, req, { headers: this.headers });\r\n  }\r\n\r\n  logout(): Observable<LogoutResponse> {\r\n    let url: string = this.getApiUrl(\"logout\");\r\n    let req: LogoutRequest = { };\r\n    return this.http.post<LogoutResponse>(url, req, { headers: this.headers });\r\n  }\r\n\r\n  validateToken(): Observable<ValidateTokenResponse> {\r\n    let url: string = this.getApiUrl(\"token/validate\");\r\n    let req: ValidateTokenRequest = {};\r\n    return this.http.post<ValidateTokenResponse>(url, req, { headers: this.headers });\r\n  }\r\n  getSetting(): Observable<GetSettingResponse> {\r\n    let url: string = this.getApiUrl(\"setting/get\");\r\n    let req: GetSettingRequest = {};\r\n    return this.http.post<GetSettingResponse>(url, req,{ headers: this.headers });\r\n  }\r\n\r\n  setSetting(settingSite: SettingSite): Observable<SetSettingResponse> {\r\n    let url: string = this.getApiUrl(\"setting/set\");\r\n    let req: SetSettingRequest = {\r\n      site: settingSite\r\n    };\r\n    return this.http.post<SetSettingResponse>(url, req, { headers: this.headers });\r\n  }\r\n\r\n  createEmptyUnit(unitType: string): Observable<UnitCreateEmptyResponse> {\r\n    let url: string = this.getApiUrl(\"unit/create/empty\");\r\n    let req: UnitCreateEmptyRequest = {\r\n      unitType: unitType\r\n    };\r\n    return this.http.post<UnitCreateEmptyResponse>(url, req, { headers: this.headers });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { GetSettingResponse } from '../api/http/get-setting-response';\r\nimport { Camera } from '../materials/camera';\r\nimport { Factory } from '../materials/factory';\r\nimport { Material } from '../materials/material';\r\nimport { MaterialType } from '../materials/material-type';\r\nimport { SettingSite } from '../materials/settings/setting-site';\r\nimport { Site } from '../materials/site';\r\nimport { SiteState } from '../materials/states/site-state';\r\nimport { Unit } from '../materials/unit';\r\nimport { WsService } from './ws.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SiteService {\r\n \r\n\r\n  public siteStateSubject: Subject<Site | undefined> = new Subject<Site | undefined>();\r\n  public siteLoadedSubject: Subject<Site | undefined> = new Subject<Site | undefined>();\r\n  public unitSelectedSubject: Subject<Unit | undefined> = new Subject<Unit | undefined>();\r\n  public cameraSelectedSubject: Subject<Camera | undefined> = new Subject<Camera | undefined>();\r\n  public site: Site | undefined = undefined;\r\n  public selectedUnit: Unit | undefined = undefined;\r\n  public selectedCamera: Camera | undefined = undefined;\r\n  public siteSetting: SettingSite = {\r\n    id: 'none',\r\n    capabilities:[],\r\n    units: [],\r\n    type: 'Site',\r\n    displayName:'Site'\r\n  };\r\n  constructor(private wsService: WsService) {\r\n\r\n    this.wsService.siteStateSubject.subscribe((value: SiteState) => { this.onStateChange(value); });\r\n  }\r\n  onStateChange(siteState: SiteState) {\r\n    if (this.site != null) {\r\n      this.site.setState(siteState);\r\n      this.siteStateSubject.next(this.site);\r\n    }   \r\n  }\r\n  selectNextCamera(): Camera | undefined{\r\n    if (this.selectedUnit == null) return;\r\n    if (this.selectedCamera == null) return;\r\n  \r\n    let cameraCount = 0;\r\n    let cameras: Camera[] = [];\r\n    this.selectedUnit.materials.forEach((value: Material) => {\r\n      if (value.materialType == MaterialType.DayCamera || value.materialType == MaterialType.ThermalCamera) {\r\n        cameraCount++;\r\n        cameras.push(<Camera>value);\r\n      }\r\n    });\r\n    let index: number = cameras.indexOf(this.selectedCamera);\r\n    if (index == -1) return;\r\n    let targetIndex: number = index + 1;\r\n    if (targetIndex > cameraCount -1) {\r\n      targetIndex = 0;\r\n    }\r\n    this.selectedCamera = cameras[targetIndex];\r\n    this.cameraSelectedSubject.next(this.selectedCamera);\r\n    return this.selectedCamera;\r\n  }\r\n  createSite(response: GetSettingResponse) {\r\n    this.site = undefined;    \r\n    if (response.site != null) {\r\n      this.siteSetting = response.site;\r\n      let factory: Factory = new Factory();\r\n      this.site = new Site(response.site, this.wsService, factory);      \r\n    }   \r\n    if (this.site != null && this.site.units.length > 0) {\r\n      this.selectUnitById(this.site.units[0].id);\r\n      if (this.selectedUnit != null) {\r\n        let dayCamera: Camera = <Camera>this.selectedUnit.getMaterial(MaterialType.DayCamera)\r\n        if (dayCamera != null) {\r\n          this.selectedCamera = dayCamera;\r\n        }\r\n        else {\r\n\r\n          let thermalCamera: Camera = <Camera>this.selectedUnit.getMaterial(MaterialType.ThermalCamera)\r\n          if (thermalCamera != null) {\r\n            this.selectedCamera = thermalCamera;          \r\n          }\r\n          else {\r\n            this.selectedCamera = undefined;          \r\n          }\r\n        }\r\n       \r\n      }\r\n    }\r\n    this.siteLoadedSubject.next(this.site);\r\n    this.unitSelectedSubject.next(this.selectedUnit);\r\n    this.cameraSelectedSubject.next(this.selectedCamera);\r\n  }\r\n\r\n  selectUnitById(unitId: string) {\r\n    let unit: Unit | undefined = this.site?.units.find((value: Unit) => {\r\n      return value.id == unitId;\r\n    });\r\n    this.selectedUnit = unit;    \r\n  }\r\n\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UiService {\r\n  \r\n\r\n  public showPipZoomSubject: Subject<boolean> = new Subject<boolean>();\r\n  public mousePan: number | null = null;\r\n  public mouseTilt: number | null = null;\r\n  public displayStreamWidth: number | null = null;\r\n  public displayStreamHeight: number | null = null;\r\n  public showPanelCameraSubject: Subject<boolean> = new Subject<boolean>();\r\n  public showPanelMediaSubject: Subject<boolean> = new Subject<boolean>();\r\n  public showPanelSavSubject: Subject<boolean> = new Subject<boolean>();\r\n  public isLeftTorightSubject: Subject<boolean> = new Subject<boolean>();\r\n  public mediaChangeSubject: Subject<boolean> = new Subject<boolean>();\r\n  private isPipZoomVisible: boolean = false;\r\n  private isPanelCameraVisible: boolean = false;\r\n  private isPanelMediaVisible: boolean = false;\r\n  private isPanelSavVisible: boolean = false;\r\n  private isleftToRight: boolean = true;\r\n  constructor() { }\r\n\r\n  switchLeftToRight() {\r\n    this.isleftToRight = !this.isleftToRight;\r\n    this.isLeftTorightSubject.next(this.isleftToRight);\r\n  }\r\n\r\n  showHidePipZoom() {\r\n    this.isPipZoomVisible = !this.isPipZoomVisible;\r\n    this.showPipZoomSubject.next(this.isPipZoomVisible);\r\n  }\r\n\r\n  showPanelCamera() {\r\n    this.hidePanelMedia();\r\n    this.hidePanelSav();\r\n    this.isPanelCameraVisible = true;\r\n    this.showPanelCameraSubject.next(this.isPanelCameraVisible);\r\n  }\r\n  hidePanelCamera() {\r\n    this.isPanelCameraVisible = false;\r\n    this.showPanelCameraSubject.next(this.isPanelCameraVisible);\r\n  }\r\n\r\n  hidePanelMedia() {\r\n    this.isPanelMediaVisible = false;\r\n    this.showPanelMediaSubject.next(this.isPanelMediaVisible);\r\n  }\r\n  showPanelMedia() {\r\n    this.hidePanelSav();\r\n    this.hidePanelCamera();\r\n    this.isPanelMediaVisible = true;\r\n    this.showPanelMediaSubject.next(this.isPanelMediaVisible);\r\n  }\r\n  hidePanelSav() {\r\n    this.isPanelSavVisible = false;\r\n    this.showPanelSavSubject.next(this.isPanelSavVisible);\r\n  }\r\n  showPanelSav() {\r\n    this.hidePanelCamera ();\r\n    this.hidePanelMedia ();\r\n    this.isPanelSavVisible = true;\r\n    this.showPanelSavSubject.next(this.isPanelSavVisible);\r\n  }\r\n  notifyMediaChange(delay: number) {    \r\n    setTimeout(() => {\r\n      this.mediaChangeSubject.next(true);\r\n    }, delay);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { User } from '../models/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  \r\n  localStorage: Storage;\r\n  user: User | null;\r\n  token: string | null;\r\n  constructor() {\r\n    this.user = null;\r\n    this.token = null;\r\n    this.localStorage = window.localStorage;\r\n  }\r\n  clearUser() {\r\n    this.user = null;\r\n  }\r\n  clearToken() {\r\n    this.token = null;\r\n  }\r\n\r\n  setUser(user: User) {\r\n    this.user = user;\r\n    \r\n  }\r\n  setToken(token: string) {\r\n    this.token = token;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { WsTurretMoveSpeedRequest } from '../api/ws/ws-turret-move-speed-request';\r\nimport { UserService } from './user.service';\r\nimport * as uuid from 'uuid';\r\nimport { WsGetStateRequest } from '../api/ws/ws-get-state-request';\r\nimport { WsGetStateResponse } from '../api/ws/ws-get-state-response';\r\nimport { Factory } from '../materials/factory';\r\nimport { WsResponse } from '../api/ws/ws-response';\r\nimport { SiteState } from '../materials/states/site-state';\r\nimport { Subject } from 'rxjs';\r\nimport { WsCameraZoomOutStartRequest } from '../api/ws/ws-camera-zoom-out-start-request';\r\nimport { WsCameraZoomStopRequest } from '../api/ws/ws-camera-zoom-stop-request';\r\nimport { WsCameraZoomInStartRequest } from '../api/ws/ws-camera-zoom-in-start-request';\r\nimport { WsTurretGyrostabilizationRequest } from '../api/ws/ws-turret-gyrostabilization-request';\r\nimport { WsCameraAutoFocusOnePushRequest } from '../api/ws/ws-camera-auto-focus-one-push-request';\r\nimport { WsLazerMeasurementShootRequest } from '../api/ws/ws-lazer-measurement-shoot-request';\r\nimport { WsDoubleValueSetRequest } from '../api/ws/ws-double-value-set-request';\r\nimport { SwitchValue } from '../models/switch-value';\r\nimport { WsSwitchValueSetRequest } from '../api/ws/ws-switch-value-set-request';\r\nimport { WsCameraScreenshotRequest } from '../api/ws/ws-camera-screeneshot-request';\r\nimport { WsTurretMoveAbsoluteRequest } from '../api/ws/ws-turret-move-absolute-request';\r\nimport { WsGetMediaListRequest } from '../api/ws/ws-get-media-list-request';\r\nimport { WsGetMediaListResponse } from '../api/ws/ws-get-media-list-response';\r\nimport { MediaFile } from '../models/media-file';\r\nimport { WsCameraScreenshotResponse } from '../api/ws/ws-camera-screeneshot-response';\r\nimport { WsCameraStartRecordRequest } from '../api/ws/ws-camera-start-record-request';\r\nimport { WsCameraStopRecordRequest } from '../api/ws/ws-camera-stop-record-request';\r\nimport { WsCameraStartRecordResponse } from '../api/ws/ws-camera-start-record-response';\r\nimport { WsDeleteMediaRequest } from '../api/ws/ws-delete-media-request';\r\nimport { WsUnitGetLastComMessageRequest } from '../api/ws/ws-unit-get-last-com-message-request';\r\nimport { WsUnitExecuteCommandRequest } from '../api/ws/ws-unit-execute-command-request';\r\nimport { WsUnitSetPollingStateRequest } from '../api/ws/ws-unit-set-polling-state-request';\r\nimport { WsUnitGetLastComMessageResponse } from '../api/ws/ws-unit-get-last-com-message-response';\r\nimport { WsCameraFocusOutStartRequest } from '../api/ws/ws-camera-focus-out-start-request';\r\nimport { WsCameraFocusInStartRequest } from '../api/ws/ws-camera-focus-in-start-request';\r\nimport { WsCameraFocusStopRequest } from '../api/ws/ws-camera-focus-stop-request';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WsService {\r\n  \r\n  public mediaFilesSubject: Subject<MediaFile[]> = new Subject<MediaFile[]>();\r\n  public siteStateSubject: Subject<SiteState> = new Subject<SiteState>();\r\n  public screenshootSubject: Subject<string> = new Subject<string>();\r\n  public latestComMessageSubject: Subject<string[]> = new Subject<string[]>();\r\n  public startRecordSubject: Subject<WsCameraStartRecordResponse> = new Subject<WsCameraStartRecordResponse>();\r\n  private stateTimer: any;\r\n  private stateInterval: number = 100;\r\n\r\n  constructor(private userService: UserService) {\r\n   \r\n  }\r\n  tryGetState() {\r\n    try { this.getStates(); }\r\n    catch {}\r\n\r\n  }\r\n\r\n \r\n  private socket: WebSocket | null = null;\r\n  start() {  \r\n \r\n    if (this.socket != null) {\r\n      this.socket.close();\r\n      this.socket = null;\r\n    }\r\n    let scheme = document.location.protocol === \"https:\" ? \"wss\" : \"ws\";\r\n    let port = document.location.port ? (\":\" + document.location.port) : \"\";\r\n    let connectionUrl = scheme + \"://\" + document.location.hostname + port + \"/ws\";\r\n    this.socket = new WebSocket(connectionUrl);\r\n    this.socket.onopen = (event) => {\r\n\r\n      this.wsOpen(event);\r\n    };\r\n    this.socket.onclose = async (event) => {\r\n      this.wsClose(event);\r\n    };\r\n    this.socket.onmessage = (event) => {\r\n      this.wsMessage(event);\r\n    };\r\n    this.socket.onerror = (event) => {\r\n      this.wsError(event);\r\n    };\r\n    this.stateTimer = setInterval(() => { this.tryGetState(); }, this.stateInterval);\r\n  }\r\n  wsError(event: Event) {\r\n    console.error(\"wsError\", event);\r\n  }\r\n\r\n  wsMessage(event: MessageEvent) {\r\n    if (event.data != null) {\r\n      let obj = JSON.parse(event.data);\r\n      if (obj.$type != null) {\r\n        let factory: Factory = new Factory()\r\n        let response: WsResponse = factory.createMessage(obj);\r\n        if (response.$type === 'WsGetStateResponse') {\r\n          this.siteStateSubject.next((<WsGetStateResponse>response).site)\r\n        } \r\n        if (response.$type === 'WsGetMediaListResponse') {\r\n          this.mediaFilesSubject.next((<WsGetMediaListResponse>response).files)\r\n        }\r\n        if (response.$type === 'WsCameraScreenshotResponse' && this.userService.user != null) {\r\n          let cameraScreenshotResponse: WsCameraScreenshotResponse = <WsCameraScreenshotResponse>response;\r\n          if (cameraScreenshotResponse.userLogin === this.userService.user.login) {\r\n            this.screenshootSubject.next(cameraScreenshotResponse.fileName);\r\n          }\r\n          \r\n        }\r\n\r\n        if (response.$type === 'WsCameraStartRecordResponse') {\r\n          this.startRecordSubject.next(<WsCameraStartRecordResponse>response)\r\n        }\r\n\r\n        if (response.$type === 'WsUnitGetLastComMessageResponse') {\r\n          this.latestComMessageSubject.next((<WsUnitGetLastComMessageResponse>response).messages);\r\n        }\r\n\r\n      }\r\n     \r\n    }\r\n    \r\n  }\r\n  async wsClose(event: CloseEvent) {\r\n    console.log(\"wsClose\", event);\r\n    \r\n\r\n  }\r\n  wsOpen(event: Event) {\r\n    console.log(\"wsOpen\", event);\r\n  }\r\n\r\n  stop() {\r\n    if (this.socket != null) {\r\n      this.socket.close();\r\n    }\r\n    clearInterval(this.stateTimer);\r\n  }\r\n  getStates() {\r\n    \r\n    if (this.userService.token == null) return;\r\n    let request: WsGetStateRequest = {\r\n      $type: \"WsGetStateRequest\",\r\n      requestId: uuid.v4(),  \r\n      token: this.userService.token\r\n    };\r\n    let data: string = JSON.stringify(request);\r\n \r\n    this.socket?.send(data);\r\n    \r\n  }\r\n\r\n  turretMoveSpeed(unitId: string, materialId: string, axisX: number, axisY: number) {\r\n    if (this.userService.token == null) return;\r\n    let request: WsTurretMoveSpeedRequest = {\r\n      $type: \"WsTurretMoveSpeedRequest\",\r\n      requestId: uuid.v4(),\r\n      unitId: unitId,\r\n      materialId: materialId,\r\n      speed: {\r\n        x: axisX,\r\n        y: axisY\r\n      },\r\n    \r\n      token: this.userService.token    \r\n    };\r\n    console.log(\"wsService send turretMoveSpeed \" + axisX + \" \" + axisY);\r\n    let data: string = JSON.stringify(request);   \r\n    this.socket?.send(data);\r\n\r\n  }\r\n\r\n  turretMoveAbsolute(unitId: string, materialId: string, pan: number, tilt: number) {\r\n    if (this.userService.token == null) return;\r\n    let request: WsTurretMoveAbsoluteRequest = {\r\n      $type: \"WsTurretMoveAbsoluteRequest\",\r\n      requestId: uuid.v4(),\r\n      unitId: unitId,\r\n      materialId: materialId,\r\n      position: {\r\n        pan: pan,\r\n        tilt:tilt\r\n      },    \r\n\r\n      token: this.userService.token\r\n    };\r\n    console.log(\"wsService send turretMoveAbsolute \" + pan + \" \" + tilt);\r\n    let data: string = JSON.stringify(request);\r\n    this.socket?.send(data);\r\n\r\n  }\r\n\r\n  cameraZoomStop(unitId: string, materialId: string) {\r\n    if (this.userService.token == null) return;\r\n    let request: WsCameraZoomStopRequest = {\r\n      $type: \"WsCameraZoomStopRequest\",\r\n      unitId: unitId,\r\n      requestId: uuid.v4(),\r\n      materialId: materialId,\r\n      token: this.userService.token\r\n     \r\n    };\r\n    console.log(\"WebSocket send stopZoom\");\r\n    let data: string = JSON.stringify(request);\r\n    this.socket?.send(data);\r\n  }\r\n  cameraZoomInStart(unitId: string, materialId: string) {\r\n    if (this.userService.token == null) return;\r\n    let request: WsCameraZoomInStartRequest = {\r\n      $type: \"WsCameraZoomInStartRequest\",\r\n      unitId: unitId,\r\n      requestId: uuid.v4(),\r\n      materialId: materialId,\r\n      token: this.userService.token\r\n    \r\n    };\r\n    console.log(\"WebSocket send cameraZoomInStart\");\r\n    let data: string = JSON.stringify(request);\r\n    this.socket?.send(data);\r\n  }\r\n  cameraZoomOutStart(unitId: string, materialId: string) {\r\n    if (this.userService.token == null) return;\r\n    let request: WsCameraZoomOutStartRequest = {\r\n      $type: \"WsCameraZoomOutStartRequest\",\r\n      unitId: unitId,\r\n      requestId: uuid.v4(),\r\n      materialId: materialId,\r\n      token: this.userService.token    \r\n    };\r\n    console.log(\"WebSocket send cameraZoomOutStart\");\r\n    let data: string = JSON.stringify(request);\r\n    this.socket?.send(data);\r\n  }\r\n\r\n  cameraFocusOutStart(unitId: string, materialId: string) {\r\n    if (this.userService.token == null) return;\r\n    let request: WsCameraFocusOutStartRequest = {\r\n      $type: \"WsCameraFocusOutStartRequest\",\r\n      unitId: unitId,\r\n      requestId: uuid.v4(),\r\n      materialId: materialId,\r\n      token: this.userService.token\r\n    };\r\n    console.log(\"WebSocket send WsCameraFocusOutStartRequest\");\r\n    let data: string = JSON.stringify(request);\r\n    this.socket?.send(data);\r\n  }\r\n  cameraFocusInStart(unitId: string, materialId: string) {\r\n    if (this.userService.token == null) return;\r\n    let request: WsCameraFocusInStartRequest = {\r\n      $type: \"WsCameraFocusInStartRequest\",\r\n      unitId: unitId,\r\n      requestId: uuid.v4(),\r\n      materialId: materialId,\r\n      token: this.userService.token\r\n     };\r\n    console.log(\"WebSocket send WsCameraFocusInStartRequest\");\r\n    let data: string = JSON.stringify(request);\r\n    this.socket?.send(data);    \r\n  }\r\n  cameraFocusStop(unitId: string, materialId: string) {\r\n    if (this.userService.token == null) return;\r\n    let request: WsCameraFocusStopRequest = {\r\n      $type: \"WsCameraFocusStopRequest\",\r\n      unitId: unitId,\r\n      requestId: uuid.v4(),\r\n      materialId: materialId,\r\n      token: this.userService.token\r\n    };\r\n    console.log(\"WebSocket send WsCameraFocusStopRequest\");\r\n    let data: string = JSON.stringify(request);\r\n    this.socket?.send(data);  \r\n  }\r\n\r\n\r\n\r\n  turretGyrostabilization(unitId: string, materialId: string, enabled: boolean) {\r\n    if (this.userService.token == null) return;\r\n    let request: WsTurretGyrostabilizationRequest = {\r\n      $type: \"WsTurretGyrostabilizationRequest\",\r\n      unitId: unitId,\r\n      requestId: uuid.v4(),\r\n      materialId: materialId,\r\n      token: this.userService.token,\r\n      enabled:enabled\r\n    };\r\n    console.log(\"WebSocket send WsTurretGyrostabilizationRequest\");\r\n    let data: string = JSON.stringify(request);\r\n    this.socket?.send(data);\r\n  }\r\n\r\n  cameraAutoFocusOnePush(unitId: string, materialId: string) {\r\n    if (this.userService.token == null) return;\r\n    let request: WsCameraAutoFocusOnePushRequest = {\r\n      $type: \"WsCameraAutoFocusOnePushRequest\",\r\n      unitId: unitId,\r\n      requestId: uuid.v4(),\r\n      materialId: materialId,\r\n      token: this.userService.token      \r\n    };\r\n    console.log(\"WebSocket send WsCameraAutoFocusOnePushRequest\");\r\n    let data: string = JSON.stringify(request);\r\n    this.socket?.send(data);\r\n  }\r\n\r\n  lazerMeasurementShoot(unitId: string, materialId: string) {\r\n    if (this.userService.token == null) return;\r\n    let request: WsLazerMeasurementShootRequest = {\r\n      $type: \"WsLazerMeasurementShootRequest\",\r\n      unitId: unitId,\r\n      requestId: uuid.v4(),\r\n      materialId: materialId,\r\n      token: this.userService.token\r\n    };\r\n    console.log(\"WebSocket send WsLazerMeasurementShootRequest\");\r\n    let data: string = JSON.stringify(request);\r\n    this.socket?.send(data);\r\n  }\r\n\r\n  doubleValueSet(unitId: string, materialId: string,capabilityId : string, value: number) {\r\n    if (this.userService.token == null) return;\r\n    let request: WsDoubleValueSetRequest = {\r\n      $type: \"WsDoubleValueSetRequest\",\r\n      unitId: unitId,\r\n      requestId: uuid.v4(),\r\n      materialId: materialId,\r\n      token: this.userService.token,\r\n      capabilityId: capabilityId,\r\n      value: value\r\n    };\r\n    console.log(\"WebSocket send WsDoubleValueSetRequest\");\r\n    let data: string = JSON.stringify(request);\r\n    this.socket?.send(data);\r\n\r\n  }\r\n\r\n  switchValueSet(unitId: string, materialId: string, capabilityId: string, value: SwitchValue) {\r\n\r\n    if (this.userService.token == null) return;\r\n    let request: WsSwitchValueSetRequest = {\r\n      $type: \"WsSwitchValueSetRequest\",\r\n      unitId: unitId,\r\n      requestId: uuid.v4(),\r\n      materialId: materialId,\r\n      token: this.userService.token,\r\n      capabilityId: capabilityId,\r\n      value: value.value\r\n    };\r\n    console.log(\"WebSocket send WsSwitchValueSetRequest\");\r\n    let data: string = JSON.stringify(request);\r\n    this.socket?.send(data);\r\n    \r\n\r\n  }\r\n\r\n  screenshot(unitId: string, materialId: string) {\r\n    if (this.userService.token == null) return;\r\n    let request: WsCameraScreenshotRequest = {\r\n      $type: \"WsCameraScreenshotRequest\",\r\n      unitId: unitId,\r\n      requestId: uuid.v4(),\r\n      materialId: materialId,\r\n      token: this.userService.token,\r\n      \r\n    };\r\n    console.log(\"WebSocket send WsCameraScreenshotRequest\");\r\n    let data: string = JSON.stringify(request);\r\n    this.socket?.send(data);\r\n  \r\n  }\r\n\r\n  startRecord(unitId: string, materialId: string)  : string | null{\r\n    let requestId: string = uuid.v4();\r\n    if (this.userService.token == null) return null;\r\n    let request: WsCameraStartRecordRequest = {\r\n      $type: \"WsCameraStartRecordRequest\",\r\n      unitId: unitId,\r\n      requestId: uuid.v4(),\r\n      materialId: materialId,\r\n      token: this.userService.token\r\n\r\n    };\r\n    console.log(\"WebSocket send WsCameraStartRecordRequest\");\r\n    let data: string = JSON.stringify(request);\r\n    this.socket?.send(data);\r\n    return requestId;\r\n  }\r\n\r\n\r\n  stopRecord(unitId: string, materialId: string,recordId : string) {\r\n    if (this.userService.token == null) return;\r\n    let request: WsCameraStopRecordRequest = {\r\n      $type: \"WsCameraStopRecordRequest\",\r\n      unitId: unitId,\r\n      requestId: uuid.v4(),\r\n      materialId: materialId,\r\n      recordId: recordId,\r\n      token: this.userService.token\r\n    };\r\n    console.log(\"WebSocket send WsCameraStopRecordRequest\");\r\n    let data: string = JSON.stringify(request);\r\n    this.socket?.send(data);\r\n  }\r\n  getMediaList() {\r\n    if (this.userService.token == null) return;\r\n    let request: WsGetMediaListRequest = {\r\n      $type: \"WsGetMediaListRequest\",    \r\n      requestId: uuid.v4(),   \r\n      token: this.userService.token,\r\n\r\n    };\r\n    console.log(\"WebSocket send WsGetMediaListRequest\");\r\n    let data: string = JSON.stringify(request);\r\n    this.socket?.send(data);\r\n\r\n  }\r\n\r\n  deleteMedia(fileName: string) {\r\n    \r\n    if (this.userService.token == null) return;\r\n    let request: WsDeleteMediaRequest = {\r\n      $type: \"WsDeleteMediaRequest\",\r\n      requestId: uuid.v4(),\r\n      token: this.userService.token,\r\n      fileName: fileName\r\n\r\n    };\r\n    console.log(\"WebSocket send WsDeleteMediaRequest\");\r\n    let data: string = JSON.stringify(request);\r\n    this.socket?.send(data);\r\n   \r\n  }\r\n  getLastComMessage(unitId: string) {\r\n    if (this.userService.token == null) return;\r\n    let request: WsUnitGetLastComMessageRequest = {\r\n      $type: \"WsUnitGetLastComMessageRequest\",\r\n      requestId: uuid.v4(),\r\n      token: this.userService.token,\r\n      unitId: unitId\r\n    };\r\n    console.log(\"WebSocket send WsUnitGetLastComMessageRequest\");\r\n    let data: string = JSON.stringify(request);\r\n    this.socket?.send(data);\r\n  }\r\n  executeCommand(unitId: string, command : string) {\r\n    if (this.userService.token == null) return;\r\n    let request: WsUnitExecuteCommandRequest = {\r\n      $type: \"WsUnitExecuteCommandRequest\",\r\n      requestId: uuid.v4(),\r\n      token: this.userService.token,\r\n      unitId: unitId,\r\n      command: command\r\n    };\r\n    console.log(\"WebSocket send WsUnitExecuteCommandRequest\");\r\n    let data: string = JSON.stringify(request);\r\n    this.socket?.send(data);\r\n  }\r\n  setPollingState(unitId: string, isPollingEnabled: boolean) {\r\n    if (this.userService.token == null) return;\r\n    let request: WsUnitSetPollingStateRequest = {\r\n      $type: \"WsUnitSetPollingStateRequest\",\r\n      requestId: uuid.v4(),\r\n      token: this.userService.token,\r\n      unitId: unitId,\r\n      isPollingEnabled: isPollingEnabled\r\n    };\r\n    console.log(\"WebSocket send WsUnitSetPollingStateRequest\");\r\n    let data: string = JSON.stringify(request);\r\n    this.socket?.send(data);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiServer: '/'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":["BrowserModule","AppRoutingModule","AppComponent","HomeComponent","LoginComponent","ConfigurationComponent","BrowserAnimationsModule","HeaderComponent","MatToolbarModule","MatCardModule","MatIconModule","MatButtonModule","MatInputModule","MatFormFieldModule","FormsModule","MatTabsModule","MatCheckboxModule","HttpService","MatTableModule","TextFieldModule","HttpClientModule","HTTP_INTERCEPTORS","UserService","JwtInterceptor","MatSelectModule","MatTreeModule","ScrollingModule","MatMenuModule","MatSnackBarModule","MatListModule","MatDividerModule","HudUiComponent","CdkTableModule","HudStreamComponent","MatSliderModule","HudStatusComponent","CompassComponent","StickComponent","HudButtonComponent","MatRippleModule","HudCheckComponent","HudRullerPanComponent","HudRullerTiltComponent","HudLrfButtonComponent","PanelCameraComponent","UiService","AsyncSliderComponent","MatButtonToggleModule","AsyncToggleGroupComponent","HudInfoComponent","PanelMediaComponent","PanelSavComponent","OverlayModule","httpInterceptorProviders","provide","useClass","multi","AppModule","bootstrap","imports","declarations","DoubleValueCapability","DoubleValueType","constructor","capability","capabilityType","displayName","doubleValueType","BlackLevel","id","maxValue","minValue","type","ngOnInit","selectors","inputs","decls","vars","consts","template","i0","ctx","SwitchValueCapability","SwitchValueType","item_r1","switchValueType","ExposureTimeMode","values","onToggleChnage","evt","finded","find","val","value","editValue","currentValue","uiService","siteService","undefined","cameraSelectedSubscription","cameraSelectedSubject","subscribe","camera","selectedCamera","updateVisibilityFlags","console","log","qualityCapability","getValueCapability","Quality","beginEdit","blackLevelCapability","exposureTimeModeCapability","getSwitchCapability","exposureTimeCapability","ExposureTime","gainModeCapability","GainMode","gainCapability","Gain","gammaCapability","Gamma","contrastCapability","Contrast","whiteBalanceCapability","WhiteBalance","whiteBalanceModeCapability","WhiteBalanceMode","luminosityCapability","Luminosity","meteoLocationCapability","MeteoLocation","_a","meteoTimeCapability","MeteoTime","_b","meteoWeatherCapability","MeteoWeather","_c","reticuleModeCapability","ReticuleMode","_d","shutterModeCapability","ShutterMode","_e","colorModeCapability","ColorMode","_f","onCloseClick","hidePanelCamera","ngOnDestroy","unsubscribe","sha512","httpService","userService","router","wsService","onConnectButtonClick","loginRunning","clearToken","clearUser","errorMessage","hash","password","login","next","response","setToken","token","setUser","user","start","navigate","error","err","message","uuid","Factory","Subject","WsService","tryGetState","getStates","socket","close","scheme","document","location","protocol","port","connectionUrl","hostname","WebSocket","onopen","event","wsOpen","onclose","wsClose","onmessage","wsMessage","onerror","wsError","stateTimer","setInterval","stateInterval","data","obj","JSON","parse","$type","factory","createMessage","siteStateSubject","site","mediaFilesSubject","files","cameraScreenshotResponse","userLogin","screenshootSubject","fileName","startRecordSubject","latestComMessageSubject","messages","stop","clearInterval","request","requestId","v4","stringify","send","turretMoveSpeed","unitId","materialId","axisX","axisY","speed","x","y","turretMoveAbsolute","pan","tilt","position","cameraZoomStop","cameraZoomInStart","cameraZoomOutStart","cameraFocusOutStart","cameraFocusInStart","cameraFocusStop","turretGyrostabilization","enabled","cameraAutoFocusOnePush","lazerMeasurementShoot","doubleValueSet","capabilityId","switchValueSet","screenshot","startRecord","stopRecord","recordId","getMediaList","deleteMedia","getLastComMessage","executeCommand","command","setPollingState","isPollingEnabled","providedIn"],"sourceRoot":"webpack:///"}