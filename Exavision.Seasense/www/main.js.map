{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/guards/jwt-guard.ts","./src/app/pages/configuration/configuration.component.ts","./src/app/pages/configuration/configuration.component.html","./src/app/pages/home/home.component.ts","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { JwtGuard } from './guards/jwt-guard';\r\nimport { ConfigurationComponent } from './pages/configuration/configuration.component';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\r\n  { path: 'home', component: HomeComponent, canActivate: [JwtGuard]},\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'configuration', component: ConfigurationComponent }  \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [\r\n    RouterModule,\r\n    MatTooltipModule\r\n  ]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'seasense-client';\r\n}\r\n","<app-header></app-header>\r\n<router-outlet></router-outlet>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { ConfigurationComponent } from './pages/configuration/configuration.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatCardModule } from '@angular/material/card';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    LoginComponent,\r\n    ConfigurationComponent,\r\n    HeaderComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatToolbarModule,\r\n    MatCardModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  onHomeClick() {\n  }\n}\n","<mat-toolbar color=\"primary\">\r\n  <div>\r\n    <div matTooltip=\"Go to home page\" (click)=\"onHomeClick()\" class=\"title\">Seasens</div>\r\n    <div matTooltip=\"Go to home page\" (click)=\"onHomeClick()\" class=\"sub-title\">By Exavision</div>\r\n  </div>\r\n</mat-toolbar>\r\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JwtGuard implements CanActivate {\n  constructor(private router: Router) { }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    console.log(\"Check JwtGuard\");\n    return this.router.parseUrl('/login');\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-configuration',\n  templateUrl: './configuration.component.html',\n  styleUrls: ['./configuration.component.scss']\n})\nexport class ConfigurationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>configuration works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card class=\"card-login\" color=\"primary\">Simple card</mat-card>\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":[],"sourceRoot":"webpack:///"}